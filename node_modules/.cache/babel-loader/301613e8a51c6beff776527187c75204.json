{"ast":null,"code":"import _classCallCheck from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Pomodoro.tsx\";\nimport * as React from 'react';\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchAllProjects as _fetchAllProjects, clearErrorMessage as _clearErrorMessage } from '../redux/actionCreators/project.action';\nimport { sessionService } from '../services/session.service';\nimport OptionList from '../components/List/OptionList';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectlist: state.project.list,\n    projectErrMess: state.project.errMess\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAllProjects: function fetchAllProjects(userId) {\n      dispatch(_fetchAllProjects(userId));\n    },\n    clearErrorMessage: function clearErrorMessage() {\n      dispatch(_clearErrorMessage());\n    }\n  };\n};\n\n;\n;\n\nvar Pomodoro =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pomodoro, _React$Component);\n\n  _createClass(Pomodoro, [{\n    key: \"CreateModal\",\n    //-----------------------------------\n    //Three functions for modals to create new pomodoro\n    value: function CreateModal() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        id: \"create_modal\",\n        show: this.state.create_show,\n        onHide: this.CreateModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Remaining time in current Active Pomodoro\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_hours\",\n        value: this.state.hours,\n        onChange: function onChange(e) {\n          _this2.setState({\n            hours: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_minutes\",\n        value: this.state.minutes,\n        onChange: function onChange(e) {\n          _this2.setState({\n            minutes: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_second\",\n        value: this.state.seconds,\n        onChange: function onChange(e) {\n          _this2.setState({\n            seconds: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \"second(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"project_select_box\",\n        value: this.state.associated_id,\n        onChange: this.ChangeSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" No association \"), this.props.projectlist.map(function (project, index) {\n        return React.createElement(OptionList, {\n          project: project,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"create_cancel_button\",\n        variant: \"secondary\",\n        onClick: this.CreateCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        id: \"create_confirm_button\",\n        variant: \"primary\",\n        onClick: this.CreateSubmit,\n        disabled: this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" Submit \")));\n    }\n  }, {\n    key: \"CreateModalShow\",\n    value: function CreateModalShow() {\n      this.setState({\n        create_show: true\n      });\n    }\n  }, {\n    key: \"CreateModalClose\",\n    value: function CreateModalClose() {\n      this.setState({\n        create_show: false\n      });\n    } //-----------------------------------\n    //Three functions representing the action of user on create modal\n\n  }, {\n    key: \"CreateSubmit\",\n    value: function CreateSubmit() {\n      var time = moment().format('YYYY-MM-DDTHH:mmZ');\n      console.log(time);\n      this.setState({\n        start_time: time\n      });\n\n      if (this.state.associated_id != -1) {\n        this.CreateSession();\n      }\n\n      this.CreatePomodoro(false);\n      this.CreateModalClose();\n    }\n  }, {\n    key: \"CreateCancel\",\n    value: function CreateCancel() {\n      this.TimeClear();\n      this.CreateModalClose();\n    }\n  }, {\n    key: \"ChangeSelect\",\n    value: function ChangeSelect(e) {\n      this.setState({\n        associated_id: e.target.value\n      });\n    } //-----------------------------------\n    //Four functions to continues create new pomodoros when one is completed\n\n  }, {\n    key: \"ContinueModal\",\n    value: function ContinueModal() {\n      var _this3 = this;\n\n      return React.createElement(Modal, {\n        id: \"continue_modal\",\n        show: this.state.continue_show,\n        onHide: this.ContinueOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Are you going to append a new pomodoro. If so, set time and click Yes. If not, click No\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_hours\",\n        value: this.state.hours,\n        onChange: function onChange(e) {\n          _this3.setState({\n            hours: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_minutes\",\n        value: this.state.minutes,\n        onChange: function onChange(e) {\n          _this3.setState({\n            minutes: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_second\",\n        value: this.state.seconds,\n        onChange: function onChange(e) {\n          _this3.setState({\n            seconds: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), \"second(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"# of pomodoro completed\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.state.counter)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Session Start time\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.state.start_time))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"continue_take_a_break\",\n        variant: \"outline-primary\",\n        onClick: this.ContinueBreak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Take a 5min break\"), React.createElement(Button, {\n        id: \"continue_cancel_button\",\n        variant: \"secondary\",\n        onClick: this.ContinueOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        id: \"continue_confirm_button\",\n        variant: \"primary\",\n        onClick: this.Continue,\n        disabled: this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Yes\")));\n    }\n  }, {\n    key: \"ContinueModalShow\",\n    value: function ContinueModalShow() {\n      this.setState({\n        continue_show: true\n      });\n    }\n  }, {\n    key: \"ContinueModalClose\",\n    value: function ContinueModalClose() {\n      this.setState({\n        continue_show: false\n      });\n    } //-----------------------------------\n    //two functions representing two actions user chooses\n\n  }, {\n    key: \"Continue\",\n    value: function Continue() {\n      this.ContinueModalClose();\n      this.CreatePomodoro(false);\n    }\n  }, {\n    key: \"ContinueOver\",\n    value: function ContinueOver() {\n      this.ContinueModalClose();\n\n      if (this.state.associated_id != -1) {\n        this.UpdateSession();\n      }\n\n      this.TimeClear(); //console.log(this.state.associated_id);\n    }\n  }, {\n    key: \"ContinueBreak\",\n    value: function ContinueBreak() {\n      console.log(\"here\");\n      this.setState({\n        continue_show: false\n      });\n      this.CreatePomodoro(true);\n    } //--------------------------------\n    //Three functions to control the stop modal\n\n  }, {\n    key: \"StopModal\",\n    value: function StopModal() {\n      return React.createElement(Modal, {\n        id: \"stop_modal\",\n        show: this.state.stop_show,\n        onHide: this.StopModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"You are going to stop current pomodoro.\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Are you going to include the runtime of current incomplete pomodoro?\", React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"# of pomodoro completed\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, this.state.counter)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Session Start time\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, this.state.start_time))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"stop_cancel_button\",\n        onClick: this.StopCancel,\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        id: \"stop_confirm_button\",\n        onClick: this.StopConfirm,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Yes\")));\n    }\n  }, {\n    key: \"StopModalShow\",\n    value: function StopModalShow() {\n      this.setState({\n        stop_show: true\n      });\n    }\n  }, {\n    key: \"StopModalClose\",\n    value: function StopModalClose() {\n      this.setState({\n        stop_show: false\n      });\n    } //-----------------------------------\n    //Two functions representing different action of user in StopModal\n\n  }, {\n    key: \"StopCancel\",\n    value: function StopCancel() {\n      this.StopModalClose();\n\n      if (this.state.associated_id != -1) {\n        this.UpdateSession();\n      }\n\n      this.TimeClear(); //@ts-ignore\n\n      clearInterval(this.interval);\n      this.setState({\n        active: false,\n        counter: 0\n      });\n    }\n  }, {\n    key: \"StopConfirm\",\n    value: function StopConfirm() {\n      this.StopModalClose();\n      var time = moment().format('YYYY-MM-DDTHH:mmZ');\n      this.setState({\n        end_time: time\n      });\n\n      if (this.state.associated_id != -1) {\n        this.UpdateSession();\n      }\n\n      this.TimeClear(); //@ts-ignore\n\n      clearInterval(this.interval);\n      this.setState({\n        active: false,\n        counter: 0\n      });\n    } //-----------------------------------\n    //functions for the modal to represent the error in HTTP Request\n\n  }, {\n    key: \"ProjectErrorModal\",\n    value: function ProjectErrorModal() {\n      return React.createElement(Modal, {\n        show: this.props.projectErrMess != null,\n        onHide: this.ProjectErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Error happened in fetching all projects\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, this.props.projectErrMess), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"project_error_button\",\n        variant: \"primary\",\n        onClick: this.ProjectErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }, {\n    key: \"ProjectErrorModalClose\",\n    value: function ProjectErrorModalClose() {\n      this.props.clearErrorMessage();\n    }\n  }, {\n    key: \"PomodoroErrorModal\",\n    value: function PomodoroErrorModal() {\n      return React.createElement(Modal, {\n        show: this.state.error_message != null,\n        onHide: this.PomodoroErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"There is an error in pomodoro part\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, this.state.error_message), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"pomodoro_error_button\",\n        onClick: this.PomodoroErrorModalClose,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }, {\n    key: \"PomodoroErrorModalClose\",\n    value: function PomodoroErrorModalClose() {\n      this.setState({\n        error_message: null\n      });\n    } //-----------------------------------\n    //Three functions for tracking time\n\n  }, {\n    key: \"TimeClear\",\n    value: function TimeClear() {\n      this.setState({\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        total_seconds: 0\n      });\n    }\n  }, {\n    key: \"CreatePomodoro\",\n    value: function CreatePomodoro(something) {\n      var temp_seconds = this.state.seconds;\n      var temp_minutes = this.state.minutes;\n      var temp_hours = this.state.hours;\n\n      if (something) {\n        temp_hours = 0;\n        temp_minutes = 5;\n        temp_seconds = 0;\n      } else {\n        if (temp_seconds >= 60) {\n          temp_seconds -= 60;\n          temp_minutes += 1;\n        }\n\n        if (temp_minutes >= 60) {\n          temp_minutes -= 60;\n          temp_hours += 1;\n        }\n      }\n\n      this.setState({\n        active: true,\n        total_seconds: temp_hours * 3600 + temp_minutes * 60 + temp_seconds,\n        hours: temp_hours,\n        minutes: temp_minutes,\n        seconds: temp_seconds,\n        is_break: something\n      }); //@ts-ignore\n\n      this.interval = setInterval(this.Countdown, 1000);\n    }\n  }, {\n    key: \"Countdown\",\n    value: function Countdown() {\n      if (this.state.active) {\n        var seconds = this.state.seconds;\n        var minutes = this.state.minutes;\n        var hours = this.state.hours;\n        var total_seconds = this.state.total_seconds;\n        seconds--;\n        total_seconds--; //console.log(\"here\");\n\n        if (seconds < 0) {\n          seconds += 60;\n          minutes -= 1;\n        }\n\n        if (minutes < 0) {\n          minutes += 60;\n          hours -= 1;\n        }\n\n        this.setState({\n          seconds: seconds,\n          hours: hours,\n          minutes: minutes,\n          total_seconds: total_seconds\n        });\n\n        if (total_seconds <= 0) {\n          //@ts-ignore\n          clearInterval(this.interval);\n          var time = moment().format('YYYY-MM-DDTHH:mmZ');\n\n          if (this.state.is_break) {\n            this.setState({\n              end_time: time,\n              active: false,\n              is_break: false\n            });\n          } else {\n            this.setState({\n              end_time: time,\n              counter: this.state.counter + 1,\n              active: false,\n              is_break: false\n            });\n          }\n\n          this.ContinueModalShow();\n        }\n      }\n    } //Two actions that will deal with API\n\n  }, {\n    key: \"CreateSession\",\n    value: function CreateSession() {\n      var _this4 = this;\n\n      sessionService.addUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.start_time).then(function (res) {\n        console.log(res.data);\n\n        _this4.setState({\n          active_session_id: res.data.id\n        });\n      }).catch(function (error) {\n        console.log(error.message);\n\n        _this4.setState({\n          error_message: error.message\n        });\n      });\n    }\n  }, {\n    key: \"UpdateSession\",\n    value: function UpdateSession() {\n      var _this5 = this;\n\n      console.log(this.state.counter);\n      sessionService.updateUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.active_session_id, this.state.start_time, this.state.end_time, this.state.counter).then(function (res) {\n        console.log(res.data);\n      }).catch(function (error) {\n        console.log(error.message);\n\n        _this5.setState({\n          error_message: error.message\n        });\n      });\n    }\n  }]);\n\n  function Pomodoro(props) {\n    var _this;\n\n    _classCallCheck(this, Pomodoro);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pomodoro).call(this, props));\n    _this.CreateModal = _this.CreateModal.bind(_assertThisInitialized(_this));\n    _this.CreateModalClose = _this.CreateModalClose.bind(_assertThisInitialized(_this));\n    _this.CreateModalShow = _this.CreateModalShow.bind(_assertThisInitialized(_this));\n    _this.ChangeSelect = _this.ChangeSelect.bind(_assertThisInitialized(_this));\n    _this.CreateSubmit = _this.CreateSubmit.bind(_assertThisInitialized(_this));\n    _this.CreateCancel = _this.CreateCancel.bind(_assertThisInitialized(_this));\n    _this.ContinueModal = _this.ContinueModal.bind(_assertThisInitialized(_this));\n    _this.ContinueModalShow = _this.ContinueModalShow.bind(_assertThisInitialized(_this));\n    _this.ContinueModalClose = _this.ContinueModalClose.bind(_assertThisInitialized(_this));\n    _this.Continue = _this.Continue.bind(_assertThisInitialized(_this));\n    _this.ContinueOver = _this.ContinueOver.bind(_assertThisInitialized(_this));\n    _this.ContinueBreak = _this.ContinueBreak.bind(_assertThisInitialized(_this));\n    _this.StopModal = _this.StopModal.bind(_assertThisInitialized(_this));\n    _this.StopModalShow = _this.StopModalShow.bind(_assertThisInitialized(_this));\n    _this.StopModalClose = _this.StopModalClose.bind(_assertThisInitialized(_this));\n    _this.StopConfirm = _this.StopConfirm.bind(_assertThisInitialized(_this));\n    _this.StopCancel = _this.StopCancel.bind(_assertThisInitialized(_this));\n    _this.UpdateSession = _this.UpdateSession.bind(_assertThisInitialized(_this));\n    _this.CreateSession = _this.CreateSession.bind(_assertThisInitialized(_this));\n    _this.TimeClear = _this.TimeClear.bind(_assertThisInitialized(_this));\n    _this.CreatePomodoro = _this.CreatePomodoro.bind(_assertThisInitialized(_this));\n    _this.Countdown = _this.Countdown.bind(_assertThisInitialized(_this));\n    _this.ProjectErrorModal = _this.ProjectErrorModal.bind(_assertThisInitialized(_this));\n    _this.ProjectErrorModalClose = _this.ProjectErrorModalClose.bind(_assertThisInitialized(_this));\n    _this.PomodoroErrorModal = _this.PomodoroErrorModal.bind(_assertThisInitialized(_this));\n    _this.PomodoroErrorModalClose = _this.PomodoroErrorModalClose.bind(_assertThisInitialized(_this));\n    _this.state = {\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n      total_seconds: 0,\n      associated_id: -1,\n      active_session_id: -1,\n      start_time: \"\",\n      end_time: \"\",\n      total_hours: 0,\n      create_show: false,\n      continue_show: false,\n      stop_show: false,\n      active: false,\n      counter: 0,\n      is_break: false,\n      error_message: null\n    }; //@ts-ignore\n\n    _this.interval;\n    return _this;\n  }\n\n  _createClass(Pomodoro, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Pomodoros\",\n        category: \"You can create and track your Pomodoro Here\",\n        ctTableFullWidth: true,\n        ctTableResponsive: true,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"create_pomodoro_button\",\n          variant: \"primary\",\n          onClick: this.CreateModalShow,\n          disabled: this.state.active,\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588\n          },\n          __self: this\n        }, \"Create a New Pomodoro\")), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"stop_pomodoro_button\",\n          onClick: this.StopModalShow,\n          variant: \"secondary\",\n          disabled: !this.state.active,\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598\n          },\n          __self: this\n        }, \"Stop current ongoing Pomodoro\"))), React.createElement(\"div\", {\n          style: {\n            paddingTop: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: !this.state.active ? {\n            backgroundColor: \"lightblue\",\n            textAlign: \"center\"\n          } : {\n            backgroundColor: \"white\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }, \"inactive\")), React.createElement(Col, {\n          md: {\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: this.state.active && !this.state.is_break ? {\n            backgroundColor: \"lightblue\",\n            textAlign: \"center\"\n          } : {\n            backgroundColor: \"white\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 617\n          },\n          __self: this\n        }, \"Working\")), React.createElement(Col, {\n          md: {\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 621\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: this.state.active && this.state.is_break ? {\n            backgroundColor: \"lightblue\",\n            textAlign: \"center\"\n          } : {\n            backgroundColor: \"white\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 622\n          },\n          __self: this\n        }, \"Taking a break\")))), React.createElement(\"div\", {\n          style: {\n            fontSize: \"64px\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        }, (\"0\" + this.state.hours.toString()).slice(-2), \" : \", (\"0\" + this.state.minutes.toString()).slice(-2), \" : \", (\"0\" + this.state.seconds.toString()).slice(-2), this.state.active)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      })))), React.createElement(this.CreateModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }), React.createElement(this.ContinueModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }), React.createElement(this.StopModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }), React.createElement(this.ProjectErrorModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }), React.createElement(this.PomodoroErrorModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Pomodoro;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pomodoro);","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Pomodoro.tsx"],"names":["React","Container","Row","Col","Button","Modal","Card","connect","moment","fetchAllProjects","clearErrorMessage","sessionService","OptionList","mapStateToProps","state","projectlist","project","list","projectErrMess","errMess","mapDispatchToProps","dispatch","userId","Pomodoro","create_show","CreateModalClose","hours","e","setState","target","value","minutes","seconds","associated_id","ChangeSelect","props","map","index","CreateCancel","CreateSubmit","time","format","console","log","start_time","CreateSession","CreatePomodoro","TimeClear","continue_show","ContinueOver","counter","ContinueBreak","Continue","ContinueModalClose","UpdateSession","stop_show","StopModalClose","StopCancel","StopConfirm","clearInterval","interval","active","end_time","ProjectErrorModalClose","error_message","PomodoroErrorModalClose","total_seconds","something","temp_seconds","temp_minutes","temp_hours","is_break","setInterval","Countdown","ContinueModalShow","addUserProjectSession","Number","localStorage","getItem","then","res","data","active_session_id","id","catch","error","message","updateUserProjectSession","CreateModal","bind","CreateModalShow","ContinueModal","StopModal","StopModalShow","ProjectErrorModal","PomodoroErrorModal","total_hours","paddingTop","backgroundColor","textAlign","offset","fontSize","toString","slice","Component"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,KAAtC,QAAmD,iBAAnD;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,gBAAgB,IAAhBA,iBAAT,EAA2BC,iBAAiB,IAAjBA,kBAA3B,QAAoD,wCAApD;AAEA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAgB;AACpC,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAcC,IADxB;AAEHC,IAAAA,cAAc,EAAEJ,KAAK,CAACE,OAAN,CAAcG;AAF3B,GAAP;AAIH,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCZ,IAAAA,gBAAgB,EAAE,0BAAAa,MAAM,EAAI;AACxBD,MAAAA,QAAQ,CAACZ,iBAAgB,CAACa,MAAD,CAAjB,CAAR;AACH,KAHmC;AAIpCZ,IAAAA,iBAAiB,EAAE,6BAAM;AACrBW,MAAAA,QAAQ,CAACX,kBAAiB,EAAlB,CAAR;AACH;AANmC,GAAL;AAAA,CAAnC;;AAcC;AAsBA;;IAEKa,Q;;;;;;;AAEF;AACA;kCACc;AAAA;;AACV,aAAO,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWU,WAA1C;AAAuD,QAAA,MAAM,EAAE,KAAKC,gBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADJ,CADG,EAIH,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,cADP;AAEI,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,KAFtB;AAGI,QAAA,QAAQ,EAAE,kBAACC,CAAD,EAAY;AAClB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEF,YAAAA,KAAK,EAAEC,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB;AAA1B,WAAd;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,YADJ,EAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,gBADP;AAEI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWiB,OAFtB;AAGI,QAAA,QAAQ,EAAE,kBAACJ,CAAD,EAAY;AAClB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEG,YAAAA,OAAO,EAAEJ,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB;AAA5B,WAAd;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,cAVJ,EAmBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,eADP;AAEI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWkB,OAFtB;AAGI,QAAA,QAAQ,EAAE,kBAACL,CAAD,EAAY;AAClB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEI,YAAAA,OAAO,EAAEL,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB;AAA5B,WAAd;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,cAnBJ,EA4BI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,EAAE,EAAC,oBAAX;AAAgC,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWmB,aAAlD;AAAiE,QAAA,QAAQ,EAAE,KAAKC,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAE,CAAC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEK,KAAKC,KAAL,CAAWpB,WAAX,CAAuBqB,GAAvB,CAA2B,UAACpB,OAAD,EAAeqB,KAAf,EAAiC;AACzD,eACI,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAErB,OAArB;AAA8B,UAAA,GAAG,EAAEqB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJA,CAFL,CADJ,CA5BJ,CAJG,EA2CH,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,sBAAX;AAAkC,QAAA,OAAO,EAAC,WAA1C;AAAsD,QAAA,OAAO,EAAE,KAAKC,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,uBAAX;AAAmC,QAAA,OAAO,EAAC,SAA3C;AAAqD,QAAA,OAAO,EAAE,KAAKC,YAAnE;AACI,QAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWY,KAAX,IAAoB,CAApB,IAAyB,KAAKZ,KAAL,CAAWiB,OAAX,IAAsB,CAA/C,IAAoD,KAAKjB,KAAL,CAAWkB,OAAX,IAAsB,CADxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CA3CG,CAAP;AAmDH;;;sCAEiB;AACd,WAAKJ,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH;;;uCAEkB;AACf,WAAKI,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,K,CAED;AACA;;;;mCACe;AACX,UAAIgB,IAAI,GAAGhC,MAAM,GAAGiC,MAAT,CAAgB,mBAAhB,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAKZ,QAAL,CAAc;AACVgB,QAAAA,UAAU,EAAEJ;AADF,OAAd;;AAGA,UAAI,KAAK1B,KAAL,CAAWmB,aAAX,IAA4B,CAAC,CAAjC,EAAoC;AAChC,aAAKY,aAAL;AACH;;AACD,WAAKC,cAAL,CAAoB,KAApB;AACA,WAAKrB,gBAAL;AACH;;;mCACc;AACX,WAAKsB,SAAL;AACA,WAAKtB,gBAAL;AACH;;;iCACYE,C,EAAQ;AACjB,WAAKC,QAAL,CAAc;AACVK,QAAAA,aAAa,EAAEN,CAAC,CAACE,MAAF,CAASC;AADd,OAAd;AAGH,K,CAED;AACA;;;;oCACgB;AAAA;;AACZ,aACI,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,gBAAV;AAA2B,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWkC,aAA5C;AAA2D,QAAA,MAAM,EAAE,KAAKC,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGADJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,gBADP;AAEI,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWY,KAFtB;AAGI,QAAA,QAAQ,EAAE,kBAACC,CAAD,EAAY;AAClB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEF,YAAAA,KAAK,EAAEC,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB;AAA1B,WAAd;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,YADJ,EAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,kBADP;AAEI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWiB,OAFtB;AAGI,QAAA,QAAQ,EAAE,kBAACJ,CAAD,EAAY;AAClB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEG,YAAAA,OAAO,EAAEJ,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB;AAA5B,WAAd;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,cAVJ,EAmBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,iBADP;AAEI,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWkB,OAFtB;AAGI,QAAA,QAAQ,EAAE,kBAACL,CAAD,EAAY;AAClB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEI,YAAAA,OAAO,EAAEL,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB;AAA5B,WAAd;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,cAnBJ,EA6BI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKhB,KAAL,CAAWoC,OAAjB,CAFJ,CA7BJ,EAiCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKpC,KAAL,CAAW8B,UAAjB,CAFJ,CAjCJ,CAJJ,EA0CI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,uBAAX;AAAmC,QAAA,OAAO,EAAC,iBAA3C;AAA6D,QAAA,OAAO,EAAE,KAAKO,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,wBAAX;AAAoC,QAAA,OAAO,EAAC,WAA5C;AAAwD,QAAA,OAAO,EAAG,KAAKF,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAOI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,yBAAX;AAAqC,QAAA,OAAO,EAAC,SAA7C;AAAuD,QAAA,OAAO,EAAE,KAAKG,QAArE;AAA+E,QAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWY,KAAX,IAAoB,CAApB,IAAyB,KAAKZ,KAAL,CAAWiB,OAAX,IAAsB,CAA/C,IAAoD,KAAKjB,KAAL,CAAWkB,OAAX,IAAsB,CAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CA1CJ,CADJ;AAwDH;;;wCACmB;AAChB,WAAKJ,QAAL,CAAc;AACVoB,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH;;;yCAEoB;AACjB,WAAKpB,QAAL,CAAc;AACVoB,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH,K,CAED;AACA;;;;+BACW;AACP,WAAKK,kBAAL;AACA,WAAKP,cAAL,CAAoB,KAApB;AACH;;;mCAEc;AACX,WAAKO,kBAAL;;AACA,UAAI,KAAKvC,KAAL,CAAWmB,aAAX,IAA4B,CAAC,CAAjC,EAAoC;AAChC,aAAKqB,aAAL;AACH;;AACD,WAAKP,SAAL,GALW,CAMX;AACH;;;oCAEc;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAKf,QAAL,CAAc;AACVoB,QAAAA,aAAa,EAAE;AADL,OAAd;AAGA,WAAKF,cAAL,CAAoB,IAApB;AACH,K,CAED;AACA;;;;gCACY;AACR,aACI,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWyC,SAAxC;AAAmD,QAAA,MAAM,EAAE,KAAKC,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAK1C,KAAL,CAAWoC,OAAjB,CAFJ,CAFJ,EAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKpC,KAAL,CAAW8B,UAAjB,CAFJ,CANJ,CAJJ,EAeI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,EAAE,EAAC,oBADP;AAEI,QAAA,OAAO,EAAE,KAAKa,UAFlB;AAGI,QAAA,OAAO,EAAC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOI,oBAAC,MAAD;AACI,QAAA,EAAE,EAAC,qBADP;AAEI,QAAA,OAAO,EAAE,KAAKC,WAFlB;AAGI,QAAA,OAAO,EAAC,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CAfJ,CADJ;AAgCH;;;oCACe;AACZ,WAAK9B,QAAL,CAAc;AACV2B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH;;;qCAEgB;AACb,WAAK3B,QAAL,CAAc;AACV2B,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,K,CAGD;AACA;;;;iCACa;AACT,WAAKC,cAAL;;AACA,UAAI,KAAK1C,KAAL,CAAWmB,aAAX,IAA4B,CAAC,CAAjC,EAAoC;AAChC,aAAKqB,aAAL;AACH;;AACD,WAAKP,SAAL,GALS,CAMT;;AACAY,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA,WAAKhC,QAAL,CAAc;AACViC,QAAAA,MAAM,EAAE,KADE;AAEVX,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH;;;kCACa;AACV,WAAKM,cAAL;AACA,UAAIhB,IAAI,GAAGhC,MAAM,GAAGiC,MAAT,CAAgB,mBAAhB,CAAX;AACA,WAAKb,QAAL,CAAc;AACVkC,QAAAA,QAAQ,EAAEtB;AADA,OAAd;;AAIA,UAAI,KAAK1B,KAAL,CAAWmB,aAAX,IAA4B,CAAC,CAAjC,EAAoC;AAChC,aAAKqB,aAAL;AACH;;AACD,WAAKP,SAAL,GAVU,CAYV;;AACAY,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA,WAAKhC,QAAL,CAAc;AACViC,QAAAA,MAAM,EAAE,KADE;AAEVX,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,K,CAED;AACA;;;;wCACoB;AAChB,aACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWjB,cAAX,IAA6B,IAA1C;AAAgD,QAAA,MAAM,EAAE,KAAK6C,sBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK5B,KAAL,CAAWjB,cADhB,CAJJ,EAOI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,EAAE,EAAC,sBADP;AAEI,QAAA,OAAO,EAAC,SAFZ;AAGI,QAAA,OAAO,EAAE,KAAK6C,sBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAPJ,CADJ;AAkBH;;;6CAEwB;AACrB,WAAK5B,KAAL,CAAWzB,iBAAX;AACH;;;yCAEoB;AACjB,aACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWkD,aAAX,IAA4B,IAAzC;AAA+C,QAAA,MAAM,EAAE,KAAKC,uBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAKI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKnD,KAAL,CAAWkD,aADhB,CALJ,EASI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,uBAAX;AAAmC,QAAA,OAAO,EAAE,KAAKC,uBAAjD;AAA0E,QAAA,OAAO,EAAC,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CATJ,CADJ;AAkBH;;;8CAEyB;AACtB,WAAKrC,QAAL,CAAc;AACVoC,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH,K,CAED;AACA;;;;gCACY;AACR,WAAKpC,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAE,CADG;AAEVK,QAAAA,OAAO,EAAE,CAFC;AAGVC,QAAAA,OAAO,EAAE,CAHC;AAIVkC,QAAAA,aAAa,EAAE;AAJL,OAAd;AAMH;;;mCAEcC,S,EAAmB;AAC9B,UAAIC,YAAY,GAAG,KAAKtD,KAAL,CAAWkB,OAA9B;AACA,UAAIqC,YAAY,GAAG,KAAKvD,KAAL,CAAWiB,OAA9B;AACA,UAAIuC,UAAU,GAAG,KAAKxD,KAAL,CAAWY,KAA5B;;AACA,UAAGyC,SAAH,EAAa;AACTG,QAAAA,UAAU,GAAG,CAAb;AACAD,QAAAA,YAAY,GAAG,CAAf;AACAD,QAAAA,YAAY,GAAG,CAAf;AACH,OAJD,MAKI;AACA,YAAGA,YAAY,IAAI,EAAnB,EAAsB;AAClBA,UAAAA,YAAY,IAAI,EAAhB;AACAC,UAAAA,YAAY,IAAI,CAAhB;AACH;;AACD,YAAGA,YAAY,IAAI,EAAnB,EAAsB;AAClBA,UAAAA,YAAY,IAAI,EAAhB;AACAC,UAAAA,UAAU,IAAI,CAAd;AACH;AACJ;;AACD,WAAK1C,QAAL,CAAc;AACViC,QAAAA,MAAM,EAAE,IADE;AAEVK,QAAAA,aAAa,EAAEI,UAAU,GAAG,IAAb,GAAoBD,YAAY,GAAG,EAAnC,GAAwCD,YAF7C;AAGV1C,QAAAA,KAAK,EAAE4C,UAHG;AAIVvC,QAAAA,OAAO,EAAEsC,YAJC;AAKVrC,QAAAA,OAAO,EAAEoC,YALC;AAMVG,QAAAA,QAAQ,EAAEJ;AANA,OAAd,EAnB8B,CA4B9B;;AACA,WAAKP,QAAL,GAAgBY,WAAW,CAAC,KAAKC,SAAN,EAAiB,IAAjB,CAA3B;AACH;;;gCAEW;AACR,UAAI,KAAK3D,KAAL,CAAW+C,MAAf,EAAuB;AACnB,YAAI7B,OAAO,GAAG,KAAKlB,KAAL,CAAWkB,OAAzB;AACA,YAAID,OAAO,GAAG,KAAKjB,KAAL,CAAWiB,OAAzB;AACA,YAAIL,KAAK,GAAG,KAAKZ,KAAL,CAAWY,KAAvB;AACA,YAAIwC,aAAa,GAAG,KAAKpD,KAAL,CAAWoD,aAA/B;AACAlC,QAAAA,OAAO;AACPkC,QAAAA,aAAa,GANM,CAOnB;;AACA,YAAIlC,OAAO,GAAG,CAAd,EAAiB;AACbA,UAAAA,OAAO,IAAI,EAAX;AACAD,UAAAA,OAAO,IAAI,CAAX;AACH;;AACD,YAAIA,OAAO,GAAG,CAAd,EAAiB;AACbA,UAAAA,OAAO,IAAI,EAAX;AACAL,UAAAA,KAAK,IAAI,CAAT;AACH;;AACD,aAAKE,QAAL,CAAc;AACVI,UAAAA,OAAO,EAAEA,OADC;AAEVN,UAAAA,KAAK,EAAEA,KAFG;AAGVK,UAAAA,OAAO,EAAEA,OAHC;AAIVmC,UAAAA,aAAa,EAAEA;AAJL,SAAd;;AAMA,YAAIA,aAAa,IAAI,CAArB,EAAwB;AACpB;AACAP,UAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA,cAAIpB,IAAI,GAAGhC,MAAM,GAAGiC,MAAT,CAAgB,mBAAhB,CAAX;;AACA,cAAG,KAAK3B,KAAL,CAAWyD,QAAd,EAAuB;AACnB,iBAAK3C,QAAL,CAAc;AACVkC,cAAAA,QAAQ,EAAEtB,IADA;AAEVqB,cAAAA,MAAM,EAAE,KAFE;AAGVU,cAAAA,QAAQ,EAAE;AAHA,aAAd;AAKH,WAND,MAOI;AACA,iBAAK3C,QAAL,CAAc;AACVkC,cAAAA,QAAQ,EAAEtB,IADA;AAEVU,cAAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWoC,OAAX,GAAqB,CAFpB;AAGVW,cAAAA,MAAM,EAAE,KAHE;AAIVU,cAAAA,QAAQ,EAAE;AAJA,aAAd;AAMH;;AACD,eAAKG,iBAAL;AACH;AACJ;AACJ,K,CAED;;;;oCACgB;AAAA;;AACZ/D,MAAAA,cAAc,CAACgE,qBAAf,CAAqCC,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAA3C,EAAyE,KAAKhE,KAAL,CAAWmB,aAApF,EAAmG,KAAKnB,KAAL,CAAW8B,UAA9G,EAA0HmC,IAA1H,CAA+H,UAACC,GAAD,EAAS;AACpItC,QAAAA,OAAO,CAACC,GAAR,CAAYqC,GAAG,CAACC,IAAhB;;AACA,QAAA,MAAI,CAACrD,QAAL,CAAc;AACVsD,UAAAA,iBAAiB,EAAEF,GAAG,CAACC,IAAJ,CAASE;AADlB,SAAd;AAGH,OALD,EAMKC,KANL,CAMW,UAACC,KAAD,EAAW;AACd3C,QAAAA,OAAO,CAACC,GAAR,CAAY0C,KAAK,CAACC,OAAlB;;AACA,QAAA,MAAI,CAAC1D,QAAL,CAAc;AACVoC,UAAAA,aAAa,EAAEqB,KAAK,CAACC;AADX,SAAd;AAGH,OAXL;AAYH;;;oCAEe;AAAA;;AACZ5C,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAWoC,OAAvB;AACAvC,MAAAA,cAAc,CAAC4E,wBAAf,CAAwCX,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAA9C,EAA4E,KAAKhE,KAAL,CAAWmB,aAAvF,EAAsG,KAAKnB,KAAL,CAAWoE,iBAAjH,EAAoI,KAAKpE,KAAL,CAAW8B,UAA/I,EAA2J,KAAK9B,KAAL,CAAWgD,QAAtK,EAAgL,KAAKhD,KAAL,CAAWoC,OAA3L,EACK6B,IADL,CACU,UAACC,GAAD,EAAS;AACXtC,QAAAA,OAAO,CAACC,GAAR,CAAYqC,GAAG,CAACC,IAAhB;AACH,OAHL,EAIKG,KAJL,CAIW,UAACC,KAAD,EAAW;AACd3C,QAAAA,OAAO,CAACC,GAAR,CAAY0C,KAAK,CAACC,OAAlB;;AACA,QAAA,MAAI,CAAC1D,QAAL,CAAc;AACVoC,UAAAA,aAAa,EAAEqB,KAAK,CAACC;AADX,SAAd;AAGH,OATL;AAUH;;;AAED,oBAAYnD,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,kFAAMA,KAAN;AACA,UAAKqD,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKhE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBgE,IAAtB,+BAAxB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,+BAAvB;AACA,UAAKvD,YAAL,GAAoB,MAAKA,YAAL,CAAkBuD,IAAlB,+BAApB;AACA,UAAKlD,YAAL,GAAoB,MAAKA,YAAL,CAAkBkD,IAAlB,+BAApB;AACA,UAAKnD,YAAL,GAAoB,MAAKA,YAAL,CAAkBmD,IAAlB,+BAApB;AAEA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,+BAArB;AACA,UAAKf,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBe,IAAvB,+BAAzB;AACA,UAAKpC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBoC,IAAxB,+BAA1B;AAEA,UAAKrC,QAAL,GAAgB,MAAKA,QAAL,CAAcqC,IAAd,+BAAhB;AACA,UAAKxC,YAAL,GAAoB,MAAKA,YAAL,CAAkBwC,IAAlB,+BAApB;AACA,UAAKtC,aAAL,GAAqB,MAAKA,aAAL,CAAmBsC,IAAnB,+BAArB;AAEA,UAAKG,SAAL,GAAiB,MAAKA,SAAL,CAAeH,IAAf,+BAAjB;AACA,UAAKI,aAAL,GAAqB,MAAKA,aAAL,CAAmBJ,IAAnB,+BAArB;AACA,UAAKjC,cAAL,GAAsB,MAAKA,cAAL,CAAoBiC,IAApB,+BAAtB;AAEA,UAAK/B,WAAL,GAAmB,MAAKA,WAAL,CAAiB+B,IAAjB,+BAAnB;AACA,UAAKhC,UAAL,GAAkB,MAAKA,UAAL,CAAgBgC,IAAhB,+BAAlB;AAEA,UAAKnC,aAAL,GAAqB,MAAKA,aAAL,CAAmBmC,IAAnB,+BAArB;AACA,UAAK5C,aAAL,GAAqB,MAAKA,aAAL,CAAmB4C,IAAnB,+BAArB;AAEA,UAAK1C,SAAL,GAAiB,MAAKA,SAAL,CAAe0C,IAAf,+BAAjB;AACA,UAAK3C,cAAL,GAAsB,MAAKA,cAAL,CAAoB2C,IAApB,+BAAtB;AACA,UAAKhB,SAAL,GAAiB,MAAKA,SAAL,CAAegB,IAAf,+BAAjB;AAEA,UAAKK,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBL,IAAvB,+BAAzB;AACA,UAAK1B,sBAAL,GAA8B,MAAKA,sBAAL,CAA4B0B,IAA5B,+BAA9B;AACA,UAAKM,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBN,IAAxB,+BAA1B;AACA,UAAKxB,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BwB,IAA7B,+BAA/B;AAEA,UAAK3E,KAAL,GAAa;AACTkB,MAAAA,OAAO,EAAE,CADA;AAETD,MAAAA,OAAO,EAAE,CAFA;AAGTL,MAAAA,KAAK,EAAE,CAHE;AAITwC,MAAAA,aAAa,EAAE,CAJN;AAKTjC,MAAAA,aAAa,EAAE,CAAC,CALP;AAMTiD,MAAAA,iBAAiB,EAAE,CAAC,CANX;AAQTtC,MAAAA,UAAU,EAAE,EARH;AASTkB,MAAAA,QAAQ,EAAE,EATD;AAUTkC,MAAAA,WAAW,EAAE,CAVJ;AAYTxE,MAAAA,WAAW,EAAE,KAZJ;AAaTwB,MAAAA,aAAa,EAAE,KAbN;AAcTO,MAAAA,SAAS,EAAE,KAdF;AAeTM,MAAAA,MAAM,EAAE,KAfC;AAgBTX,MAAAA,OAAO,EAAE,CAhBA;AAiBTqB,MAAAA,QAAQ,EAAE,KAjBD;AAmBTP,MAAAA,aAAa,EAAE;AAnBN,KAAb,CApCsB,CAyDtB;;AACA,UAAKJ,QAAL;AA1DsB;AA4DzB;;;;wCAEmB;AAChB,WAAKzB,KAAL,CAAW1B,gBAAX,CAA4BmE,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAAlC;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAC,WADV;AAEI,QAAA,QAAQ,EAAC,6CAFb;AAGI,QAAA,gBAAgB,MAHpB;AAII,QAAA,iBAAiB,MAJrB;AAKI,QAAA,OAAO,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AACI,UAAA,EAAE,EAAC,wBADP;AAEI,UAAA,OAAO,EAAC,SAFZ;AAGI,UAAA,OAAO,EAAE,KAAKY,eAHlB;AAII,UAAA,QAAQ,EAAE,KAAK5E,KAAL,CAAW+C,MAJzB;AAKI,UAAA,SAAS,EAAC,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAWI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AACI,UAAA,EAAE,EAAC,sBADP;AAEI,UAAA,OAAO,EAAE,KAAKgC,aAFlB;AAGI,UAAA,OAAO,EAAC,WAHZ;AAII,UAAA,QAAQ,EAAE,CAAC,KAAK/E,KAAL,CAAW+C,MAJ1B;AAKI,UAAA,SAAS,EAAC,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CAXJ,CADJ,EAwBF;AAAK,UAAA,KAAK,EAAE;AAACoC,YAAAA,UAAU,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,KAAK,EAAE,CAAC,KAAKnF,KAAL,CAAW+C,MAAZ,GAAqB;AAACqC,YAAAA,eAAe,EAAE,WAAlB;AAA+BC,YAAAA,SAAS,EAAE;AAA1C,WAArB,GAA2E;AAACD,YAAAA,eAAe,EAAE,OAAlB;AAA2BC,YAAAA,SAAS,EAAE;AAAtC,WAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADF,EAME,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,KAAK,EAAG,KAAKtF,KAAL,CAAW+C,MAAX,IAAqB,CAAC,KAAK/C,KAAL,CAAWyD,QAAlC,GAA8C;AAAC2B,YAAAA,eAAe,EAAE,WAAlB;AAA+BC,YAAAA,SAAS,EAAE;AAA1C,WAA9C,GAAmG;AAACD,YAAAA,eAAe,EAAE,OAAlB;AAA2BC,YAAAA,SAAS,EAAE;AAAtC,WAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CANF,EAWE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,KAAK,EAAG,KAAKtF,KAAL,CAAW+C,MAAX,IAAqB,KAAK/C,KAAL,CAAWyD,QAAjC,GAA6C;AAAC2B,YAAAA,eAAe,EAAE,WAAlB;AAA+BC,YAAAA,SAAS,EAAE;AAA1C,WAA7C,GAAmG;AAACD,YAAAA,eAAe,EAAE,OAAlB;AAA2BC,YAAAA,SAAS,EAAE;AAAtC,WAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAXF,CADA,CAxBE,EA6CF;AAAK,UAAA,KAAK,EAAE;AAACE,YAAAA,QAAQ,EAAE,MAAX;AAAmBF,YAAAA,SAAS,EAAE;AAA9B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,CAAC,MAAM,KAAKrF,KAAL,CAAWY,KAAX,CAAiB4E,QAAjB,EAAP,EAAoCC,KAApC,CAA0C,CAAC,CAA3C,CADH,SACqD,CAAC,MAAM,KAAKzF,KAAL,CAAWiB,OAAX,CAAmBuE,QAAnB,EAAP,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CADrD,SACyG,CAAC,MAAM,KAAKzF,KAAL,CAAWkB,OAAX,CAAmBsE,QAAnB,EAAP,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CADzG,EAEG,KAAKzF,KAAL,CAAW+C,MAFd,CA7CE,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ,EAiEG,yBAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjEH,EAkEG,yBAAM,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlEH,EAmEG,yBAAM,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnEH,EAoEG,yBAAM,iBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApEH,EAqEG,yBAAM,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArEH,CADJ;AAyEH;;;;EA5kBkB7D,KAAK,CAACwG,S;;AAglB7B,eAAejG,OAAO,CAClBM,eADkB,EAElBO,kBAFkB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import * as React from 'react';\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchAllProjects, clearErrorMessage } from '../redux/actionCreators/project.action';\n\nimport { sessionService } from '../services/session.service';\n\nimport OptionList from '../components/List/OptionList';\n\n\nconst mapStateToProps = (state: any) => {\n    return {\n        projectlist: state.project.list,\n        projectErrMess: state.project.errMess\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAllProjects: userId => {\n        dispatch(fetchAllProjects(userId));\n    },\n    clearErrorMessage: () => {\n        dispatch(clearErrorMessage());\n    }\n});\n\ninterface Props {\n    projectlist: any,\n    projectErrMess: any,\n    fetchAllProjects: any,\n    clearErrorMessage: any\n};\n\ninterface State {\n    minutes: number,\n    seconds: number,\n    hours: number,\n    total_seconds: number,\n    associated_id: number,\n    active_session_id: number,\n\n    start_time: String,\n    end_time: String,\n    total_hours: number,\n\n    create_show: boolean,\n    continue_show: boolean,\n    stop_show: boolean,\n    active: boolean,\n    counter: number,\n    is_break: boolean,\n\n    error_message: any\n};\n\nclass Pomodoro extends React.Component<Props, State>{\n\n    //-----------------------------------\n    //Three functions for modals to create new pomodoro\n    CreateModal() {\n        return <Modal id=\"create_modal\" show={this.state.create_show} onHide={this.CreateModalClose}>\n            <Modal.Header>\n                <Modal.Title>Remaining time in current Active Pomodoro</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <input\n                        id=\"create_hours\"\n                        value={this.state.hours}\n                        onChange={(e: any) => {\n                            this.setState({ hours: e.target.value % 100 });\n                        }} />\n                    hour(s)\n                </Row>\n                <Row>\n                    <input\n                        id=\"create_minutes\"\n                        value={this.state.minutes}\n                        onChange={(e: any) => {\n                            this.setState({ minutes: e.target.value % 100 });\n                        }} />\n                    minute(s)\n                </Row>\n                <Row>\n                    <input\n                        id=\"create_second\"\n                        value={this.state.seconds}\n                        onChange={(e: any) => {\n                            this.setState({ seconds: e.target.value % 100 });\n                        }} />\n                    second(s)\n                </Row>\n                <Row>\n                    <select id=\"project_select_box\" value={this.state.associated_id} onChange={this.ChangeSelect} >\n                        <option value={-1}> No association </option>\n                        {this.props.projectlist.map((project: any, index: number) => {\n                            return (\n                                <OptionList project={project} key={index}/>\n                            );\n                        })}\n                    </select>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button id=\"create_cancel_button\" variant=\"secondary\" onClick={this.CreateCancel}>\n                    Cancel\n                </Button>\n                <Button id=\"create_confirm_button\" variant=\"primary\" onClick={this.CreateSubmit}\n                    disabled={this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0}> Submit </Button>\n            </Modal.Footer>\n        </Modal>\n    }\n\n    CreateModalShow() {\n        this.setState({\n            create_show: true\n        });\n    }\n\n    CreateModalClose() {\n        this.setState({\n            create_show: false,\n        });\n    }\n\n    //-----------------------------------\n    //Three functions representing the action of user on create modal\n    CreateSubmit() {\n        var time = moment().format('YYYY-MM-DDTHH:mmZ');\n        console.log(time);\n        this.setState({\n            start_time: time\n        })\n        if (this.state.associated_id != -1) {\n            this.CreateSession();\n        }\n        this.CreatePomodoro(false);\n        this.CreateModalClose();\n    }\n    CreateCancel() {\n        this.TimeClear();\n        this.CreateModalClose();\n    }\n    ChangeSelect(e: any) {\n        this.setState({\n            associated_id: e.target.value\n        })\n    }\n\n    //-----------------------------------\n    //Four functions to continues create new pomodoros when one is completed\n    ContinueModal() {\n        return (\n            <Modal id=\"continue_modal\" show={this.state.continue_show} onHide={this.ContinueOver}>\n                <Modal.Header>\n                    Are you going to append a new pomodoro. If so, set time and click Yes. If not, click No\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <input\n                            id=\"continue_hours\"\n                            value={this.state.hours}\n                            onChange={(e: any) => {\n                                this.setState({ hours: e.target.value % 100 });\n                            }} />\n                        hour(s)\n                </Row>\n                    <Row>\n                        <input\n                            id=\"continue_minutes\"\n                            value={this.state.minutes}\n                            onChange={(e: any) => {\n                                this.setState({ minutes: e.target.value % 100 });\n                            }} />\n                        minute(s)\n                </Row>\n                    <Row>\n                        <input\n                            id=\"continue_second\"\n                            value={this.state.seconds}\n                            onChange={(e: any) => {\n                                this.setState({ seconds: e.target.value % 100 });\n                            }} />\n                        second(s)\n                </Row>\n\n                    <Row>\n                        <Col># of pomodoro completed</Col>\n                        <Col>{this.state.counter}</Col>\n                    </Row>\n                    <Row>\n                        <Col>Session Start time</Col>\n                        <Col>{this.state.start_time}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button id=\"continue_take_a_break\" variant=\"outline-primary\" onClick={this.ContinueBreak}>\n                        Take a 5min break\n                    </Button>\n                    <Button id=\"continue_cancel_button\" variant=\"secondary\" onClick={(this.ContinueOver)}>\n                        No\n                    </Button>\n                    <Button id=\"continue_confirm_button\" variant=\"primary\" onClick={this.Continue} disabled={this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0}>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n    ContinueModalShow() {\n        this.setState({\n            continue_show: true\n        });\n    }\n\n    ContinueModalClose() {\n        this.setState({\n            continue_show: false\n        })\n    }\n\n    //-----------------------------------\n    //two functions representing two actions user chooses\n    Continue() {\n        this.ContinueModalClose();\n        this.CreatePomodoro(false);\n    }\n\n    ContinueOver() {\n        this.ContinueModalClose();\n        if (this.state.associated_id != -1) {\n            this.UpdateSession();\n        }\n        this.TimeClear();\n        //console.log(this.state.associated_id);\n    }\n\n    ContinueBreak(){\n        console.log(\"here\");\n        this.setState({\n            continue_show: false,\n        });\n        this.CreatePomodoro(true);\n    }\n    \n    //--------------------------------\n    //Three functions to control the stop modal\n    StopModal() {\n        return (\n            <Modal id=\"stop_modal\" show={this.state.stop_show} onHide={this.StopModalClose}>\n                <Modal.Header>\n                    You are going to stop current pomodoro.\n                </Modal.Header>\n                <Modal.Body>\n                    Are you going to include the runtime of current incomplete pomodoro?\n                    <Row>\n                        <Col># of pomodoro completed</Col>\n                        <Col>{this.state.counter}</Col>\n                    </Row>\n                    <Row>\n                        <Col>Session Start time</Col>\n                        <Col>{this.state.start_time}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        id=\"stop_cancel_button\"\n                        onClick={this.StopCancel}\n                        variant=\"secondary\">\n                        No\n                    </Button>\n                    <Button\n                        id=\"stop_confirm_button\"\n                        onClick={this.StopConfirm}\n                        variant=\"primary\">\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n    StopModalShow() {\n        this.setState({\n            stop_show: true\n        })\n    }\n\n    StopModalClose() {\n        this.setState({\n            stop_show: false\n        })\n    }\n\n\n    //-----------------------------------\n    //Two functions representing different action of user in StopModal\n    StopCancel() {\n        this.StopModalClose();\n        if (this.state.associated_id != -1) {\n            this.UpdateSession();\n        }\n        this.TimeClear();\n        //@ts-ignore\n        clearInterval(this.interval);\n        this.setState({\n            active: false,\n            counter: 0\n        })\n    }\n    StopConfirm() {\n        this.StopModalClose();\n        var time = moment().format('YYYY-MM-DDTHH:mmZ');\n        this.setState({\n            end_time: time\n        });\n\n        if (this.state.associated_id != -1) {\n            this.UpdateSession();\n        }\n        this.TimeClear();\n\n        //@ts-ignore\n        clearInterval(this.interval);\n        this.setState({\n            active: false,\n            counter: 0\n        })\n    }\n\n    //-----------------------------------\n    //functions for the modal to represent the error in HTTP Request\n    ProjectErrorModal() {\n        return (\n            <Modal show={this.props.projectErrMess != null} onHide={this.ProjectErrorModalClose}>\n                <Modal.Header>\n                    Error happened in fetching all projects\n                </Modal.Header>\n                <Modal.Body>\n                    {this.props.projectErrMess}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        id=\"project_error_button\"\n                        variant=\"primary\"\n                        onClick={this.ProjectErrorModalClose}>\n                        Ok\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    ProjectErrorModalClose() {\n        this.props.clearErrorMessage();\n    }\n\n    PomodoroErrorModal() {\n        return (\n            <Modal show={this.state.error_message != null} onHide={this.PomodoroErrorModalClose}>\n                <Modal.Header>\n                    There is an error in pomodoro part\n                </Modal.Header>\n\n                <Modal.Body>\n                    {this.state.error_message}\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button id=\"pomodoro_error_button\" onClick={this.PomodoroErrorModalClose} variant=\"primary\">\n                        Ok\n                    </Button>\n                </Modal.Footer>\n\n            </Modal>\n        )\n    }\n\n    PomodoroErrorModalClose() {\n        this.setState({\n            error_message: null\n        })\n    }\n\n    //-----------------------------------\n    //Three functions for tracking time\n    TimeClear() {\n        this.setState({\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n            total_seconds: 0,\n        });\n    }\n\n    CreatePomodoro(something: boolean){\n        var temp_seconds = this.state.seconds;\n        var temp_minutes = this.state.minutes;\n        var temp_hours = this.state.hours;\n        if(something){\n            temp_hours = 0;\n            temp_minutes = 5;\n            temp_seconds = 0;\n        }\n        else{\n            if(temp_seconds >= 60){\n                temp_seconds -= 60;\n                temp_minutes += 1;\n            }\n            if(temp_minutes >= 60){\n                temp_minutes -= 60;\n                temp_hours += 1;\n            }\n        }\n        this.setState({\n            active: true,\n            total_seconds: temp_hours * 3600 + temp_minutes * 60 + temp_seconds,\n            hours: temp_hours,\n            minutes: temp_minutes,\n            seconds: temp_seconds,\n            is_break: something,\n        });\n\n        //@ts-ignore\n        this.interval = setInterval(this.Countdown, 1000);\n    }\n\n    Countdown() {\n        if (this.state.active) {\n            var seconds = this.state.seconds;\n            var minutes = this.state.minutes;\n            var hours = this.state.hours;\n            var total_seconds = this.state.total_seconds;\n            seconds--;\n            total_seconds--;\n            //console.log(\"here\");\n            if (seconds < 0) {\n                seconds += 60;\n                minutes -= 1;\n            }\n            if (minutes < 0) {\n                minutes += 60;\n                hours -= 1;\n            }\n            this.setState({\n                seconds: seconds,\n                hours: hours,\n                minutes: minutes,\n                total_seconds: total_seconds\n            });\n            if (total_seconds <= 0) {\n                //@ts-ignore\n                clearInterval(this.interval);\n                var time = moment().format('YYYY-MM-DDTHH:mmZ');\n                if(this.state.is_break){\n                    this.setState({\n                        end_time: time,\n                        active: false,\n                        is_break: false,\n                    })\n                }\n                else{\n                    this.setState({\n                        end_time: time,\n                        counter: this.state.counter + 1,\n                        active: false,\n                        is_break: false\n                    });\n                }\n                this.ContinueModalShow();\n            }\n        }\n    }\n\n    //Two actions that will deal with API\n    CreateSession() {\n        sessionService.addUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.start_time).then((res) => {\n            console.log(res.data);\n            this.setState({\n                active_session_id: res.data.id\n            });\n        })\n            .catch((error) => {\n                console.log(error.message)\n                this.setState({\n                    error_message: error.message\n                })\n            })\n    }\n\n    UpdateSession() {\n        console.log(this.state.counter);\n        sessionService.updateUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.active_session_id, this.state.start_time, this.state.end_time, this.state.counter)\n            .then((res) => {\n                console.log(res.data);\n            })\n            .catch((error) => {\n                console.log(error.message)\n                this.setState({\n                    error_message: error.message\n                })\n            });\n    }\n\n    constructor(props: Props) {\n        super(props);\n        this.CreateModal = this.CreateModal.bind(this);\n        this.CreateModalClose = this.CreateModalClose.bind(this);\n        this.CreateModalShow = this.CreateModalShow.bind(this);\n        this.ChangeSelect = this.ChangeSelect.bind(this);\n        this.CreateSubmit = this.CreateSubmit.bind(this);\n        this.CreateCancel = this.CreateCancel.bind(this);\n\n        this.ContinueModal = this.ContinueModal.bind(this);\n        this.ContinueModalShow = this.ContinueModalShow.bind(this);\n        this.ContinueModalClose = this.ContinueModalClose.bind(this);\n\n        this.Continue = this.Continue.bind(this);\n        this.ContinueOver = this.ContinueOver.bind(this);\n        this.ContinueBreak = this.ContinueBreak.bind(this);\n\n        this.StopModal = this.StopModal.bind(this);\n        this.StopModalShow = this.StopModalShow.bind(this);\n        this.StopModalClose = this.StopModalClose.bind(this);\n\n        this.StopConfirm = this.StopConfirm.bind(this);\n        this.StopCancel = this.StopCancel.bind(this);\n\n        this.UpdateSession = this.UpdateSession.bind(this);\n        this.CreateSession = this.CreateSession.bind(this);\n\n        this.TimeClear = this.TimeClear.bind(this);\n        this.CreatePomodoro = this.CreatePomodoro.bind(this);\n        this.Countdown = this.Countdown.bind(this);\n\n        this.ProjectErrorModal = this.ProjectErrorModal.bind(this);\n        this.ProjectErrorModalClose = this.ProjectErrorModalClose.bind(this);\n        this.PomodoroErrorModal = this.PomodoroErrorModal.bind(this);\n        this.PomodoroErrorModalClose = this.PomodoroErrorModalClose.bind(this);\n\n        this.state = {\n            seconds: 0,\n            minutes: 0,\n            hours: 0,\n            total_seconds: 0,\n            associated_id: -1,\n            active_session_id: -1,\n\n            start_time: \"\",\n            end_time: \"\",\n            total_hours: 0,\n\n            create_show: false,\n            continue_show: false,\n            stop_show: false,\n            active: false,\n            counter: 0,\n            is_break: false,\n\n            error_message: null\n        };\n        //@ts-ignore\n        this.interval;\n\n    }\n\n    componentDidMount() {\n        this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n    }\n\n    render() {\n        return (\n            <div>\n                <Container fluid>\n                    <Row>\n                        <Col md={12}>\n                            <Card\n                                title=\"Pomodoros\"\n                                category=\"You can create and track your Pomodoro Here\"\n                                ctTableFullWidth\n                                ctTableResponsive\n                                content={\n                                    <div>\n                                        <Row>\n                                            <Col>\n                                                <Button\n                                                    id=\"create_pomodoro_button\"\n                                                    variant=\"primary\"\n                                                    onClick={this.CreateModalShow}\n                                                    disabled={this.state.active}\n                                                    className=\"col\">\n                                                    Create a New Pomodoro\n                                            </Button>\n                                            </Col>\n                                            <Col>\n                                                <Button\n                                                    id=\"stop_pomodoro_button\"\n                                                    onClick={this.StopModalShow}\n                                                    variant=\"secondary\"\n                                                    disabled={!this.state.active}\n                                                    className=\"col\">\n                                                    Stop current ongoing Pomodoro\n                                        </Button>\n                                      </Col>\n                                  </Row>\n                                  \n                                  <div style={{paddingTop: 20}}>\n                                  <Row>\n                                    <Col>\n                                        <div style={!this.state.active ? {backgroundColor: \"lightblue\", textAlign: \"center\"} : {backgroundColor: \"white\", textAlign: \"center\"}}>\n                                            inactive\n                                        </div>\n                                    </Col>\n                                    <Col md={{offset: 1}}>\n                                        <div style={(this.state.active && !this.state.is_break) ? {backgroundColor: \"lightblue\", textAlign: \"center\"}: {backgroundColor: \"white\", textAlign: \"center\"}}>\n                                            Working\n                                        </div>\n                                    </Col>\n                                    <Col md={{offset: 1}}>\n                                        <div style={(this.state.active && this.state.is_break) ? {backgroundColor: \"lightblue\", textAlign: \"center\"} : {backgroundColor: \"white\", textAlign: \"center\"}}>\n                                            Taking a break\n                                        </div>\n                                    </Col>\n                                  </Row>\n\n                                  </div>\n                                  \n                                  <div style={{fontSize: \"64px\", textAlign: \"center\"}}>\n                                    {(\"0\" + this.state.hours.toString()).slice(-2)} : {(\"0\" + this.state.minutes.toString()).slice(-2)} : {(\"0\" + this.state.seconds.toString()).slice(-2)}\n                                    {this.state.active}\n                                  </div>\n                              </div>\n                           }\n                        />\n                     </Col>\n                  </Row>\n               </Container>\n               <this.CreateModal></this.CreateModal>\n               <this.ContinueModal></this.ContinueModal>\n               <this.StopModal></this.StopModal>\n               <this.ProjectErrorModal></this.ProjectErrorModal>\n               <this.PomodoroErrorModal></this.PomodoroErrorModal>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Pomodoro);"]},"metadata":{},"sourceType":"module"}