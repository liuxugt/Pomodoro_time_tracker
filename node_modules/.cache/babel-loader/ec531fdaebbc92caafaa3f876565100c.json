{"ast":null,"code":"// API calls under users/\nimport axios from 'axios';\nimport { BASE_URL } from \"../shared/baseUrl\";\nexport var projectService = {\n  getUserAllProjects: getUserAllProjects,\n  addUserProject: addUserProject,\n  getUserProject: getUserProject,\n  putUserProject: putUserProject,\n  deleteUserProject: deleteUserProject,\n  getProjectReport: getProjectReport\n};\n\nfunction getUserAllProjects(userId) {\n  // get projects for a user\n  return axios.get(BASE_URL + '/users/' + userId + '/projects').then(function (res) {\n    return res;\n  });\n}\n\nfunction addUserProject(userId, projectname) {\n  // create project for user\n  return axios.post(BASE_URL + '/users/' + userId + '/projects', {\n    id: 0,\n    projectname: projectname,\n    userId: userId\n  }).then(function (res) {\n    return res;\n  });\n}\n\nfunction getUserProject(userId, projectId) {\n  // Get project by ID for a given user\n  return axios.get(BASE_URL + '/users/' + userId + '/projects/' + projectId).then(function (res) {\n    return res;\n  });\n}\n\nfunction putUserProject(userId, projectId, projectname) {\n  // Get project by ID for a given user\n  return axios.put(BASE_URL + '/users/' + userId + '/projects/' + projectId, {\n    id: 0,\n    projectname: projectname,\n    userId: userId\n  }).then(function (res) {\n    return res;\n  });\n}\n\nfunction deleteUserProject(userId, projectId) {\n  // Get project by ID for a given user\n  return axios.delete(BASE_URL + '/users/' + userId + '/projects/' + projectId).then(function (res) {\n    return res;\n  });\n}\n\nfunction getProjectReport(userId, projectId, body) {\n  // let from = body.from instanceof Date ? body.from : new Date('1960-01-01T03:24:00');\n  // let to = body.to instanceof Date ? body.to : new Date()\n  // let completedPomo = body.completedPomo ? body.completedPomo : true\n  // let hoursWorked = body.hoursWorked ? body.hoursWorked : true\n  // Get project report by userID and projectID \n  return axios.get(BASE_URL + '/users/' + userId + '/projects/' + projectId + '/report', {\n    params: {\n      from: body.from,\n      to: body.to,\n      includeCompletedPomodoros: body.completedPomo,\n      includeTotalHoursWorkedOnProject: body.hoursWorked\n    }\n  }).then(function (res) {\n    return res;\n  });\n}","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/services/project.service.ts"],"names":["axios","BASE_URL","projectService","getUserAllProjects","addUserProject","getUserProject","putUserProject","deleteUserProject","getProjectReport","userId","get","then","res","projectname","post","id","projectId","put","delete","body","params","from","to","includeCompletedPomodoros","completedPomo","includeTotalHoursWorkedOnProject","hoursWorked"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,IAAMC,cAAc,GAAG;AAC1BC,EAAAA,kBAAkB,EAAlBA,kBAD0B;AAE1BC,EAAAA,cAAc,EAAdA,cAF0B;AAG1BC,EAAAA,cAAc,EAAdA,cAH0B;AAI1BC,EAAAA,cAAc,EAAdA,cAJ0B;AAK1BC,EAAAA,iBAAiB,EAAjBA,iBAL0B;AAM1BC,EAAAA,gBAAgB,EAAhBA;AAN0B,CAAvB;;AASP,SAASL,kBAAT,CAA4BM,MAA5B,EAA4C;AACxC;AACA,SAAOT,KAAK,CAACU,GAAN,CAAUT,QAAQ,GAAG,SAAX,GAAuBQ,MAAvB,GAAgC,WAA1C,EAAuDE,IAAvD,CAA4D,UAAAC,GAAG,EAAI;AACtE,WAAOA,GAAP;AACH,GAFM,CAAP;AAGH;;AACD,SAASR,cAAT,CAAwBK,MAAxB,EAAwCI,WAAxC,EAA6D;AACzD;AACA,SAAOb,KAAK,CAACc,IAAN,CAAWb,QAAQ,GAAG,SAAX,GAAuBQ,MAAvB,GAAgC,WAA3C,EAAwD;AAC3DM,IAAAA,EAAE,EAAE,CADuD;AAE3DF,IAAAA,WAAW,EAAEA,WAF8C;AAG3DJ,IAAAA,MAAM,EAAEA;AAHmD,GAAxD,EAIJE,IAJI,CAIC,UAAAC,GAAG,EAAI;AACX,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;;AACD,SAASP,cAAT,CAAwBI,MAAxB,EAAwCO,SAAxC,EAA2D;AACvD;AACA,SAAOhB,KAAK,CAACU,GAAN,CAAUT,QAAQ,GAAG,SAAX,GAAuBQ,MAAvB,GAAgC,YAAhC,GAA+CO,SAAzD,EAAoEL,IAApE,CAAyE,UAAAC,GAAG,EAAI;AACnF,WAAOA,GAAP;AACH,GAFM,CAAP;AAGH;;AACD,SAASN,cAAT,CAAwBG,MAAxB,EAAwCO,SAAxC,EAA2DH,WAA3D,EAAgF;AAC5E;AACA,SAAOb,KAAK,CAACiB,GAAN,CAAUhB,QAAQ,GAAG,SAAX,GAAuBQ,MAAvB,GAAgC,YAAhC,GAA+CO,SAAzD,EAAoE;AACvED,IAAAA,EAAE,EAAE,CADmE;AAEvEF,IAAAA,WAAW,EAAEA,WAF0D;AAGvEJ,IAAAA,MAAM,EAAEA;AAH+D,GAApE,EAIJE,IAJI,CAIC,UAAAC,GAAG,EAAI;AACX,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;;AACD,SAASL,iBAAT,CAA2BE,MAA3B,EAA2CO,SAA3C,EAA8D;AAC1D;AACA,SAAOhB,KAAK,CAACkB,MAAN,CAAajB,QAAQ,GAAG,SAAX,GAAuBQ,MAAvB,GAAgC,YAAhC,GAA+CO,SAA5D,EAAuEL,IAAvE,CAA4E,UAAAC,GAAG,EAAI;AACtF,WAAOA,GAAP;AACH,GAFM,CAAP;AAGH;;AAED,SAASJ,gBAAT,CAA0BC,MAA1B,EAA0CO,SAA1C,EAA6DG,IAA7D,EAAwE;AACpE;AACA;AACA;AACA;AACA;AACA,SAAOnB,KAAK,CAACU,GAAN,CAAUT,QAAQ,GAAG,SAAX,GAAuBQ,MAAvB,GAAgC,YAAhC,GAA+CO,SAA/C,GAA2D,SAArE,EAAgF;AACnFI,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAEF,IAAI,CAACE,IADP;AAEJC,MAAAA,EAAE,EAAEH,IAAI,CAACG,EAFL;AAGJC,MAAAA,yBAAyB,EAAEJ,IAAI,CAACK,aAH5B;AAIJC,MAAAA,gCAAgC,EAAEN,IAAI,CAACO;AAJnC;AAD2E,GAAhF,EAOJf,IAPI,CAOC,UAAAC,GAAG,EAAI;AACX,WAAOA,GAAP;AACH,GATM,CAAP;AAUH","sourcesContent":["// API calls under users/\nimport axios from 'axios';\nimport { BASE_URL } from \"../shared/baseUrl\";\n\nexport const projectService = {\n    getUserAllProjects,\n    addUserProject,\n    getUserProject,\n    putUserProject,\n    deleteUserProject,\n    getProjectReport\n};\n\nfunction getUserAllProjects(userId: number) {\n    // get projects for a user\n    return axios.get(BASE_URL + '/users/' + userId + '/projects').then(res => {\n        return res;\n    })\n}\nfunction addUserProject(userId: number, projectname: string) {\n    // create project for user\n    return axios.post(BASE_URL + '/users/' + userId + '/projects', {\n        id: 0,\n        projectname: projectname,\n        userId: userId\n    }).then(res => {\n        return res;\n    })\n}\nfunction getUserProject(userId: number, projectId: number) {\n    // Get project by ID for a given user\n    return axios.get(BASE_URL + '/users/' + userId + '/projects/' + projectId).then(res => {\n        return res;\n    })\n}\nfunction putUserProject(userId: number, projectId: number, projectname: string) {\n    // Get project by ID for a given user\n    return axios.put(BASE_URL + '/users/' + userId + '/projects/' + projectId, {\n        id: 0,\n        projectname: projectname,\n        userId: userId\n    }).then(res => {\n        return res;\n    })\n}\nfunction deleteUserProject(userId: number, projectId: number) {\n    // Get project by ID for a given user\n    return axios.delete(BASE_URL + '/users/' + userId + '/projects/' + projectId).then(res => {\n        return res;\n    })\n}\n\nfunction getProjectReport(userId: number, projectId: number, body: any) {\n    // let from = body.from instanceof Date ? body.from : new Date('1960-01-01T03:24:00');\n    // let to = body.to instanceof Date ? body.to : new Date()\n    // let completedPomo = body.completedPomo ? body.completedPomo : true\n    // let hoursWorked = body.hoursWorked ? body.hoursWorked : true\n    // Get project report by userID and projectID \n    return axios.get(BASE_URL + '/users/' + userId + '/projects/' + projectId + '/report', {\n        params: {\n            from: body.from,\n            to: body.to,\n            includeCompletedPomodoros: body.completedPomo,\n            includeTotalHoursWorkedOnProject: body.hoursWorked\n        }\n    }).then(res => {\n        return res;\n    })\n}"]},"metadata":{},"sourceType":"module"}