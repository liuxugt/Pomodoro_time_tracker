{"ast":null,"code":"import _classCallCheck from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Pomodoro.tsx\";\nimport * as React from 'react';\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchAllProjects as _fetchAllProjects, clearErrorMessage as _clearErrorMessage } from '../redux/actionCreators/project.action';\nimport { sessionService } from '../services/session.service';\nimport OptionList from '../components/List/OptionList';\nimport working1 from \"./../assets/img/working1.svg\";\nimport working2 from \"./../assets/img/working2.svg\";\nimport chill1 from \"./../assets/img/chill1.svg\";\nimport chill2 from \"./../assets/img/chill2.svg\";\nvar imgs = [working1, working2, chill1, chill2];\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectlist: state.project.list,\n    projectErrMess: state.project.errMess\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAllProjects: function fetchAllProjects(userId) {\n      dispatch(_fetchAllProjects(userId));\n    },\n    clearErrorMessage: function clearErrorMessage() {\n      dispatch(_clearErrorMessage());\n    }\n  };\n};\n\n;\n;\n\nvar Pomodoro =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pomodoro, _React$Component);\n\n  _createClass(Pomodoro, [{\n    key: \"CreateModal\",\n    //-----------------------------------\n    //Three functions for modals to create new pomodoro\n    value: function CreateModal() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        id: \"create_modal\",\n        show: this.state.create_show,\n        onHide: this.CreateModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Set duration for your pomodoro and break\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Set duration for your pomodoro\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_hours\",\n        value: this.state.set_hours,\n        onChange: function onChange(e) {\n          _this2.setState({\n            set_hours: e.target.value % 100,\n            hours: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_minutes\",\n        value: this.state.set_minutes,\n        onChange: function onChange(e) {\n          _this2.setState({\n            set_minutes: e.target.value % 100,\n            minutes: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_second\",\n        value: this.state.set_seconds,\n        onChange: function onChange(e) {\n          _this2.setState({\n            set_seconds: e.target.value % 100,\n            seconds: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), \"second(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Set duration for your break\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"break_hours\",\n        value: this.state.break_hours,\n        onChange: function onChange(e) {\n          _this2.setState({\n            break_hours: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"break_minutes\",\n        value: this.state.break_minutes,\n        onChange: function onChange(e) {\n          _this2.setState({\n            break_minutes: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"break_seconds\",\n        value: this.state.break_seconds,\n        onChange: function onChange(e) {\n          _this2.setState({\n            break_seconds: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), \"second(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"project_select_box\",\n        value: this.state.associated_id,\n        onChange: this.ChangeSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \" No association \"), this.props.projectlist.map(function (project, index) {\n        return React.createElement(OptionList, {\n          project: project,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        });\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"create_cancel_button\",\n        variant: \"secondary\",\n        onClick: this.CreateCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        id: \"create_confirm_button\",\n        variant: \"primary\",\n        onClick: this.CreateSubmit,\n        disabled: this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \" Submit \")));\n    }\n  }, {\n    key: \"CreateModalShow\",\n    value: function CreateModalShow() {\n      this.setState({\n        create_show: true\n      });\n    }\n  }, {\n    key: \"CreateModalClose\",\n    value: function CreateModalClose() {\n      this.setState({\n        create_show: false\n      });\n    } //-----------------------------------\n    //Three functions representing the action of user on create modal\n\n  }, {\n    key: \"CreateSubmit\",\n    value: function CreateSubmit() {\n      var time = moment().format('YYYY-MM-DDTHH:mmZ');\n      console.log(time);\n      this.setState({\n        start_time: time\n      });\n\n      if (this.state.associated_id != -1) {\n        this.CreateSession();\n      }\n\n      this.CreatePomodoro(false);\n      this.CreateModalClose();\n    }\n  }, {\n    key: \"CreateCancel\",\n    value: function CreateCancel() {\n      this.TimeClear();\n      this.CreateModalClose();\n    }\n  }, {\n    key: \"ChangeSelect\",\n    value: function ChangeSelect(e) {\n      this.setState({\n        associated_id: e.target.value\n      });\n    } //-----------------------------------\n    //Four functions to continues create new pomodoros when one is completed\n\n  }, {\n    key: \"ContinueModal\",\n    value: function ContinueModal() {\n      return React.createElement(Modal, {\n        id: \"continue_modal\",\n        show: this.state.continue_show,\n        onHide: this.ContinueOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Are you going to append a new pomodoro. If so, click Yes. If not, click No\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Pomodoro\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_hours\",\n        disabled: true,\n        value: this.state.set_hours // onChange={(e: any) => {\n        //     this.setState({ hours: e.target.value % 100 });\n        // }} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_minutes\",\n        disabled: true,\n        value: this.state.set_minutes // onChange={(e: any) => {\n        //     this.setState({ minutes: e.target.value % 100 });\n        // }} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_second\",\n        disabled: true,\n        value: this.state.set_seconds // onChange={(e: any) => {\n        //     this.setState({ seconds: e.target.value % 100 });\n        // }} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), \"second(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Break\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_break_hours\",\n        disabled: true,\n        value: this.state.break_hours,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_break_minutes\",\n        disabled: true,\n        value: this.state.break_minutes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"continue_break_seconds\",\n        disabled: true,\n        value: this.state.break_seconds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), \"second(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"# of pomodoro completed\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, this.state.counter)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Session Start time\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, this.state.start_time))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"continue_take_a_break\",\n        variant: \"outline-primary\",\n        onClick: this.ContinueBreak,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Take a break\"), React.createElement(Button, {\n        id: \"continue_cancel_button\",\n        variant: \"secondary\",\n        onClick: this.ContinueOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        id: \"continue_confirm_button\",\n        variant: \"primary\",\n        onClick: this.Continue,\n        disabled: this.state.set_hours == 0 && this.state.set_minutes == 0 && this.state.set_seconds == 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Yes\")));\n    }\n  }, {\n    key: \"ContinueModalShow\",\n    value: function ContinueModalShow() {\n      this.setState({\n        continue_show: true\n      });\n    }\n  }, {\n    key: \"ContinueModalClose\",\n    value: function ContinueModalClose() {\n      this.setState({\n        continue_show: false\n      });\n    } //-----------------------------------\n    //two functions representing two actions user chooses\n\n  }, {\n    key: \"Continue\",\n    value: function Continue() {\n      this.ContinueModalClose();\n      this.CreatePomodoro(false);\n    }\n  }, {\n    key: \"ContinueOver\",\n    value: function ContinueOver() {\n      this.ContinueModalClose();\n\n      if (this.state.associated_id != -1) {\n        this.UpdateSession();\n      }\n\n      this.TimeClear(); //console.log(this.state.associated_id);\n    }\n  }, {\n    key: \"ContinueBreak\",\n    value: function ContinueBreak() {\n      console.log(\"here\");\n      this.setState({\n        continue_show: false\n      });\n      this.CreatePomodoro(true);\n    } //--------------------------------\n    //Three functions to control the stop modalx\n\n  }, {\n    key: \"StopModal\",\n    value: function StopModal() {\n      return React.createElement(Modal, {\n        id: \"stop_modal\",\n        show: this.state.stop_show,\n        onHide: this.StopModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"You are going to stop current pomodoro.\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Are you going to include the runtime of current incomplete pomodoro?\", React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"# of pomodoro completed\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, this.state.counter)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Session Start time\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, this.state.start_time))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"stop_cancel_button\",\n        onClick: this.StopCancel,\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        id: \"stop_confirm_button\",\n        onClick: this.StopConfirm,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Yes\")));\n    }\n  }, {\n    key: \"StopModalShow\",\n    value: function StopModalShow() {\n      this.setState({\n        stop_show: true\n      });\n    }\n  }, {\n    key: \"StopModalClose\",\n    value: function StopModalClose() {\n      this.setState({\n        stop_show: false\n      });\n    } //-----------------------------------\n    //Two functions representing different action of user in StopModal\n\n  }, {\n    key: \"StopCancel\",\n    value: function StopCancel() {\n      this.StopModalClose();\n\n      if (this.state.associated_id != -1) {\n        this.UpdateSession();\n      }\n\n      this.TimeClear(); //@ts-ignore\n\n      clearInterval(this.interval);\n      this.setState({\n        active: false,\n        counter: 0\n      });\n    }\n  }, {\n    key: \"StopConfirm\",\n    value: function StopConfirm() {\n      var _this3 = this;\n\n      this.StopModalClose();\n      var time = moment().format('YYYY-MM-DDTHH:mmZ');\n      this.setState({\n        end_time: time,\n        counter: this.state.counter + 1\n      }, function () {\n        if (_this3.state.associated_id != -1) {\n          _this3.UpdateSession();\n        }\n\n        _this3.TimeClear(); //@ts-ignore\n\n\n        clearInterval(_this3.interval);\n\n        _this3.setState({\n          active: false,\n          counter: 0\n        });\n      });\n    } //-----------------------------------\n    //functions for the modal to represent the error in HTTP Request\n\n  }, {\n    key: \"ProjectErrorModal\",\n    value: function ProjectErrorModal() {\n      return React.createElement(Modal, {\n        show: this.props.projectErrMess != null,\n        onHide: this.ProjectErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Error happened in fetching all projects\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, this.props.projectErrMess), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"project_error_button\",\n        variant: \"primary\",\n        onClick: this.ProjectErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }, {\n    key: \"ProjectErrorModalClose\",\n    value: function ProjectErrorModalClose() {\n      this.props.clearErrorMessage();\n    }\n  }, {\n    key: \"PomodoroErrorModal\",\n    value: function PomodoroErrorModal() {\n      return React.createElement(Modal, {\n        show: this.state.error_message != null,\n        onHide: this.PomodoroErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, \"There is an error in pomodoro part\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, this.state.error_message), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"pomodoro_error_button\",\n        onClick: this.PomodoroErrorModalClose,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }, {\n    key: \"PomodoroErrorModalClose\",\n    value: function PomodoroErrorModalClose() {\n      this.setState({\n        error_message: null\n      });\n    } //-----------------------------------\n    //Three functions for tracking time\n\n  }, {\n    key: \"TimeClear\",\n    value: function TimeClear() {\n      this.setState({\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        set_hours: 0,\n        set_minutes: 0,\n        set_seconds: 0,\n        break_hours: 0,\n        break_minutes: 0,\n        break_seconds: 0,\n        total_seconds: 0\n      });\n    }\n  }, {\n    key: \"CreatePomodoro\",\n    value: function CreatePomodoro(something) {\n      var temp_seconds = this.state.set_seconds;\n      var temp_minutes = this.state.set_minutes;\n      var temp_hours = this.state.set_hours;\n\n      if (something) {\n        temp_hours = this.state.break_hours;\n        temp_minutes = this.state.break_minutes;\n        temp_seconds = this.state.break_seconds;\n      } else {\n        if (temp_seconds >= 60) {\n          temp_seconds -= 60;\n          temp_minutes += 1;\n        }\n\n        if (temp_minutes >= 60) {\n          temp_minutes -= 60;\n          temp_hours += 1;\n        }\n      }\n\n      this.setState({\n        active: true,\n        total_seconds: temp_hours * 3600 + temp_minutes * 60 + temp_seconds,\n        hours: temp_hours,\n        minutes: temp_minutes,\n        seconds: temp_seconds,\n        is_break: something\n      }); //@ts-ignore\n\n      this.interval = setInterval(this.Countdown, 1000);\n    }\n  }, {\n    key: \"Countdown\",\n    value: function Countdown() {\n      if (this.state.active) {\n        var seconds = this.state.seconds;\n        var minutes = this.state.minutes;\n        var hours = this.state.hours;\n        var total_seconds = this.state.total_seconds;\n        seconds--;\n        total_seconds--; //console.log(\"here\");\n\n        if (seconds < 0) {\n          seconds += 60;\n          minutes -= 1;\n        }\n\n        if (minutes < 0) {\n          minutes += 60;\n          hours -= 1;\n        }\n\n        this.setState({\n          seconds: seconds,\n          hours: hours,\n          minutes: minutes,\n          total_seconds: total_seconds\n        });\n\n        if (total_seconds <= 0) {\n          //@ts-ignore\n          clearInterval(this.interval);\n          var time = moment().format('YYYY-MM-DDTHH:mmZ');\n\n          if (this.state.is_break) {\n            this.setState({\n              end_time: time,\n              active: false,\n              is_break: false\n            });\n          } else {\n            this.setState({\n              end_time: time,\n              counter: this.state.counter + 1,\n              active: false,\n              is_break: false\n            });\n          }\n\n          this.ContinueModalShow();\n        }\n      }\n    } //Two actions that will deal with API\n\n  }, {\n    key: \"CreateSession\",\n    value: function CreateSession() {\n      var _this4 = this;\n\n      sessionService.addUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.start_time).then(function (res) {\n        console.log(res.data);\n\n        _this4.setState({\n          active_session_id: res.data.id,\n          counter: 0\n        });\n      }).catch(function (error) {\n        console.log(error.message);\n\n        _this4.setState({\n          error_message: error.message\n        });\n      });\n    }\n  }, {\n    key: \"UpdateSession\",\n    value: function UpdateSession() {\n      var _this5 = this;\n\n      console.log(this.state.counter);\n      sessionService.updateUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.active_session_id, this.state.start_time, this.state.end_time, this.state.counter).then(function (res) {\n        console.log(res.data);\n      }).catch(function (error) {\n        console.log(error.message);\n\n        _this5.setState({\n          error_message: error.message\n        });\n      });\n    }\n  }, {\n    key: \"dance\",\n    value: function dance() {\n      if (this.curImg.current) {\n        var paths = this.curImg.current.src.split('/');\n        var image = paths[paths.length - 1];\n        if (image === imgs[0].split('/')[imgs[0].split('/').length - 1]) this.curImg.current.src = imgs[1];\n        if (image === imgs[1].split('/')[imgs[1].split('/').length - 1]) this.curImg.current.src = imgs[0];\n        if (image === imgs[2].split('/')[imgs[2].split('/').length - 1]) this.curImg.current.src = imgs[3];\n        if (image === imgs[3].split('/')[imgs[3].split('/').length - 1]) this.curImg.current.src = imgs[2];\n      }\n    }\n  }]);\n\n  function Pomodoro(props) {\n    var _this;\n\n    _classCallCheck(this, Pomodoro);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pomodoro).call(this, props));\n    _this.curImg = void 0;\n    _this.CreateModal = _this.CreateModal.bind(_assertThisInitialized(_this));\n    _this.CreateModalClose = _this.CreateModalClose.bind(_assertThisInitialized(_this));\n    _this.CreateModalShow = _this.CreateModalShow.bind(_assertThisInitialized(_this));\n    _this.ChangeSelect = _this.ChangeSelect.bind(_assertThisInitialized(_this));\n    _this.CreateSubmit = _this.CreateSubmit.bind(_assertThisInitialized(_this));\n    _this.CreateCancel = _this.CreateCancel.bind(_assertThisInitialized(_this));\n    _this.ContinueModal = _this.ContinueModal.bind(_assertThisInitialized(_this));\n    _this.ContinueModalShow = _this.ContinueModalShow.bind(_assertThisInitialized(_this));\n    _this.ContinueModalClose = _this.ContinueModalClose.bind(_assertThisInitialized(_this));\n    _this.Continue = _this.Continue.bind(_assertThisInitialized(_this));\n    _this.ContinueOver = _this.ContinueOver.bind(_assertThisInitialized(_this));\n    _this.ContinueBreak = _this.ContinueBreak.bind(_assertThisInitialized(_this));\n    _this.StopModal = _this.StopModal.bind(_assertThisInitialized(_this));\n    _this.StopModalShow = _this.StopModalShow.bind(_assertThisInitialized(_this));\n    _this.StopModalClose = _this.StopModalClose.bind(_assertThisInitialized(_this));\n    _this.StopConfirm = _this.StopConfirm.bind(_assertThisInitialized(_this));\n    _this.StopCancel = _this.StopCancel.bind(_assertThisInitialized(_this));\n    _this.UpdateSession = _this.UpdateSession.bind(_assertThisInitialized(_this));\n    _this.CreateSession = _this.CreateSession.bind(_assertThisInitialized(_this));\n    _this.TimeClear = _this.TimeClear.bind(_assertThisInitialized(_this));\n    _this.CreatePomodoro = _this.CreatePomodoro.bind(_assertThisInitialized(_this));\n    _this.Countdown = _this.Countdown.bind(_assertThisInitialized(_this));\n    _this.ProjectErrorModal = _this.ProjectErrorModal.bind(_assertThisInitialized(_this));\n    _this.ProjectErrorModalClose = _this.ProjectErrorModalClose.bind(_assertThisInitialized(_this));\n    _this.PomodoroErrorModal = _this.PomodoroErrorModal.bind(_assertThisInitialized(_this));\n    _this.PomodoroErrorModalClose = _this.PomodoroErrorModalClose.bind(_assertThisInitialized(_this));\n    _this.dance = _this.dance.bind(_assertThisInitialized(_this));\n    _this.state = {\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n      total_seconds: 0,\n      associated_id: -1,\n      active_session_id: -1,\n      set_seconds: 0,\n      set_minutes: 0,\n      set_hours: 0,\n      break_seconds: 0,\n      break_minutes: 0,\n      break_hours: 0,\n      start_time: \"\",\n      end_time: \"\",\n      total_hours: 0,\n      create_show: false,\n      continue_show: false,\n      stop_show: false,\n      active: false,\n      counter: 0,\n      is_break: false,\n      error_message: null\n    }; //@ts-ignore\n\n    _this.interval;\n    _this.curImg = React.createRef();\n    return _this;\n  }\n\n  _createClass(Pomodoro, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n      setInterval(this.dance, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Pomodoro Timer\",\n        icon: \"pe-7s-stopwatch\",\n        hCenter: true,\n        ctTableFullWidth: true,\n        ctTableResponsive: true,\n        content: React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"button-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 701\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btn-container col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 702\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"create_pomodoro_button\",\n          variant: \"primary\",\n          onClick: this.CreateModalShow,\n          disabled: this.state.active,\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 703\n          },\n          __self: this\n        }, \"Create a New Pomodoro\")), React.createElement(\"div\", {\n          className: \"btn-container col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 712\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"stop_pomodoro_button\",\n          onClick: this.StopModalShow,\n          variant: \"danger\",\n          disabled: !this.state.active,\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 713\n          },\n          __self: this\n        }, \"Stop current ongoing Pomodoro\"))), React.createElement(\"div\", {\n          className: \"img-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723\n          },\n          __self: this\n        }, !this.state.active || this.state.active && !this.state.is_break ? React.createElement(\"img\", {\n          src: imgs[0],\n          ref: this.curImg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 726\n          },\n          __self: this\n        }) : React.createElement(\"img\", {\n          src: imgs[2],\n          ref: this.curImg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"timer-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 730\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            fontSize: \"64px\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 731\n          },\n          __self: this\n        }, (\"0\" + this.state.hours.toString()).slice(-2), \" : \", (\"0\" + this.state.minutes.toString()).slice(-2), \" : \", (\"0\" + this.state.seconds.toString()).slice(-2), this.state.active))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      })))), React.createElement(this.CreateModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }), React.createElement(this.ContinueModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }), React.createElement(this.StopModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }), React.createElement(this.ProjectErrorModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }), React.createElement(this.PomodoroErrorModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Pomodoro;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pomodoro);","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Pomodoro.tsx"],"names":["React","Container","Row","Col","Button","Modal","Card","connect","moment","fetchAllProjects","clearErrorMessage","sessionService","OptionList","imgs","working1","working2","chill1","chill2","mapStateToProps","state","projectlist","project","list","projectErrMess","errMess","mapDispatchToProps","dispatch","userId","Pomodoro","create_show","CreateModalClose","set_hours","e","setState","target","value","hours","set_minutes","minutes","set_seconds","seconds","break_hours","break_minutes","break_seconds","associated_id","ChangeSelect","props","map","index","CreateCancel","CreateSubmit","time","format","console","log","start_time","CreateSession","CreatePomodoro","TimeClear","continue_show","ContinueOver","counter","ContinueBreak","Continue","ContinueModalClose","UpdateSession","stop_show","StopModalClose","StopCancel","StopConfirm","clearInterval","interval","active","end_time","ProjectErrorModalClose","error_message","PomodoroErrorModalClose","total_seconds","something","temp_seconds","temp_minutes","temp_hours","is_break","setInterval","Countdown","ContinueModalShow","addUserProjectSession","Number","localStorage","getItem","then","res","data","active_session_id","id","catch","error","message","updateUserProjectSession","curImg","current","paths","src","split","image","length","CreateModal","bind","CreateModalShow","ContinueModal","StopModal","StopModalShow","ProjectErrorModal","PomodoroErrorModal","dance","total_hours","createRef","fontSize","textAlign","toString","slice","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchAllProjects, clearErrorMessage } from '../redux/actionCreators/project.action';\n\nimport { sessionService } from '../services/session.service';\n\nimport OptionList from '../components/List/OptionList';\n\nimport working1 from './../assets/img/working1.svg';\nimport working2 from './../assets/img/working2.svg';\nimport chill1 from './../assets/img/chill1.svg';\nimport chill2 from './../assets/img/chill2.svg';\n\nconst imgs = [working1, working2, chill1, chill2];\n\nconst mapStateToProps = (state: any) => {\n    return {\n        projectlist: state.project.list,\n        projectErrMess: state.project.errMess\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAllProjects: userId => {\n        dispatch(fetchAllProjects(userId));\n    },\n    clearErrorMessage: () => {\n        dispatch(clearErrorMessage());\n    }\n});\n\ninterface Props {\n    projectlist: any,\n    projectErrMess: any,\n    fetchAllProjects: any,\n    clearErrorMessage: any\n};\n\ninterface State {\n    minutes: number,\n    seconds: number,\n    hours: number,\n    total_seconds: number,\n    associated_id: number,\n    active_session_id: number,\n    /*\n    set_minutes: number,\n    set_seconds: number,\n    set_hours: number,\n\n    break_minutes: number,\n    break_seconds: number,\n    break_hours: number,\n    */\n\n    start_time: String,\n    end_time: String,\n    total_hours: number,\n\n    create_show: boolean,\n    continue_show: boolean,\n    stop_show: boolean,\n    active: boolean,\n    counter: number,\n    is_break: boolean,\n\n    error_message: any\n};\n\nclass Pomodoro extends React.Component<Props, State>{\n    private curImg: React.RefObject<HTMLImageElement>;\n    //-----------------------------------\n    //Three functions for modals to create new pomodoro\n    CreateModal() {\n        return <Modal id=\"create_modal\" show={this.state.create_show} onHide={this.CreateModalClose}>\n            <Modal.Header>\n                <Modal.Title>Set duration for your pomodoro and break</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>Set duration for your pomodoro</Row>\n                <Row>\n                    <input\n                        id=\"create_hours\"\n                        value={this.state.set_hours}\n                        onChange={(e: any) => {\n                            this.setState({set_hours:e.target.value % 100, hours: e.target.value % 100 });\n                        }} />\n                    hour(s)\n                </Row>\n                <Row>\n                    <input\n                        id=\"create_minutes\"\n                        value={this.state.set_minutes}\n                        onChange={(e: any) => {\n                            this.setState({set_minutes: e.target.value % 100, minutes: e.target.value % 100 });\n                        }} />\n                    minute(s)\n                </Row>\n                <Row>\n                    <input\n                        id=\"create_second\"\n                        value={this.state.set_seconds}\n                        onChange={(e: any) => {\n                            this.setState({set_seconds: e.target.value % 100, seconds: e.target.value % 100 });\n                        }} />\n                    second(s)\n                </Row>\n                <Row>Set duration for your break</Row>\n                <Row>\n                    <input\n                        id=\"break_hours\"\n                        value={this.state.break_hours}\n                        onChange={(e: any) => {\n                            this.setState({break_hours:e.target.value % 100});\n                        }} />\n                    hour(s)\n                </Row>\n                <Row>\n                    <input\n                        id=\"break_minutes\"\n                        value={this.state.break_minutes}\n                        onChange={(e: any) => {\n                            this.setState({break_minutes: e.target.value % 100});\n                        }} />\n                    minute(s)\n                </Row>\n                <Row>\n                    <input\n                        id=\"break_seconds\"\n                        value={this.state.break_seconds}\n                        onChange={(e: any) => {\n                            this.setState({break_seconds: e.target.value % 100});\n                        }} />\n                    second(s)\n                </Row>\n                <Row>\n                    <select id=\"project_select_box\" value={this.state.associated_id} onChange={this.ChangeSelect} >\n                        <option value={-1}> No association </option>\n                        {this.props.projectlist.map((project: any, index: number) => {\n                            return (\n                                <OptionList project={project} key={index}/>\n                            );\n                        })}\n                    </select>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button id=\"create_cancel_button\" variant=\"secondary\" onClick={this.CreateCancel}>\n                    Cancel\n                </Button>\n                <Button id=\"create_confirm_button\" variant=\"primary\" onClick={this.CreateSubmit}\n                    disabled={this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0}> Submit </Button>\n            </Modal.Footer>\n        </Modal>\n    }\n\n    CreateModalShow() {\n        this.setState({\n            create_show: true\n        });\n    }\n\n    CreateModalClose() {\n        this.setState({\n            create_show: false,\n        });\n    }\n\n    //-----------------------------------\n    //Three functions representing the action of user on create modal\n    CreateSubmit() {\n        var time = moment().format('YYYY-MM-DDTHH:mmZ');\n        console.log(time);\n        this.setState({\n            start_time: time\n        })\n        if (this.state.associated_id != -1) {\n            this.CreateSession();\n        }\n        this.CreatePomodoro(false);\n        this.CreateModalClose();\n    }\n    CreateCancel() {\n        this.TimeClear();\n        this.CreateModalClose();\n    }\n    ChangeSelect(e: any) {\n        this.setState({\n            associated_id: e.target.value\n        })\n    }\n\n    //-----------------------------------\n    //Four functions to continues create new pomodoros when one is completed\n    ContinueModal() {\n        return (\n            <Modal id=\"continue_modal\" show={this.state.continue_show} onHide={this.ContinueOver}>\n                <Modal.Header>\n                    Are you going to append a new pomodoro. If so, click Yes. If not, click No\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>Pomodoro</Row>\n                    <Row>\n                        <input\n                            id=\"continue_hours\"\n                            disabled={true}\n                            value={this.state.set_hours}\n                            // onChange={(e: any) => {\n                            //     this.setState({ hours: e.target.value % 100 });\n                            // }} \n                            />\n                        hour(s)\n                    </Row>\n                    <Row>\n                        <input\n                            id=\"continue_minutes\"\n                            disabled={true}\n                            value={this.state.set_minutes}\n                            // onChange={(e: any) => {\n                            //     this.setState({ minutes: e.target.value % 100 });\n                            // }} \n                            />\n                        minute(s)\n                    </Row>\n                    <Row>\n                        <input\n                            id=\"continue_second\"\n                            disabled={true}\n                            value={this.state.set_seconds}\n                            // onChange={(e: any) => {\n                            //     this.setState({ seconds: e.target.value % 100 });\n                            // }} \n                            />\n                        second(s)\n                    </Row>\n                    <Row>Break</Row>\n                    <Row>\n                        <input\n                            id=\"continue_break_hours\"\n                            disabled={true}\n                            value={this.state.break_hours}\n                            />\n                        hour(s)\n                    </Row>\n                    <Row>\n                        <input\n                            id=\"continue_break_minutes\"\n                            disabled={true}\n                            value={this.state.break_minutes}\n                            />\n                        minute(s)\n                    </Row>\n                    <Row>\n                        <input\n                            id=\"continue_break_seconds\"\n                            disabled={true}\n                            value={this.state.break_seconds}\n                            />\n                        second(s)\n                    </Row>\n                    <Row>\n                        <Col># of pomodoro completed</Col>\n                        <Col>{this.state.counter}</Col>\n                    </Row>\n                    <Row>\n                        <Col>Session Start time</Col>\n                        <Col>{this.state.start_time}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button id=\"continue_take_a_break\" variant=\"outline-primary\" onClick={this.ContinueBreak}>\n                        Take a break\n                    </Button>\n                    <Button id=\"continue_cancel_button\" variant=\"secondary\" onClick={(this.ContinueOver)}>\n                        No\n                    </Button>\n                    <Button id=\"continue_confirm_button\" variant=\"primary\" onClick={this.Continue} disabled={this.state.set_hours == 0 && this.state.set_minutes == 0 && this.state.set_seconds == 0}>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n    ContinueModalShow() {\n        this.setState({\n            continue_show: true\n        });\n    }\n\n    ContinueModalClose() {\n        this.setState({\n            continue_show: false\n        })\n    }\n\n    //-----------------------------------\n    //two functions representing two actions user chooses\n    Continue() {\n        this.ContinueModalClose();\n        this.CreatePomodoro(false);\n    }\n\n    ContinueOver() {\n        this.ContinueModalClose();\n        if (this.state.associated_id != -1) {\n            this.UpdateSession();\n        }\n        this.TimeClear();\n        //console.log(this.state.associated_id);\n    }\n\n    ContinueBreak(){\n        console.log(\"here\");\n        this.setState({\n            continue_show: false,\n        });\n        this.CreatePomodoro(true);\n    }\n    \n    //--------------------------------\n    //Three functions to control the stop modalx\n    StopModal() {\n        return (\n            <Modal id=\"stop_modal\" show={this.state.stop_show} onHide={this.StopModalClose}>\n                <Modal.Header>\n                    You are going to stop current pomodoro.\n                </Modal.Header>\n                <Modal.Body>\n                    Are you going to include the runtime of current incomplete pomodoro?\n                    <Row>\n                        <Col># of pomodoro completed</Col>\n                        <Col>{this.state.counter}</Col>\n                    </Row>\n                    <Row>\n                        <Col>Session Start time</Col>\n                        <Col>{this.state.start_time}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        id=\"stop_cancel_button\"\n                        onClick={this.StopCancel}\n                        variant=\"secondary\">\n                        No\n                    </Button>\n                    <Button\n                        id=\"stop_confirm_button\"\n                        onClick={this.StopConfirm}\n                        variant=\"primary\">\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n    StopModalShow() {\n        this.setState({\n            stop_show: true\n        })\n    }\n\n    StopModalClose() {\n        this.setState({\n            stop_show: false\n        })\n    }\n\n\n    //-----------------------------------\n    //Two functions representing different action of user in StopModal\n    StopCancel() {\n        this.StopModalClose();\n        if (this.state.associated_id != -1) {\n            this.UpdateSession();\n        }\n        this.TimeClear();\n        //@ts-ignore\n        clearInterval(this.interval);\n        this.setState({\n            active: false,\n            counter: 0\n        })\n    }\n\n    StopConfirm() {\n        this.StopModalClose();\n        var time = moment().format('YYYY-MM-DDTHH:mmZ');\n        this.setState({\n            end_time: time,\n            counter: this.state.counter + 1\n        }, ()=>{\n            if (this.state.associated_id != -1) {\n                this.UpdateSession();\n            }\n            this.TimeClear();\n            //@ts-ignore\n            clearInterval(this.interval);\n            this.setState({\n                active: false,\n                counter: 0\n            })    \n        });\n    }\n\n    //-----------------------------------\n    //functions for the modal to represent the error in HTTP Request\n    ProjectErrorModal() {\n        return (\n            <Modal show={this.props.projectErrMess != null} onHide={this.ProjectErrorModalClose}>\n                <Modal.Header>\n                    Error happened in fetching all projects\n                </Modal.Header>\n                <Modal.Body>\n                    {this.props.projectErrMess}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        id=\"project_error_button\"\n                        variant=\"primary\"\n                        onClick={this.ProjectErrorModalClose}>\n                        Ok\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    ProjectErrorModalClose() {\n        this.props.clearErrorMessage();\n    }\n\n    PomodoroErrorModal() {\n        return (\n            <Modal show={this.state.error_message != null} onHide={this.PomodoroErrorModalClose}>\n                <Modal.Header>\n                    There is an error in pomodoro part\n                </Modal.Header>\n\n                <Modal.Body>\n                    {this.state.error_message}\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button id=\"pomodoro_error_button\" onClick={this.PomodoroErrorModalClose} variant=\"primary\">\n                        Ok\n                    </Button>\n                </Modal.Footer>\n\n            </Modal>\n        )\n    }\n\n    PomodoroErrorModalClose() {\n        this.setState({\n            error_message: null\n        })\n    }\n\n    //-----------------------------------\n    //Three functions for tracking time\n    TimeClear() {\n        this.setState({\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n\n            set_hours: 0,\n            set_minutes: 0,\n            set_seconds: 0,\n            \n            break_hours: 0,\n            break_minutes: 0,\n            break_seconds: 0,\n\n            total_seconds: 0,\n        });\n    }\n\n    CreatePomodoro(something: boolean){\n        var temp_seconds = this.state.set_seconds;\n        var temp_minutes = this.state.set_minutes;\n        var temp_hours = this.state.set_hours;\n        if(something){\n            temp_hours = this.state.break_hours;\n            temp_minutes = this.state.break_minutes;\n            temp_seconds = this.state.break_seconds;\n        }\n        else{\n            if(temp_seconds >= 60){\n                temp_seconds -= 60;\n                temp_minutes += 1;\n            }\n            if(temp_minutes >= 60){\n                temp_minutes -= 60;\n                temp_hours += 1;\n            }\n        }\n        this.setState({\n            active: true,\n            total_seconds: temp_hours * 3600 + temp_minutes * 60 + temp_seconds,\n            hours: temp_hours,\n            minutes: temp_minutes,\n            seconds: temp_seconds,\n            is_break: something,\n        });\n\n        //@ts-ignore\n        this.interval = setInterval(this.Countdown, 1000);\n    }\n\n    Countdown() {\n        if (this.state.active) {\n            var seconds = this.state.seconds;\n            var minutes = this.state.minutes;\n            var hours = this.state.hours;\n            var total_seconds = this.state.total_seconds;\n            seconds--;\n            total_seconds--;\n            //console.log(\"here\");\n            if (seconds < 0) {\n                seconds += 60;\n                minutes -= 1;\n            }\n            if (minutes < 0) {\n                minutes += 60;\n                hours -= 1;\n            }\n            this.setState({\n                seconds: seconds,\n                hours: hours,\n                minutes: minutes,\n                total_seconds: total_seconds\n            });\n            if (total_seconds <= 0) {\n                //@ts-ignore\n                clearInterval(this.interval);\n                var time = moment().format('YYYY-MM-DDTHH:mmZ');\n                if(this.state.is_break){\n                    this.setState({\n                        end_time: time,\n                        active: false,\n                        is_break: false,\n                    })\n                }\n                else{\n                    this.setState({\n                        end_time: time,\n                        counter: this.state.counter + 1,\n                        active: false,\n                        is_break: false\n                    });\n                }\n                this.ContinueModalShow();\n            }\n        }\n    }\n\n    //Two actions that will deal with API\n    CreateSession() {\n        sessionService.addUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.start_time).then((res) => {\n            console.log(res.data);\n            this.setState({\n                active_session_id: res.data.id,\n                counter: 0\n            });\n        })\n            .catch((error) => {\n                console.log(error.message)\n                this.setState({\n                    error_message: error.message\n                })\n            })\n    }\n\n    UpdateSession() {\n        console.log(this.state.counter);\n        sessionService.updateUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.active_session_id, this.state.start_time, this.state.end_time, this.state.counter)\n            .then((res) => {\n                console.log(res.data);\n            })\n            .catch((error) => {\n                console.log(error.message)\n                this.setState({\n                    error_message: error.message\n                })\n            });\n    }\n\n    dance() {\n        if (this.curImg.current) {\n            let paths = this.curImg.current.src.split('/');\n            let image = paths[paths.length - 1];\n            if (image === imgs[0].split('/')[imgs[0].split('/').length - 1])\n                this.curImg.current.src = imgs[1]\n            if (image === imgs[1].split('/')[imgs[1].split('/').length - 1])\n                this.curImg.current.src = imgs[0]\n            if (image === imgs[2].split('/')[imgs[2].split('/').length - 1])\n                this.curImg.current.src = imgs[3]\n            if (image === imgs[3].split('/')[imgs[3].split('/').length - 1])\n                this.curImg.current.src = imgs[2]\n        }\n    }\n\n    constructor(props: Props) {\n        super(props);\n        this.CreateModal = this.CreateModal.bind(this);\n        this.CreateModalClose = this.CreateModalClose.bind(this);\n        this.CreateModalShow = this.CreateModalShow.bind(this);\n        this.ChangeSelect = this.ChangeSelect.bind(this);\n        this.CreateSubmit = this.CreateSubmit.bind(this);\n        this.CreateCancel = this.CreateCancel.bind(this);\n\n        this.ContinueModal = this.ContinueModal.bind(this);\n        this.ContinueModalShow = this.ContinueModalShow.bind(this);\n        this.ContinueModalClose = this.ContinueModalClose.bind(this);\n\n        this.Continue = this.Continue.bind(this);\n        this.ContinueOver = this.ContinueOver.bind(this);\n        this.ContinueBreak = this.ContinueBreak.bind(this);\n\n        this.StopModal = this.StopModal.bind(this);\n        this.StopModalShow = this.StopModalShow.bind(this);\n        this.StopModalClose = this.StopModalClose.bind(this);\n\n        this.StopConfirm = this.StopConfirm.bind(this);\n        this.StopCancel = this.StopCancel.bind(this);\n\n        this.UpdateSession = this.UpdateSession.bind(this);\n        this.CreateSession = this.CreateSession.bind(this);\n\n        this.TimeClear = this.TimeClear.bind(this);\n        this.CreatePomodoro = this.CreatePomodoro.bind(this);\n        this.Countdown = this.Countdown.bind(this);\n\n        this.ProjectErrorModal = this.ProjectErrorModal.bind(this);\n        this.ProjectErrorModalClose = this.ProjectErrorModalClose.bind(this);\n        this.PomodoroErrorModal = this.PomodoroErrorModal.bind(this);\n        this.PomodoroErrorModalClose = this.PomodoroErrorModalClose.bind(this);\n\n        this.dance = this.dance.bind(this)\n\n        this.state = {\n            seconds: 0,\n            minutes: 0,\n            hours: 0,\n            total_seconds: 0,\n            associated_id: -1,\n            active_session_id: -1,\n\n            set_seconds: 0,\n            set_minutes: 0,\n            set_hours: 0,\n\n            break_seconds: 0,\n            break_minutes: 0,\n            break_hours: 0,\n\n            start_time: \"\",\n            end_time: \"\",\n            total_hours: 0,\n\n            create_show: false,\n            continue_show: false,\n            stop_show: false,\n            active: false,\n            counter: 0,\n            is_break: false,\n\n            error_message: null\n        };\n        //@ts-ignore\n        this.interval;\n\n        this.curImg = React.createRef();\n\n    }\n\n    componentDidMount() {\n        this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n        setInterval(this.dance, 1000)\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Container fluid>\n                    <Row>\n                        <Col md={12}>\n                            <Card\n                                title=\"Pomodoro Timer\"\n                                icon=\"pe-7s-stopwatch\"\n                                hCenter={true}\n                                ctTableFullWidth\n                                ctTableResponsive\n                                content={\n                                    <div className=\"card-content\">\n                                        <div className=\"button-row\">\n                                            <div className=\"btn-container col-md-4\">\n                                                <Button\n                                                    id=\"create_pomodoro_button\"\n                                                    variant=\"primary\"\n                                                    onClick={this.CreateModalShow}\n                                                    disabled={this.state.active}\n                                                    className=\"col\">\n                                                    Create a New Pomodoro\n                                                </Button>\n                                            </div>\n                                            <div className=\"btn-container col-md-4\">\n                                                <Button\n                                                    id=\"stop_pomodoro_button\"\n                                                    onClick={this.StopModalShow}\n                                                    variant=\"danger\"\n                                                    disabled={!this.state.active}\n                                                    className=\"col\">\n                                                    Stop current ongoing Pomodoro\n                                                </Button>\n                                            </div>\n                                        </div>\n                                        <div className=\"img-container\">\n                                            {\n                                                !this.state.active || this.state.active && !this.state.is_break ?\n                                                <img src={imgs[0]} ref={this.curImg} />:\n                                                <img src={imgs[2]} ref={this.curImg} />\n                                            }\n                                        </div>\n                                        <div className=\"timer-container\">\n                                            <div style={{fontSize: \"64px\", textAlign: \"center\"}}>\n                                                {(\"0\" + this.state.hours.toString()).slice(-2)} : {(\"0\" + this.state.minutes.toString()).slice(-2)} : {(\"0\" + this.state.seconds.toString()).slice(-2)}\n                                                {this.state.active}\n                                            </div>\n                                        </div>\n                                    </div>\n                                }\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <this.CreateModal></this.CreateModal>\n                <this.ContinueModal></this.ContinueModal>\n                <this.StopModal></this.StopModal>\n                <this.ProjectErrorModal></this.ProjectErrorModal>\n                <this.PomodoroErrorModal></this.PomodoroErrorModal>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Pomodoro);"]},"metadata":{},"sourceType":"module"}