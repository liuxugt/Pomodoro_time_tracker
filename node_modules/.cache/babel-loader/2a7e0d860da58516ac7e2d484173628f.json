{"ast":null,"code":"import _objectSpread from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { userConstants } from '../actionTypes/user.constants';\nimport { userService } from '../../services/user.service';\nimport { projectService } from '../../services/project.service';\nexport var fetchAllUsers = function fetchAllUsers() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res, userlist, user_ids, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return userService.getUsers();\n\n              case 3:\n                res = _context2.sent;\n                userlist = res.data;\n                user_ids = userlist.map(function (user) {\n                  return user.id;\n                });\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context2.prev = 9;\n                _loop =\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _loop() {\n                  var id, p;\n                  return _regeneratorRuntime.wrap(function _loop$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          id = _step.value;\n                          _context.next = 3;\n                          return projectService.getUserAllProjects(id);\n\n                        case 3:\n                          p = _context.sent;\n                          userlist.forEach(function (user) {\n                            if (user.id == id) {\n                              user.related_projects = p.data;\n                            }\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                _iterator = user_ids[Symbol.iterator]();\n\n              case 12:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                return _context2.delegateYield(_loop(), \"t0\", 14);\n\n              case 14:\n                _iteratorNormalCompletion = true;\n                _context2.next = 12;\n                break;\n\n              case 17:\n                _context2.next = 23;\n                break;\n\n              case 19:\n                _context2.prev = 19;\n                _context2.t1 = _context2[\"catch\"](9);\n                _didIteratorError = true;\n                _iteratorError = _context2.t1;\n\n              case 23:\n                _context2.prev = 23;\n                _context2.prev = 24;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 26:\n                _context2.prev = 26;\n\n                if (!_didIteratorError) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 29:\n                return _context2.finish(26);\n\n              case 30:\n                return _context2.finish(23);\n\n              case 31:\n                return _context2.abrupt(\"return\", dispatch(addAllUsers(userlist)));\n\n              case 34:\n                _context2.prev = 34;\n                _context2.t2 = _context2[\"catch\"](0);\n                console.log(_context2.t2);\n\n              case 37:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee, null, [[0, 34], [9, 19, 23, 31], [24,, 26, 30]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addAllUsers = function addAllUsers(users) {\n  return {\n    type: userConstants.GET_ALL_USERS_SUCCESS,\n    payload: users\n  };\n};\nexport var postUser = function postUser(_ref2) {\n  var firstName = _ref2.firstName,\n      lastName = _ref2.lastName,\n      email = _ref2.email;\n  return function (dispatch) {\n    return userService.postUser(firstName, lastName, email).then(function (res) {\n      dispatch(addUser(res.data));\n    }).catch(function (error) {\n      console.log(error.message);\n      dispatch(addUserFail(error.message));\n    });\n  };\n};\nexport var addUser = function addUser(user) {\n  return {\n    type: userConstants.USER_CREATE_SUCCESS,\n    payload: _objectSpread({}, user, {\n      related_projects: 0\n    })\n  };\n};\nexport var addUserFail = function addUserFail(status) {\n  return {\n    type: userConstants.USER_CREATE_FAILED,\n    payload: status\n  };\n};\nexport var putUser = function putUser(_ref3) {\n  var firstName = _ref3.firstName,\n      lastName = _ref3.lastName,\n      id = _ref3.id,\n      email = _ref3.email;\n  return function (dispatch) {\n    return userService.putUserByUserId(firstName, lastName, id, email).then(function (res) {\n      dispatch(updateUser(res.data));\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var updateUser = function updateUser(user) {\n  return {\n    type: userConstants.USER_UPDATE_SUCCESS,\n    payload: user\n  };\n};\nexport var removeUser = function removeUser(userId) {\n  return function (dispatch) {\n    return userService.deleteUserByUserId(userId).then(function (res) {\n      dispatch(deleteUser(res.data));\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var deleteUser = function deleteUser(user) {\n  return {\n    type: userConstants.USER_DELETE_SUCCESS,\n    payload: user\n  };\n};\nexport var clearErrorMessage = function clearErrorMessage() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                return _context3.abrupt(\"return\", dispatch({\n                  type: userConstants.USER_CLEAR_ERROR_MESSAGE\n                }));\n\n              case 4:\n                _context3.prev = 4;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee2, null, [[0, 4]]);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/redux/actionCreators/user.action.ts"],"names":["userConstants","userService","projectService","fetchAllUsers","dispatch","getUsers","res","userlist","data","user_ids","map","user","id","getUserAllProjects","p","forEach","related_projects","addAllUsers","console","log","users","type","GET_ALL_USERS_SUCCESS","payload","postUser","firstName","lastName","email","then","addUser","catch","error","message","addUserFail","USER_CREATE_SUCCESS","status","USER_CREATE_FAILED","putUser","putUserByUserId","updateUser","USER_UPDATE_SUCCESS","removeUser","userId","deleteUserByUserId","deleteUser","USER_DELETE_SUCCESS","clearErrorMessage","USER_CLEAR_ERROR_MESSAGE"],"mappings":"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","sourcesContent":["import { userConstants } from '../actionTypes/user.constants';\nimport { userService } from '../../services/user.service';\nimport { projectService } from '../../services/project.service';\n\nexport const fetchAllUsers = function () {\n  return async function (dispatch) {\n    try {\n      let res: any = await userService.getUsers();\n      let userlist = res.data;\n      let user_ids = userlist.map(user => user.id);\n      for (const id of user_ids) {\n        let p = await projectService.getUserAllProjects(id);\n        userlist.forEach(function (user) {\n          if (user.id == id) {\n            user.related_projects = p.data;\n          }\n        });\n      }\n      return dispatch(addAllUsers(userlist));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const addAllUsers = (users: any) => ({\n  type: userConstants.GET_ALL_USERS_SUCCESS,\n  payload: users\n});\n\nexport const postUser = ({ firstName, lastName, email }) => dispatch => {\n  return userService\n    .postUser(firstName, lastName, email)\n    .then((res: any) => {\n      dispatch(addUser(res.data));\n    })\n    .catch(error => {\n      console.log(error.message);\n      dispatch(addUserFail(error.message));\n    });\n};\n\nexport const addUser = user => ({\n  type: userConstants.USER_CREATE_SUCCESS,\n  payload: { ...user, related_projects: 0 }\n});\n\nexport const addUserFail = status => ({\n  type: userConstants.USER_CREATE_FAILED,\n  payload: status\n});\n\nexport const putUser = ({ firstName, lastName, id, email }) => dispatch => {\n  return userService\n    .putUserByUserId(firstName, lastName, id, email)\n    .then((res: any) => {\n      dispatch(updateUser(res.data));\n    })\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const updateUser = user => ({\n  type: userConstants.USER_UPDATE_SUCCESS,\n  payload: user\n});\n\nexport const removeUser = userId => dispatch => {\n  return userService\n    .deleteUserByUserId(userId)\n    .then((res: any) => {\n      dispatch(deleteUser(res.data));\n    })\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const deleteUser = user => ({\n  type: userConstants.USER_DELETE_SUCCESS,\n  payload: user\n});\n\n\nexport const clearErrorMessage = function () {\n  return async function (dispatch) {\n    try {\n      return dispatch({\n        type: userConstants.USER_CLEAR_ERROR_MESSAGE\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}