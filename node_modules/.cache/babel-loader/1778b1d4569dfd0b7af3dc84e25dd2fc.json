{"ast":null,"code":"import _objectSpread from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { userConstants } from \"../actionTypes/user.constants\";\nimport _ from 'lodash';\nexport var users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: false,\n    errMess: null,\n    list: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case userConstants.GET_ALL_USERS_SUCCESS:\n      return _objectSpread({}, state, {\n        list: action.payload\n      });\n\n    case userConstants.USER_CREATE_SUCCESS:\n      {\n        var user = action.payload;\n        return _objectSpread({}, state, {\n          list: state.list.concat(user)\n        });\n      }\n\n    case userConstants.USER_CREATE_FAILED:\n      {\n        return _objectSpread({}, state, {\n          errMess: action.payload\n        });\n      }\n\n    case userConstants.USER_UPDATE_SUCCESS:\n      {\n        var updated_list = _.map(state.list, function (u) {\n          if (u.id == action.payload.id) {\n            u.firstName = action.payload.firstName;\n            u.lastName = action.payload.lastName;\n          }\n\n          return u;\n        });\n\n        return _objectSpread({}, state, {\n          list: updated_list\n        });\n      }\n\n    case userConstants.USER_DELETE_SUCCESS:\n      {\n        var _updated_list = _.filter(state.list, function (u) {\n          return u.id != action.payload.id;\n        });\n\n        return _objectSpread({}, state, {\n          list: _updated_list\n        });\n      }\n\n    case userConstants.USER_CLEAR_ERROR_MESSAGE:\n      {\n        return _objectSpread({}, state, {\n          errMess: null\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/redux/reducers/user.reducer.ts"],"names":["userConstants","_","users","state","isLoading","errMess","list","action","type","GET_ALL_USERS_SUCCESS","payload","USER_CREATE_SUCCESS","user","concat","USER_CREATE_FAILED","USER_UPDATE_SUCCESS","updated_list","map","u","id","firstName","lastName","USER_DELETE_SUCCESS","filter","USER_CLEAR_ERROR_MESSAGE"],"mappings":";AAAA,SAASA,aAAT,QAA8B,+BAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAIP;AAAA,MAJQC,KAIR,uEAJgB;AAC7BC,IAAAA,SAAS,EAAE,KADkB;AAE7BC,IAAAA,OAAO,EAAE,IAFoB;AAG7BC,IAAAA,IAAI,EAAE;AAHuB,GAIhB;AAAA,MAAXC,MAAW;;AACb,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,aAAa,CAACS,qBAAnB;AACC,+BAAYN,KAAZ;AAAmBG,QAAAA,IAAI,EAAEC,MAAM,CAACG;AAAhC;;AAED,SAAKV,aAAa,CAACW,mBAAnB;AAAwC;AACvC,YAAIC,IAAI,GAAGL,MAAM,CAACG,OAAlB;AACA,iCAAYP,KAAZ;AAAmBG,UAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWO,MAAX,CAAkBD,IAAlB;AAAzB;AACA;;AAED,SAAKZ,aAAa,CAACc,kBAAnB;AAAuC;AACtC,iCAAYX,KAAZ;AAAmBE,UAAAA,OAAO,EAAEE,MAAM,CAACG;AAAnC;AACA;;AAED,SAAKV,aAAa,CAACe,mBAAnB;AAAwC;AACvC,YAAIC,YAAY,GAAGf,CAAC,CAACgB,GAAF,CAAMd,KAAK,CAACG,IAAZ,EAAkB,UAACY,CAAD,EAAO;AAC3C,cAAIA,CAAC,CAACC,EAAF,IAAQZ,MAAM,CAACG,OAAP,CAAeS,EAA3B,EAA+B;AAC9BD,YAAAA,CAAC,CAACE,SAAF,GAAcb,MAAM,CAACG,OAAP,CAAeU,SAA7B;AACAF,YAAAA,CAAC,CAACG,QAAF,GAAad,MAAM,CAACG,OAAP,CAAeW,QAA5B;AACA;;AACD,iBAAOH,CAAP;AACA,SANkB,CAAnB;;AAOA,iCAAYf,KAAZ;AAAmBG,UAAAA,IAAI,EAAEU;AAAzB;AAEA;;AAED,SAAKhB,aAAa,CAACsB,mBAAnB;AAAwC;AACvC,YAAIN,aAAY,GAAGf,CAAC,CAACsB,MAAF,CAASpB,KAAK,CAACG,IAAf,EAAqB,UAAUY,CAAV,EAAa;AACpD,iBAAOA,CAAC,CAACC,EAAF,IAAQZ,MAAM,CAACG,OAAP,CAAeS,EAA9B;AACA,SAFkB,CAAnB;;AAIA,iCAAYhB,KAAZ;AAAmBG,UAAAA,IAAI,EAAEU;AAAzB;AAEA;;AAED,SAAKhB,aAAa,CAACwB,wBAAnB;AAA6C;AAC5C,iCAAYrB,KAAZ;AAAmBE,UAAAA,OAAO,EAAE;AAA5B;AACA;;AACD;AACC,aAAOF,KAAP;AAtCF;AAwCA,CA7CM","sourcesContent":["import { userConstants } from \"../actionTypes/user.constants\";\nimport _ from 'lodash'\n\n\nexport const users = (state = {\n\tisLoading: false,\n\terrMess: null,\n\tlist: []\n}, action) => {\n\tswitch (action.type) {\n\t\tcase userConstants.GET_ALL_USERS_SUCCESS:\n\t\t\treturn { ...state, list: action.payload }\n\n\t\tcase userConstants.USER_CREATE_SUCCESS: {\n\t\t\tlet user = action.payload\n\t\t\treturn { ...state, list: state.list.concat(user) }\n\t\t}\n\n\t\tcase userConstants.USER_CREATE_FAILED: {\n\t\t\treturn { ...state, errMess: action.payload }\n\t\t}\n\n\t\tcase userConstants.USER_UPDATE_SUCCESS: {\n\t\t\tlet updated_list = _.map(state.list, (u) => {\n\t\t\t\tif (u.id == action.payload.id) {\n\t\t\t\t\tu.firstName = action.payload.firstName;\n\t\t\t\t\tu.lastName = action.payload.lastName;\n\t\t\t\t}\n\t\t\t\treturn u\n\t\t\t})\n\t\t\treturn { ...state, list: updated_list }\n\n\t\t}\n\n\t\tcase userConstants.USER_DELETE_SUCCESS: {\n\t\t\tlet updated_list = _.filter(state.list, function (u) {\n\t\t\t\treturn u.id != action.payload.id\n\t\t\t});\n\n\t\t\treturn { ...state, list: updated_list }\n\n\t\t}\n\n\t\tcase userConstants.USER_CLEAR_ERROR_MESSAGE: {\n\t\t\treturn { ...state, errMess: null}\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}"]},"metadata":{},"sourceType":"module"}