{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL } from '../shared/baseUrl';\nexport var authenticationService = {\n  login: login,\n  logout: logout\n};\n\nfunction login(username, type) {\n  if (type == 'admin') {\n    var user = {\n      name: 'admin'\n    };\n    var p = new Promise(function (resolve, reject) {\n      if (username == 'admin') {\n        localStorage.setItem('user', user.name);\n        resolve(user);\n      } else {\n        var msg = \"Admin name is wrong!\";\n        resolve(msg);\n      }\n    });\n    return p;\n  } else {\n    return axios.get(BASE_URL + '/users').then(function (res) {\n      var userlist = res.data;\n      var filterUser = userlist.filter(function (u) {\n        return username == u.email;\n      });\n\n      if (filterUser.length == 0) {\n        var msg = 'User does not exist!';\n        return msg;\n      } else {\n        var _user = filterUser[0];\n        localStorage.setItem('user', _user.email);\n        localStorage.setItem('id', _user.id);\n        return _user;\n      }\n    });\n  }\n}\n\nfunction logout() {\n  if (localStorage.getItem('id')) {\n    localStorage.removeItem('id');\n  }\n\n  localStorage.removeItem('user');\n}","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/services/authentication.service.ts"],"names":["axios","BASE_URL","authenticationService","login","logout","username","type","user","name","p","Promise","resolve","reject","localStorage","setItem","msg","get","then","res","userlist","data","filterUser","filter","u","email","length","id","getItem","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,IAAMC,qBAAqB,GAAG;AAClCC,EAAAA,KAAK,EAALA,KADkC;AAElCC,EAAAA,MAAM,EAANA;AAFkC,CAA9B;;AAKP,SAASD,KAAT,CAAeE,QAAf,EAAiCC,IAAjC,EAA+C;AAC5C,MAAIA,IAAI,IAAI,OAAZ,EAAqB;AAClB,QAAIC,IAAI,GAAG;AACRC,MAAAA,IAAI,EAAE;AADE,KAAX;AAGA,QAAIC,CAAC,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,UAAIP,QAAQ,IAAI,OAAhB,EAAyB;AACtBQ,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACC,IAAlC;AACAG,QAAAA,OAAO,CAACJ,IAAD,CAAP;AACF,OAHD,MAGO;AACJ,YAAIQ,GAAG,GAAG,sBAAV;AACAJ,QAAAA,OAAO,CAACI,GAAD,CAAP;AACF;AACH,KARO,CAAR;AAUA,WAAON,CAAP;AACF,GAfD,MAeO;AACJ,WAAOT,KAAK,CAACgB,GAAN,CAAUf,QAAQ,GAAG,QAArB,EAA+BgB,IAA/B,CAAoC,UAAAC,GAAG,EAAI;AAC/C,UAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAnB;AACA,UAAIC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgB,UAAAC,CAAC,EAAI;AACnC,eAAOlB,QAAQ,IAAIkB,CAAC,CAACC,KAArB;AACF,OAFgB,CAAjB;;AAGA,UAAIH,UAAU,CAACI,MAAX,IAAqB,CAAzB,EAA4B;AACzB,YAAIV,GAAG,GAAG,sBAAV;AACA,eAAOA,GAAP;AACF,OAHD,MAGO;AACJ,YAAIR,KAAI,GAAGc,UAAU,CAAC,CAAD,CAArB;AACAR,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BP,KAAI,CAACiB,KAAlC;AACAX,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BP,KAAI,CAACmB,EAAhC;AACA,eAAOnB,KAAP;AACF;AACH,KAdM,CAAP;AAeF;AACH;;AAED,SAASH,MAAT,GAAkB;AACf,MAAIS,YAAY,CAACc,OAAb,CAAqB,IAArB,CAAJ,EAAgC;AAC7Bd,IAAAA,YAAY,CAACe,UAAb,CAAwB,IAAxB;AACF;;AACDf,EAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACF","sourcesContent":["import axios from 'axios';\nimport { BASE_URL } from '../shared/baseUrl';\n\nexport const authenticationService = {\n   login,\n   logout\n};\n\nfunction login(username: string, type: string) {\n   if (type == 'admin') {\n      let user = {\n         name: 'admin'\n      };\n      let p = new Promise(function (resolve, reject) {\n         if (username == 'admin') {\n            localStorage.setItem('user', user.name);\n            resolve(user);\n         } else {\n            let msg = \"Admin name is wrong!\";\n            resolve(msg);\n         }\n      });\n\n      return p;\n   } else {\n      return axios.get(BASE_URL + '/users').then(res => {\n         let userlist = res.data;\n         let filterUser = userlist.filter(u => {\n            return username == u.email;\n         });\n         if (filterUser.length == 0) {\n            let msg = 'User does not exist!';\n            return msg;\n         } else {\n            let user = filterUser[0];\n            localStorage.setItem('user', user.email);\n            localStorage.setItem('id', user.id);\n            return user;\n         }\n      });\n   }\n}\n\nfunction logout() {\n   if (localStorage.getItem('id')) {\n      localStorage.removeItem('id');\n   }\n   localStorage.removeItem('user');\n}\n"]},"metadata":{},"sourceType":"module"}