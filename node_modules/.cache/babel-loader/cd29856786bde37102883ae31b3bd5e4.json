{"ast":null,"code":"import _classCallCheck from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Project.tsx\";\nimport * as React from 'react';\nimport { Container, Row, Col, Button, Table, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport { connect } from 'react-redux';\nimport { fetchAllProjects as _fetchAllProjects, addProject as _addProject, putProject as _putProject, deleteProject as _deleteProject, clearErrorMessage as _clearErrorMessage } from '../redux/actionCreators/project.action';\nimport ProjectList from '../components/List/ProjectList';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectlist: state.project.list,\n    projectErrMess: state.project.errMess\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAllProjects: function fetchAllProjects(userId) {\n      dispatch(_fetchAllProjects(userId));\n    },\n    addProject: function addProject(userId, projectname) {\n      dispatch(_addProject(userId, projectname));\n    },\n    putProject: function putProject(_ref) {\n      var projectname = _ref.projectname,\n          userId = _ref.userId,\n          projectId = _ref.projectId;\n      dispatch(_putProject({\n        projectname: projectname,\n        userId: userId,\n        projectId: projectId\n      }));\n    },\n    deleteProject: function deleteProject(userId, projectId) {\n      dispatch(_deleteProject(userId, projectId));\n    },\n    clearErrorMessage: function clearErrorMessage() {\n      dispatch(_clearErrorMessage());\n    }\n  };\n};\n\nvar Project =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Project, _React$Component);\n\n  function Project(props) {\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, props));\n    _this.ErrModalClose = _this.ErrModalClose.bind(_assertThisInitialized(_this));\n    _this.ErrModal = _this.ErrModal.bind(_assertThisInitialized(_this));\n    _this.DelModalShow = _this.DelModalShow.bind(_assertThisInitialized(_this));\n    _this.DelModalClose = _this.DelModalClose.bind(_assertThisInitialized(_this));\n    _this.DelModal = _this.DelModal.bind(_assertThisInitialized(_this));\n    _this.CreateModalShow = _this.CreateModalShow.bind(_assertThisInitialized(_this));\n    _this.CreateModalClose = _this.CreateModalClose.bind(_assertThisInitialized(_this));\n    _this.CreateModal = _this.CreateModal.bind(_assertThisInitialized(_this));\n    _this.EditModalShow = _this.EditModalShow.bind(_assertThisInitialized(_this));\n    _this.EditModalClose = _this.EditModalClose.bind(_assertThisInitialized(_this));\n    _this.EditModal = _this.EditModal.bind(_assertThisInitialized(_this));\n    _this.state = {\n      delete_show: false,\n      delete_index: 0,\n      create_show: false,\n      new_project_name: '',\n      edit_show: false,\n      edit_index: 0,\n      edit_user_id: 0,\n      edit_project_id: 0,\n      edit_project_name: ''\n    };\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n    } // Error modal\n\n  }, {\n    key: \"ErrModalClose\",\n    value: function ErrModalClose() {\n      this.props.clearErrorMessage();\n    }\n  }, {\n    key: \"ErrModal\",\n    value: function ErrModal() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        id: \"error_modal\",\n        show: this.props.projectErrMess != null,\n        onHide: this.ErrModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Error Code\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.props.projectErrMess), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: function onClick() {\n          return _this2.ErrModalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"OK\")));\n    } // Delete modal\n\n  }, {\n    key: \"DelModalClose\",\n    value: function DelModalClose() {\n      this.setState({\n        delete_show: false\n      });\n    }\n  }, {\n    key: \"DelModalShow\",\n    value: function DelModalShow() {\n      this.setState({\n        delete_show: true\n      });\n    }\n  }, {\n    key: \"DelButton\",\n    value: function DelButton(project, key) {\n      if (project.report.sessions && project.report.sessions.length != 0) {\n        //if there is pomodoro, popup the confirmation for user\n        this.setState({\n          delete_index: key\n        });\n        this.DelModalShow();\n      } else {\n        this.props.deleteProject(project.userId, project.id);\n      }\n    }\n  }, {\n    key: \"DelProject\",\n    value: function DelProject(project) {\n      //Delete the projects\n      if (this.state.delete_show) {\n        this.DelModalClose();\n      }\n\n      this.props.deleteProject(project.userId, project.id);\n    }\n  }, {\n    key: \"DelModal\",\n    value: function DelModal() {\n      var _this3 = this;\n\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n        return React.createElement(Modal, {\n          show: this.state.delete_show,\n          onHide: this.DelModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Confirmation\")), React.createElement(Modal.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \"This project \", this.props.projectlist[this.state.delete_index].projectname, \" has sessions associate with it. Are you sure to delete the project?\"), React.createElement(Modal.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"secondary\",\n          onClick: this.DelModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"No\"), React.createElement(Button, {\n          variant: \"primary\",\n          onClick: function onClick() {\n            return _this3.DelProject(_this3.props.projectlist[_this3.state.delete_index]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"Yes\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"CreateModalClose\",\n    value: function CreateModalClose() {\n      this.setState({\n        create_show: false\n      });\n    }\n  }, {\n    key: \"CreateModalShow\",\n    value: function CreateModalShow() {\n      this.setState({\n        create_show: true\n      });\n    }\n  }, {\n    key: \"CreateModal\",\n    value: function CreateModal() {\n      var _this4 = this;\n\n      return React.createElement(Modal, {\n        id: \"create_project_modal\",\n        show: this.state.create_show,\n        onHide: this.CreateModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Create a new project\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \" Projoect Name\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_project_name\",\n        value: this.state.new_project_name,\n        onChange: function onChange(e) {\n          _this4.setState({\n            new_project_name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.CreateModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        id: \"confirm_create_project_button\",\n        variant: \"primary\",\n        onClick: function onClick() {\n          _this4.props.addProject(Number(localStorage.getItem('id')), _this4.state.new_project_name);\n\n          _this4.CreateModalClose();\n\n          _this4.setState({\n            new_project_name: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Create\")));\n    }\n  }, {\n    key: \"EditModalClose\",\n    value: function EditModalClose() {\n      this.setState({\n        edit_show: false\n      });\n    }\n  }, {\n    key: \"EditModalShow\",\n    value: function EditModalShow() {\n      this.setState({\n        edit_show: true\n      });\n    }\n  }, {\n    key: \"EditButton\",\n    value: function EditButton(project, key) {\n      this.setState({\n        edit_index: key,\n        edit_user_id: project.userId,\n        edit_project_id: project.id,\n        edit_project_name: project.projectname\n      });\n      this.EditModalShow();\n    }\n  }, {\n    key: \"EditModal\",\n    value: function EditModal() {\n      var _this5 = this;\n\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n        return React.createElement(Modal, {\n          id: \"edit_modal\",\n          show: this.state.edit_show,\n          onHide: this.EditModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, \"Edit this project\")), React.createElement(Modal.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, \"Project Name\"), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"edit_project_name\",\n          value: this.state.edit_project_name,\n          onChange: function onChange(e) {\n            _this5.setState({\n              edit_project_name: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        })))), React.createElement(Modal.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"secondary\",\n          onClick: this.EditModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Cancel\"), React.createElement(Button, {\n          id: \"confirm_edit\",\n          variant: \"primary\",\n          onClick: function onClick() {\n            _this5.props.putProject({\n              projectname: _this5.state.edit_project_name,\n              userId: _this5.state.edit_user_id,\n              projectId: _this5.state.edit_project_id\n            });\n\n            _this5.EditModalClose();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, \"Edit\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Projects\",\n        category: \"Here are all your projects\",\n        ctTableFullWidth: true,\n        ctTableResponsive: true,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"create_project_button\",\n          className: \"col\",\n          variant: \"primary\",\n          onClick: function onClick() {\n            return _this6.CreateModalShow();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \"Create New Project\"), React.createElement(Table, {\n          striped: true,\n          hover: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, \"Id\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, \"Project Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, \"Sessions\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, \"Total Pomodoros\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, \"Operations\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, this.props.projectlist.map(function (project, index) {\n          return React.createElement(ProjectList, {\n            project: project,\n            key: index,\n            index: index,\n            delete_button: function delete_button() {\n              return _this6.DelButton(project, index);\n            },\n            edit_button: function edit_button() {\n              return _this6.EditButton(project, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327\n            },\n            __self: this\n          });\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      })))), React.createElement(this.DelModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }), React.createElement(this.CreateModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(this.ErrModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }), React.createElement(this.EditModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Project;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Project.tsx"],"names":["React","Container","Row","Col","Button","Table","Modal","Card","connect","fetchAllProjects","addProject","putProject","deleteProject","clearErrorMessage","ProjectList","mapStateToProps","state","projectlist","project","list","projectErrMess","errMess","mapDispatchToProps","dispatch","userId","projectname","projectId","Project","props","ErrModalClose","bind","ErrModal","DelModalShow","DelModalClose","DelModal","CreateModalShow","CreateModalClose","CreateModal","EditModalShow","EditModalClose","EditModal","delete_show","delete_index","create_show","new_project_name","edit_show","edit_index","edit_user_id","edit_project_id","edit_project_name","Number","localStorage","getItem","setState","key","report","sessions","length","id","DelProject","e","target","value","map","index","DelButton","EditButton","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Container, Row, Col, Button, Table, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport { connect } from 'react-redux';\nimport { fetchAllProjects, addProject, putProject, deleteProject, clearErrorMessage} from '../redux/actionCreators/project.action';\n\nimport ProjectList from '../components/List/ProjectList';\n\nconst mapStateToProps = (state: any) => {\n   return {\n      projectlist: state.project.list,\n      projectErrMess: state.project.errMess\n   };\n};\n\nconst mapDispatchToProps = dispatch => ({\n   fetchAllProjects: userId => {\n      dispatch(fetchAllProjects(userId));\n   },\n   addProject: (userId, projectname) => {\n      dispatch(addProject(userId, projectname));\n   },\n   putProject: ({projectname, userId, projectId}) => {\n      dispatch(putProject({projectname, userId, projectId}));\n   },\n   deleteProject: (userId, projectId) => {\n      dispatch(deleteProject(userId, projectId));\n   },\n   clearErrorMessage: () => {\n      dispatch(clearErrorMessage())\n   }\n});\n\ninterface Props {\n   projectlist: any;\n   fetchAllProjects: any;\n   addProject: any;\n   putProject: any;\n   deleteProject: any;\n   clearErrorMessage: any;\n   projectErrMess: any;\n}\n\n// In page states only, like managing showing a modal and its content. Has nothing to do with redux's state\ninterface State {\n   delete_show: boolean;\n   delete_index: number;\n   create_show: boolean;\n   new_project_name: string;\n\n   edit_show: boolean;\n   edit_index: number;\n   edit_user_id: number,\n   edit_project_id: number,\n   edit_project_name: string;\n}\n\nclass Project extends React.Component<Props, State> {\n   constructor(props: Props) {\n      super(props);\n\n      this.ErrModalClose = this.ErrModalClose.bind(this);\n      this.ErrModal = this.ErrModal.bind(this);\n\n      this.DelModalShow = this.DelModalShow.bind(this);\n      this.DelModalClose = this.DelModalClose.bind(this);\n      this.DelModal = this.DelModal.bind(this);\n\n      this.CreateModalShow = this.CreateModalShow.bind(this);\n      this.CreateModalClose = this.CreateModalClose.bind(this);\n      this.CreateModal = this.CreateModal.bind(this);\n\n      this.EditModalShow = this.EditModalShow.bind(this);\n      this.EditModalClose = this.EditModalClose.bind(this);\n      this.EditModal = this.EditModal.bind(this);\n\n\n      this.state = {\n         delete_show: false,\n         delete_index: 0,\n\n         create_show: false,\n         new_project_name: '',\n\n         edit_show: false,\n         edit_index: 0,\n         edit_user_id: 0,\n         edit_project_id: 0,\n         edit_project_name: ''\n      };\n   }\n   componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n   }\n\n   // Error modal\n   ErrModalClose() {\n      this.props.clearErrorMessage();\n   }\n\n   ErrModal() {\n      return (\n         <Modal id=\"error_modal\" show={this.props.projectErrMess != null} onHide={this.ErrModalClose}>\n            <Modal.Header closeButton>\n               <Modal.Title>Error Code</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n               {this.props.projectErrMess}\n            </Modal.Body>\n            <Modal.Footer>\n               <Button\n                  variant=\"primary\"\n                  onClick={() => this.ErrModalClose()}\n               >\n                  OK\n               </Button>\n            </Modal.Footer>\n         </Modal>\n      );\n   }\n\n   // Delete modal\n   DelModalClose() {\n      this.setState({ delete_show: false });\n   }\n\n   DelModalShow() {\n      this.setState({ delete_show: true });\n   }\n\n   DelButton(project: any, key: number) {\n      \n      if (project.report.sessions && project.report.sessions.length != 0) {\n         //if there is pomodoro, popup the confirmation for user\n         this.setState({ delete_index: key });\n         this.DelModalShow();\n      } else {\n      this.props.deleteProject(project.userId, project.id);\n      }\n   }\n\n   DelProject(project: any) {\n      //Delete the projects\n      if (this.state.delete_show) {\n         this.DelModalClose();\n      }\n      this.props.deleteProject(project.userId, project.id);\n   }\n\n   DelModal() {\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n         return (\n            <Modal show={this.state.delete_show} onHide={this.DelModalClose}>\n               <Modal.Header closeButton>\n                  <Modal.Title>Confirmation</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  This project {this.props.projectlist[this.state.delete_index].projectname} has sessions\n                  associate with it. Are you sure to delete the project?\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={this.DelModalClose}>\n                     No\n                  </Button>\n                  <Button\n                     variant=\"primary\"\n                     onClick={() => this.DelProject(this.props.projectlist[this.state.delete_index])}\n                  >\n                     Yes\n                  </Button>\n               </Modal.Footer>\n            </Modal>\n         );\n      } else {\n         return <div />;\n      }\n   }\n\n   CreateModalClose() {\n      this.setState({ create_show: false });\n   }\n\n   CreateModalShow() {\n      this.setState({ create_show: true });\n   }\n\n   CreateModal() {\n      return (\n         <Modal id=\"create_project_modal\" show={this.state.create_show} onHide={this.CreateModalClose}>\n            <Modal.Header closeButton>\n               <Modal.Title>Create a new project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n               <Row>\n                  <Col> Projoect Name</Col>\n                  <Col>\n                     <input\n                        id=\"create_project_name\"\n                        value={this.state.new_project_name}\n                        onChange={(e: any) => {\n                           this.setState({ new_project_name: e.target.value });\n                        }}\n                     />\n                  </Col>\n               </Row>\n            </Modal.Body>\n            <Modal.Footer>\n               <Button variant=\"secondary\" onClick={this.CreateModalClose}>\n                  Cancel\n               </Button>\n               <Button\n                  id=\"confirm_create_project_button\"\n                  variant=\"primary\"\n                  onClick={() => {\n                     this.props.addProject(Number(localStorage.getItem('id')), this.state.new_project_name);\n                     this.CreateModalClose();\n                     this.setState({ new_project_name: '' });\n                  }}\n               >\n                  Create\n               </Button>\n            </Modal.Footer>\n         </Modal>\n      );\n   }\n\n   EditModalClose() {\n      this.setState({ edit_show: false });\n   }\n\n   EditModalShow() {\n      this.setState({ edit_show: true });\n   }\n\n   EditButton(project: any, key: number) {\n      this.setState({\n         edit_index: key,\n         edit_user_id: project.userId,\n         edit_project_id: project.id,\n         edit_project_name: project.projectname\n      });\n      this.EditModalShow();\n   }\n\n   EditModal() {\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n         return (\n            <Modal id=\"edit_modal\" show={this.state.edit_show} onHide={this.EditModalClose}>\n               <Modal.Header closeButton>\n                  <Modal.Title>Edit this project</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <Row>\n                     <Col>Project Name</Col>\n                     <Col>\n                        <input\n                           id=\"edit_project_name\"\n                           value={this.state.edit_project_name}\n                           onChange={(e: any) => {\n                              this.setState({ edit_project_name: e.target.value });\n                           }}\n                        />\n                     </Col>\n                  </Row>\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={this.EditModalClose}>\n                     Cancel\n                  </Button>\n                  <Button\n                     id=\"confirm_edit\"\n                     variant=\"primary\"\n                     onClick={() => {\n                        this.props.putProject({\n                           projectname: this.state.edit_project_name,\n                           userId: this.state.edit_user_id,\n                           projectId: this.state.edit_project_id\n                        });\n                        this.EditModalClose();\n                     }}\n                  >\n                     Edit\n                  </Button>\n               </Modal.Footer>\n            </Modal>\n         );\n      } else {\n         return <div />;\n      }\n   }\n\n\n   render() {\n      return (\n         <div>\n            <Container fluid>\n               <Row>\n                  <Col md={12}>\n                     <Card\n                        title=\"Projects\"\n                        category=\"Here are all your projects\"\n                        ctTableFullWidth\n                        ctTableResponsive\n                        content={\n                           <div>\n                              <Button\n                                 id=\"create_project_button\"\n                                 className=\"col\"\n                                 variant=\"primary\"\n                                 onClick={() => this.CreateModalShow()}\n                              >\n                                 Create New Project\n                              </Button>\n                              <Table striped hover>\n                                 <thead>\n                                    <tr>\n                                       <th>Id</th>\n                                       <th>Project Name</th>\n                                       <th>Sessions</th>\n                                       <th>Total Pomodoros</th>\n                                       <th>Operations</th>\n                                    </tr>\n                                 </thead>\n                                 <tbody>\n                                    {this.props.projectlist.map((project: any, index: number) => {\n                                       return (\n                                          <ProjectList\n                                             project={project}\n                                             key={index}\n                                             index={index}\n                                             delete_button={() => this.DelButton(project, index)}\n                                             edit_button={() => this.EditButton(project, index)}\n                                          />\n                                       );\n                                    })}\n                                 </tbody>\n                              </Table>\n                           </div>\n                        }\n                     />\n                  </Col>\n               </Row>\n            </Container>\n            <this.DelModal />\n            <this.CreateModal />\n            <this.ErrModal />\n            <this.EditModal />\n         </div>\n      );\n   }\n}\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Project);\n"]},"metadata":{},"sourceType":"module"}