{"ast":null,"code":"import _classCallCheck from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/components/Sidebar/Sidebar.tsx\";\nimport * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"./../../assets/img/logo.png\";\nimport adminRoutes from \"../../routes/adminRoutes\";\nimport userRoutes from \"../../routes/userRoutes\";\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"activeRoute\",\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"sidebar\",\n        className: \"sidebar\",\n        \"data-color\": \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        className: \"simple-text logo-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo_image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }))), React.createElement(\"a\", {\n        href: \"/\",\n        className: \"simple-text logo-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Pomodoro\")), React.createElement(\"div\", {\n        className: \"sidebar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, localStorage.getItem(\"user\") == \"admin\" ? adminRoutes.map(function (prop, key) {\n        if (!prop.redirect) return React.createElement(\"li\", {\n          className: _this2.activeRoute(prop.path),\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          id: \"sidebar_admin_\" + prop.name,\n          to: prop.path,\n          className: \"nav-link\",\n          activeClassName: \"active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: prop.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, prop.name)));\n        return null;\n      }) : userRoutes.map(function (prop, key) {\n        if (!prop.redirect) return React.createElement(\"li\", {\n          className: _this2.activeRoute(prop.path),\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          id: \"sidebar_user_\" + prop.name,\n          to: prop.path,\n          className: \"nav-link\",\n          activeClassName: \"active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: prop.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, prop.name)));\n        return null;\n      }))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/components/Sidebar/Sidebar.tsx"],"names":["React","NavLink","logo","adminRoutes","userRoutes","Sidebar","props","state","routeName","location","pathname","indexOf","localStorage","getItem","map","prop","key","redirect","activeRoute","path","name","icon","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;IAQMC,O;;;;;AACF,mBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFsB;AAIzB;;;;gCAEWC,S,EAAmB;AAC3B,aAAO,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,QAApB,CAA6BC,OAA7B,CAAqCH,SAArC,IAAkD,CAAC,CAAnD,GAAuD,QAAvD,GAAkE,EAAzE;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,EAAE,EAAC,SAAR;AAAkB,QAAA,SAAS,EAAC,SAA5B;AAAsC,sBAAW,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEN,IAAV;AAAgB,QAAA,GAAG,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EAMI;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQU,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,OAAhC,GACAV,WAAW,CAACW,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC3B,YAAI,CAACD,IAAI,CAACE,QAAV,EACI,OACI;AAAI,UAAA,SAAS,EAAE,MAAI,CAACC,WAAL,CAAiBH,IAAI,CAACI,IAAtB,CAAf;AAA4C,UAAA,GAAG,EAAEH,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAS,UAAA,EAAE,EAAE,mBAAiBD,IAAI,CAACK,IAAnC;AAAyC,UAAA,EAAE,EAAEL,IAAI,CAACI,IAAlD;AAAwD,UAAA,SAAS,EAAC,UAAlE;AAA6E,UAAA,eAAe,EAAC,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAEJ,IAAI,CAACM,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIN,IAAI,CAACK,IAAT,CAFJ,CADJ,CADJ;AAQJ,eAAO,IAAP;AACH,OAXD,CADA,GAaAhB,UAAU,CAACU,GAAX,CAAe,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC1B,YAAI,CAACD,IAAI,CAACE,QAAV,EACI,OACI;AAAI,UAAA,SAAS,EAAE,MAAI,CAACC,WAAL,CAAiBH,IAAI,CAACI,IAAtB,CAAf;AAA4C,UAAA,GAAG,EAAEH,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAS,UAAA,EAAE,EAAE,kBAAgBD,IAAI,CAACK,IAAlC;AAAwC,UAAA,EAAE,EAAEL,IAAI,CAACI,IAAjD;AAAuD,UAAA,SAAS,EAAC,UAAjE;AAA4E,UAAA,eAAe,EAAC,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAEJ,IAAI,CAACM,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIN,IAAI,CAACK,IAAT,CAFJ,CADJ,CADJ;AAQJ,eAAO,IAAP;AACH,OAXD,CAfR,CADJ,CAXJ,CADJ;AA6CH;;;;EAzDiBpB,KAAK,CAACsB,S;;AA4D5B,eAAejB,OAAf","sourcesContent":["import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport logo from \"./../../assets/img/logo.png\";\nimport adminRoutes from \"../../routes/adminRoutes\";\nimport userRoutes from \"../../routes/userRoutes\";\n\ninterface Props {\n    location: any\n}\ninterface State {\n}\n\nclass Sidebar extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    activeRoute(routeName: string) {\n        return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    }\n\n    render() {\n        return (\n            <div id=\"sidebar\" className=\"sidebar\" data-color=\"black\">\n                <div className=\"logo\">\n                    <a href=\"/\" className=\"simple-text logo-mini\">\n                        <div className=\"logo-img\">\n                            <img src={logo} alt=\"logo_image\" />\n                        </div>\n                    </a>\n                    <a href=\"/\" className=\"simple-text logo-normal\">\n                        Pomodoro\n                    </a> \n                </div>\n                <div className=\"sidebar-wrapper\">\n                    <ul className=\"nav\">\n                        {\n                            localStorage.getItem(\"user\") == \"admin\" ?\n                            adminRoutes.map((prop, key) => {\n                                if (!prop.redirect)\n                                    return (\n                                        <li className={this.activeRoute(prop.path)} key={key}>\n                                            <NavLink id={\"sidebar_admin_\"+prop.name} to={prop.path} className=\"nav-link\" activeClassName=\"active\">\n                                                <i className={prop.icon} />\n                                                <p>{prop.name}</p>\n                                            </NavLink>\n                                        </li>\n                                    )\n                                return null;\n                            }) :\n                            userRoutes.map((prop, key) => {\n                                if (!prop.redirect)\n                                    return (\n                                        <li className={this.activeRoute(prop.path)} key={key}>\n                                            <NavLink id={\"sidebar_user_\"+prop.name} to={prop.path} className=\"nav-link\" activeClassName=\"active\">\n                                                <i className={prop.icon} />\n                                                <p>{prop.name}</p>\n                                            </NavLink>\n                                        </li>\n                                    )\n                                return null;\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}