{"ast":null,"code":"import _classCallCheck from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Report.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Col, Form, Button, Table, Modal, Alert } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport { fetchAllProjects as _fetchAllProjects, fetchProjectReport as _fetchProjectReport } from '../redux/actionCreators/project.action';\nimport OptionList from '../components/List/OptionList';\nimport moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport \"react-widgets/dist/css/react-widgets.css\";\nmoment.locale('en');\nmomentLocalizer();\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectlist: state.project.list,\n    report: state.project.report\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAllProjects: function fetchAllProjects(userId) {\n      dispatch(_fetchAllProjects(userId));\n    },\n    fetchProjectReport: function fetchProjectReport(userId, projectId, body) {\n      dispatch(_fetchProjectReport(userId, projectId, body));\n    }\n  };\n};\n\n;\n;\n\nvar Report =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Report, _React$Component);\n\n  function Report(props) {\n    var _this;\n\n    _classCallCheck(this, Report);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Report).call(this, props));\n    _this.ChangeSelect = _this.ChangeSelect.bind(_assertThisInitialized(_this));\n    _this.ReportModal = _this.ReportModal.bind(_assertThisInitialized(_this));\n    _this.state = {\n      from: new Date(),\n      to: new Date(),\n      selected_projectId: -1,\n      userId: Number(localStorage.getItem('id')),\n      includeCP: true,\n      includeHW: true,\n      showModal: false,\n      showWarning: false\n    };\n    return _this;\n  }\n\n  _createClass(Report, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n    }\n  }, {\n    key: \"ChangeSelect\",\n    value: function ChangeSelect(e) {\n      this.setState({\n        selected_projectId: e.target.value\n      });\n    }\n  }, {\n    key: \"ReportModal\",\n    value: function ReportModal() {\n      var _this2 = this;\n\n      if (Object.keys(this.props.report).length > 0) {\n        return React.createElement(Modal, {\n          id: \"report_modal\",\n          show: this.state.showModal,\n          onHide: function onHide() {\n            return _this2.setState({\n              showModal: !_this2.state.showModal\n            });\n          },\n          size: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Report\")), React.createElement(Modal.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, this.state.includeCP && this.props.report.sessions.length > 0 ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Total Pomodoros Completed\"), \": \", this.props.report.completedPomodoros) : null, this.state.includeHW && this.props.report.sessions.length > 0 ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Total Hours Worked\"), \": \", this.props.report.totalHoursWorkedOnProject) : null, this.props.report.sessions.length > 0 ? React.createElement(Table, {\n          striped: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"No.\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Start Time\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"End Time\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Count\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.props.report.sessions.map(function (r, index) {\n          console.log(r.startingTime);\n          return React.createElement(\"tr\", {\n            key: index + 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, index + 1), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, moment(r.startingTime).format('YYYY-MM-DD HH:mm:ss')), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, moment(r.endingTime).format('YYYY-MM-DD HH:mm:ss')), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, r.hoursWorked));\n        }))) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"No sessions found for the project in the provided timeframe. Please try a different time range.\"))), React.createElement(Modal.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"primary\",\n          onClick: function onClick() {\n            return _this2.setState({\n              showModal: !_this2.state.showModal\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Ok\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"getReport\",\n    value: function getReport() {\n      console.log(this.state.from + \" \" + this.state.to);\n      var body = {\n        from: this.state.from.toString(),\n        to: this.state.to.toString(),\n        completedPomo: this.state.includeCP,\n        hoursWorked: this.state.includeHW\n      };\n\n      if (this.state.selected_projectId != -1) {\n        this.props.fetchProjectReport(this.state.userId, this.state.selected_projectId, body);\n        this.setState({\n          showModal: true\n        });\n        this.setState({\n          showWarning: false\n        });\n      } else {\n        this.setState({\n          showWarning: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Get Report\",\n        icon: \"pe-7s-display1\",\n        hCenter: true,\n        ctTableFullWidth: true,\n        ctTableResponsive: true,\n        content: React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"report-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"Please fill out the report details below.\")), React.createElement(\"div\", {\n          className: \"form-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(Form.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"from_date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"From\"), React.createElement(DateTimePicker, {\n          value: this.state.from,\n          max: new Date(),\n          onChange: function onChange(value) {\n            _this3.setState({\n              from: value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        })), React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"to_date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"To\"), React.createElement(DateTimePicker, {\n          value: this.state.to,\n          max: new Date(),\n          min: this.state.from,\n          onChange: function onChange(value) {\n            return _this3.setState({\n              to: value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }))), React.createElement(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"Select Project\"), React.createElement(Form.Control, {\n          id: \"select_project\",\n          as: \"select\",\n          onChange: this.ChangeSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: -1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"Select Project\"), this.props.projectlist.map(function (project, index) {\n          return React.createElement(OptionList, {\n            key: index,\n            project: project,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          });\n        }))), React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"hourswoked\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(Form.Check, {\n          type: \"checkbox\",\n          label: \"Included total hours worked\",\n          checked: this.state.includeHW,\n          onChange: function onChange() {\n            return _this3.setState({\n              includeHW: !_this3.state.includeHW\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        })), React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"completedpomo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(Form.Check, {\n          type: \"checkbox\",\n          label: \"Included completed pomodoros\",\n          checked: this.state.includeCP,\n          onChange: function onChange() {\n            _this3.setState({\n              includeCP: !_this3.state.includeCP\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        })), React.createElement(Form.Row, {\n          className: \"btn-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"get_report\",\n          variant: \"primary\",\n          onClick: function onClick() {\n            return _this3.getReport();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Get Report\"))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }), React.createElement(Alert, {\n          variant: \"warning\",\n          show: this.state.showWarning,\n          onClose: function onClose() {\n            return _this3.setState({\n              showWarning: !_this3.state.showWarning\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, \"You need to select a project to view report!\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(this.ReportModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Report;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Report.tsx"],"names":["React","connect","Container","Col","Form","Button","Table","Modal","Alert","Card","fetchAllProjects","fetchProjectReport","OptionList","moment","momentLocalizer","DateTimePicker","locale","mapStateToProps","state","projectlist","project","list","report","mapDispatchToProps","dispatch","userId","projectId","body","Report","props","ChangeSelect","bind","ReportModal","from","Date","to","selected_projectId","Number","localStorage","getItem","includeCP","includeHW","showModal","showWarning","e","setState","target","value","Object","keys","length","sessions","completedPomodoros","totalHoursWorkedOnProject","map","r","index","console","log","startingTime","format","endingTime","hoursWorked","toString","completedPomo","getReport","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Form, Button, Table, Modal, Alert } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport { fetchAllProjects, fetchProjectReport } from '../redux/actionCreators/project.action';\nimport OptionList from '../components/List/OptionList';\nimport moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport \"react-widgets/dist/css/react-widgets.css\"\nimport { start } from 'repl';\nmoment.locale('en')\nmomentLocalizer()\n\nconst mapStateToProps = (state: any) => {\n   return {\n      projectlist: state.project.list,\n      report: state.project.report\n   };\n};\n\nconst mapDispatchToProps = dispatch => ({\n   fetchAllProjects: userId => {\n      dispatch(fetchAllProjects(userId));\n   },\n\n   fetchProjectReport: (userId: number, projectId: number, body: any) => {\n      dispatch(fetchProjectReport(userId, projectId, body))\n   }\n});\n\ninterface Props {\n   projectlist: any\n   fetchAllProjects: any;\n   fetchProjectReport: any;\n   report: any;\n};\n\ninterface State {\n   from: any,\n   to: any,\n   selected_projectId: number,\n   userId: number\n   includeCP: boolean,\n   includeHW: boolean,\n   showModal: boolean,\n   showWarning: boolean\n};\n\nclass Report extends React.Component<Props, State>{\n   constructor(props: any) {\n      super(props);\n      this.ChangeSelect = this.ChangeSelect.bind(this);\n      this.ReportModal = this.ReportModal.bind(this);\n      this.state = {\n         from: new Date(),\n         to: new Date(),\n         selected_projectId: -1,\n         userId: Number(localStorage.getItem('id')),\n         includeCP: true,\n         includeHW: true,\n         showModal: false,\n         showWarning: false\n      };\n\n   }\n   componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n   }\n   ChangeSelect(e: any) {\n      this.setState({\n         selected_projectId: e.target.value\n      })\n   }\n\n   ReportModal() {\n      if (Object.keys(this.props.report).length > 0) {\n         return (\n            <Modal id=\"report_modal\" show={this.state.showModal}\n               onHide={() => this.setState({ showModal: !this.state.showModal })}\n               size=\"lg\">\n               <Modal.Header closeButton>\n                  <Modal.Title>Report</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  {this.state.includeCP && this.props.report.sessions.length > 0\n                     ? <p><strong>Total Pomodoros Completed</strong>: {this.props.report.completedPomodoros}</p>\n                     : null\n                  }\n\n                  {this.state.includeHW && this.props.report.sessions.length > 0\n                     ? <p><strong>Total Hours Worked</strong>: {this.props.report.totalHoursWorkedOnProject}</p>\n                     : null\n                  }\n                  {this.props.report.sessions.length > 0\n                     ?\n                     <Table striped>\n                        <thead>\n                           <tr>\n                              <th>No.</th>\n                              <th>Start Time</th>\n                              <th>End Time</th>\n                              <th>Count</th>\n                           </tr>\n                        </thead>\n                        <tbody>\n\n                           {this.props.report.sessions.map((r: any, index: number) => {\n                              console.log(r.startingTime);\n                              return (\n                                 <tr key={index + 1}>\n                                    <td>{index + 1}</td>\n                                    <td>{moment(r.startingTime).format('YYYY-MM-DD HH:mm:ss')}</td>\n                                    <td>{moment(r.endingTime).format('YYYY-MM-DD HH:mm:ss')}</td>\n                                    <td>{r.hoursWorked}</td>\n                                 </tr>\n                              );\n                           })}\n                        </tbody>\n                     </Table>\n                     : <p><strong>No sessions found for the project in the provided timeframe. Please try a different time range.</strong></p>}\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"primary\" onClick={() => this.setState({ showModal: !this.state.showModal })}>\n                     Ok\n                  </Button>\n               </Modal.Footer>\n            </Modal>\n\n         );\n      } else {\n         return <div />;\n      }\n\n   }\n\n   getReport() {\n      console.log(this.state.from + \" \" + this.state.to)\n      let body = {\n         from: this.state.from.toString(),\n         to: this.state.to.toString(),\n         completedPomo: this.state.includeCP,\n         hoursWorked: this.state.includeHW\n      }\n      if (this.state.selected_projectId != -1) {\n         this.props.fetchProjectReport(this.state.userId, this.state.selected_projectId, body);\n         this.setState({ showModal: true })\n         this.setState({ showWarning: false })\n      } else {\n         this.setState({ showWarning: true })\n      }\n\n   }\n\n   render() {\n      return (\n         <div className=\"content\">\n            <Container fluid>\n               <Card\n                  title=\"Get Report\"\n                  icon=\"pe-7s-display1\"\n                  hCenter={true}\n                  ctTableFullWidth\n                  ctTableResponsive\n                  content={\n                     <div className=\"card-content\">\n                        <div className=\"report-title\">\n                           <h4>Please fill out the report details below.</h4>\n                        </div>\n                        <div className=\"form-container\">\n                           <Form>\n                              <Form.Row>\n                                 <Form.Group as={Col} controlId=\"from_date\">\n                                    <Form.Label>From</Form.Label>\n                                    <DateTimePicker\n                                       value={this.state.from}\n                                       max={new Date()}\n                                       onChange={value => {\n                                          this.setState({ from: value })\n                                       }}\n                                    />\n                                 </Form.Group>\n                                 <Form.Group as={Col} controlId=\"to_date\">\n                                    <Form.Label>To</Form.Label>\n                                    <DateTimePicker\n                                       value={this.state.to}\n                                       max={new Date()}\n                                       min={this.state.from}\n                                       onChange={value => this.setState({ to: value })}\n                                    />\n                                 </Form.Group>\n                              </Form.Row>\n                              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                 <Form.Label>Select Project</Form.Label>\n                                 <Form.Control id=\"select_project\" as=\"select\" onChange={this.ChangeSelect}>\n                                    <option value={-1}>Select Project</option>\n                                    {this.props.projectlist.map((project: any, index: number) => {\n                                       return (\n                                          <OptionList key={index} project={project} />\n                                       );\n                                    })}\n                                 </Form.Control>\n                              </Form.Group>\n                              <Form.Group as={Col} controlId=\"hourswoked\">\n                                 <Form.Check type=\"checkbox\" label=\"Included total hours worked\" checked={this.state.includeHW}\n                                    onChange={() => this.setState({ includeHW: !this.state.includeHW })} />\n                              </Form.Group>\n                              <Form.Group as={Col} controlId=\"completedpomo\">\n                                 <Form.Check type=\"checkbox\" label=\"Included completed pomodoros\" checked={this.state.includeCP}\n                                    onChange={() => {\n                                       this.setState({ includeCP: !this.state.includeCP })\n                                    }} />\n                              </Form.Group>\n                              <Form.Row className=\"btn-container\">\n                                 <Button id=\"get_report\" variant=\"primary\" onClick={() => this.getReport()}>\n                                    Get Report\n                                       </Button>\n                              </Form.Row>\n                           </Form>\n                           <br></br>\n                           <Alert variant=\"warning\" show={this.state.showWarning} onClose={() => this.setState({ showWarning: !this.state.showWarning })}>\n                              You need to select a project to view report!\n                                 </Alert>\n                        </div>\n                     </div>\n                  }\n               />\n            </Container>\n\n            < this.ReportModal />\n         </div>\n\n      )\n   }\n}\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Report);"]},"metadata":{},"sourceType":"module"}