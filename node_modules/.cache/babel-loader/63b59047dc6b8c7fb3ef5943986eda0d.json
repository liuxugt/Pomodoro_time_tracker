{"ast":null,"code":"import _classCallCheck from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Pomodoro.tsx\";\nimport * as React from 'react';\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchAllProjects as _fetchAllProjects, clearErrorMessage as _clearErrorMessage } from '../redux/actionCreators/project.action';\nimport { sessionService } from '../services/session.service';\nimport OptionList from '../components/List/OptionList';\nimport working1 from \"./../assets/img/working1.svg\";\nimport working2 from \"./../assets/img/working2.svg\";\nimport chill1 from \"./../assets/img/chill1.svg\";\nimport chill2 from \"./../assets/img/chill2.svg\";\nvar imgs = [working1, working2, chill1, chill2];\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectlist: state.project.list,\n    projectErrMess: state.project.errMess\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAllProjects: function fetchAllProjects(userId) {\n      dispatch(_fetchAllProjects(userId));\n    },\n    clearErrorMessage: function clearErrorMessage() {\n      dispatch(_clearErrorMessage());\n    }\n  };\n};\n\n;\n;\n\nvar Pomodoro =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pomodoro, _React$Component);\n\n  _createClass(Pomodoro, [{\n    key: \"CreateModal\",\n    //-----------------------------------\n    //Three functions for modals to create new pomodoro\n    value: function CreateModal() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        id: \"create_modal\",\n        show: this.state.create_show,\n        onHide: this.CreateModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Set duration for your pomodoro and break\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"create_hour_minus_one\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this2.MinusButton(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"-1 \"), React.createElement(\"input\", {\n        id: \"create_hours\",\n        value: this.state.hours,\n        onChange: function onChange(e) {\n          _this2.setState({\n            hours: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"create_hour_plus_one\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this2.PlusButton(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"+1 \"), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"create_minute_minus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this2.MinusButton(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"-10\"), React.createElement(\"input\", {\n        id: \"create_minutes\",\n        value: this.state.minutes,\n        onChange: function onChange(e) {\n          _this2.setState({\n            minutes: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"create_minute_plus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this2.PlusButton(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"+10\"), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"create_second_minus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this2.MinusButton(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"-10\"), React.createElement(\"input\", {\n        id: \"create_second\",\n        value: this.state.seconds,\n        onChange: function onChange(e) {\n          _this2.setState({\n            seconds: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"create_second_plus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this2.PlusButton(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"+10\"), \"second(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"project_select_box\",\n        value: this.state.associated_id,\n        onChange: this.ChangeSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" No association \"), this.props.projectlist.map(function (project, index) {\n        return React.createElement(OptionList, {\n          project: project,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"create_cancel_button\",\n        variant: \"secondary\",\n        onClick: this.CreateCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        id: \"create_confirm_button\",\n        variant: \"primary\",\n        onClick: this.CreateSubmit,\n        disabled: this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" Submit \")));\n    }\n  }, {\n    key: \"CreateModalShow\",\n    value: function CreateModalShow() {\n      this.setState({\n        create_show: true\n      });\n    }\n  }, {\n    key: \"CreateModalClose\",\n    value: function CreateModalClose() {\n      this.setState({\n        create_show: false\n      });\n    } //-----------------------------------\n    //Three functions representing the action of user on create modal\n\n  }, {\n    key: \"CreateSubmit\",\n    value: function CreateSubmit() {\n      var time = moment().format('YYYY-MM-DDTHH:mmZ');\n      console.log(time);\n      this.setState({\n        start_time: time\n      });\n\n      if (this.state.associated_id != -1) {\n        this.CreateSession(time);\n      }\n\n      this.CreatePomodoro();\n      this.CreateModalClose();\n    }\n  }, {\n    key: \"CreateCancel\",\n    value: function CreateCancel() {\n      this.TimeClear();\n      this.CreateModalClose();\n    }\n  }, {\n    key: \"ChangeSelect\",\n    value: function ChangeSelect(e) {\n      this.setState({\n        associated_id: e.target.value\n      });\n    } //-----------------------------------\n    //Confirm the mode for next step, keep working or working or taking a break\n\n  }, {\n    key: \"AskModal\",\n    value: function AskModal() {\n      var _this3 = this;\n\n      return React.createElement(Modal, {\n        id: \"ask_modal\",\n        show: this.state.ask_show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Please select whether you want to take a break or keep working\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"# of pomodoro completed\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.state.counter)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Session Start time\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.state.start_time))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"decide_stop\",\n        variant: \"secondary\",\n        onClick: function onClick() {\n          _this3.ContinueOver();\n\n          _this3.AskModalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Stop this session\"), React.createElement(Button, {\n        id: \"decide_break\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this3.setState({\n            is_break: true\n          });\n\n          _this3.ContinueModalShow();\n\n          _this3.AskModalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Take a break\"), React.createElement(Button, {\n        id: \"decide_work\",\n        variant: \"primary\",\n        onClick: function onClick() {\n          _this3.ContinueModalShow();\n\n          _this3.AskModalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Continue to work\")));\n    }\n  }, {\n    key: \"AskModalShow\",\n    value: function AskModalShow() {\n      this.setState({\n        ask_show: true\n      });\n    }\n  }, {\n    key: \"AskModalClose\",\n    value: function AskModalClose() {\n      this.setState({\n        ask_show: false\n      });\n    } //-----------------------------------\n    //Four functions to continues create new pomodoros when one is completed\n\n  }, {\n    key: \"ContinueModal\",\n    value: function ContinueModal() {\n      var _this4 = this;\n\n      return React.createElement(Modal, {\n        id: \"continue_modal\",\n        show: this.state.continue_show,\n        onHide: this.ContinueOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Please select your time for your \", this.state.is_break ? \"break\" : \"work\", \" in this session\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"continue_hour_minus_one\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this4.MinusButton(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"-1 \"), React.createElement(\"input\", {\n        id: \"continue_hours\",\n        value: this.state.hours,\n        onChange: function onChange(e) {\n          _this4.setState({\n            hours: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"continue_hour_plus_one\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this4.PlusButton(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"+1 \"), \"hour(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"continue_minute_minus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this4.MinusButton(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"-10\"), React.createElement(\"input\", {\n        id: \"continue_minutes\",\n        value: this.state.minutes,\n        onChange: function onChange(e) {\n          _this4.setState({\n            minutes: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"continue_minute_plus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this4.PlusButton(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"+10\"), \"minute(s)\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"continue_second_minus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this4.MinusButton(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"-10\"), React.createElement(\"input\", {\n        id: \"continue_second\",\n        value: this.state.seconds,\n        onChange: function onChange(e) {\n          _this4.setState({\n            seconds: e.target.value % 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"continue_second_plus_ten\",\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          _this4.PlusButton(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"+10\"), \"second(s)\")), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"continue_cancel_button\",\n        variant: \"secondary\",\n        onClick: this.ContinueOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        id: \"continue_confirm_button\",\n        variant: \"primary\",\n        onClick: this.Continue,\n        disabled: this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Yes\")));\n    }\n  }, {\n    key: \"ContinueModalShow\",\n    value: function ContinueModalShow() {\n      this.setState({\n        continue_show: true\n      });\n    }\n  }, {\n    key: \"ContinueModalClose\",\n    value: function ContinueModalClose() {\n      this.setState({\n        continue_show: false\n      });\n    } //-----------------------------------\n    //two functions representing two actions user chooses\n\n  }, {\n    key: \"Continue\",\n    value: function Continue() {\n      this.ContinueModalClose();\n      this.CreatePomodoro();\n    }\n  }, {\n    key: \"ContinueOver\",\n    value: function ContinueOver() {\n      this.ContinueModalClose();\n\n      if (this.state.associated_id != -1) {\n        this.UpdateSession();\n      }\n\n      this.TimeClear();\n      this.StopSession(); //console.log(this.state.associated_id);\n    } //--------------------------------\n    //Three functions to control the stop modalx\n\n  }, {\n    key: \"StopModal\",\n    value: function StopModal() {\n      return React.createElement(Modal, {\n        id: \"stop_modal\",\n        show: this.state.stop_show,\n        onHide: this.StopModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"You are going to stop current pomodoro.\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Are you going to include the runtime of current incomplete pomodoro?\", React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"# of pomodoro completed\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, this.state.counter)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"Session Start time\"), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, this.state.start_time))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"stop_cancel_button\",\n        onClick: this.StopCancel,\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"No\"), React.createElement(Button, {\n        id: \"stop_confirm_button\",\n        onClick: this.StopConfirm,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Yes\")));\n    }\n  }, {\n    key: \"StopModalShow\",\n    value: function StopModalShow() {\n      this.setState({\n        stop_show: true\n      });\n    }\n  }, {\n    key: \"StopModalClose\",\n    value: function StopModalClose() {\n      this.setState({\n        stop_show: false\n      });\n    } //-----------------------------------\n    //Two functions representing different action of user in StopModal\n\n  }, {\n    key: \"StopCancel\",\n    value: function StopCancel() {\n      this.StopModalClose();\n\n      if (this.state.associated_id != -1) {\n        this.UpdateSession();\n      }\n\n      this.TimeClear(); //@ts-ignore\n\n      clearInterval(this.interval);\n      this.StopSession();\n    }\n  }, {\n    key: \"StopConfirm\",\n    value: function StopConfirm() {\n      var _this5 = this;\n\n      this.StopModalClose();\n      var time = moment().format('YYYY-MM-DDTHH:mmZ');\n      this.setState({\n        end_time: time,\n        counter: this.state.counter + 1\n      }, function () {\n        if (_this5.state.associated_id != -1) {\n          _this5.UpdateSession();\n        }\n\n        _this5.TimeClear(); //@ts-ignore\n\n\n        clearInterval(_this5.interval);\n\n        _this5.StopSession();\n      });\n    } //-----------------------------------\n    //Functions for the action of buttons beside each text field\n\n  }, {\n    key: \"MinusButton\",\n    value: function MinusButton(mode) {\n      var temp_seconds = this.state.seconds;\n      var temp_minutes = this.state.minutes;\n      var temp_hours = this.state.hours;\n\n      switch (mode) {\n        case 0:\n          if (temp_seconds <= 10) {\n            temp_seconds = 0;\n          } else {\n            temp_seconds -= 10;\n          }\n\n          break;\n\n        case 1:\n          if (temp_minutes <= 10) {\n            temp_minutes = 0;\n          } else {\n            temp_minutes -= 10;\n          }\n\n          break;\n\n        case 2:\n          if (temp_hours != 0) {\n            temp_hours -= 1;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        seconds: temp_seconds,\n        minutes: temp_minutes,\n        hours: temp_hours\n      });\n    }\n  }, {\n    key: \"PlusButton\",\n    value: function PlusButton(mode) {\n      var temp_seconds = this.state.seconds;\n      var temp_minutes = this.state.minutes;\n      var temp_hours = this.state.hours;\n\n      switch (mode) {\n        case 0:\n          if (temp_seconds >= 50) {\n            temp_seconds -= 50;\n            temp_minutes += 1;\n\n            if (temp_minutes >= 60) {\n              temp_minutes -= 60;\n              temp_hours = temp_hours == 99 ? 99 : temp_hours + 1;\n            }\n          } else {\n            temp_seconds += 10;\n          }\n\n          break;\n\n        case 1:\n          if (temp_minutes >= 50) {\n            temp_minutes -= 50;\n            temp_hours = temp_hours == 99 ? 99 : temp_hours + 1;\n          } else {\n            temp_minutes += 10;\n          }\n\n          break;\n\n        case 2:\n          if (temp_hours != 99) {\n            temp_hours += 1;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        seconds: temp_seconds,\n        minutes: temp_minutes,\n        hours: temp_hours\n      });\n    } //-----------------------------------\n    //functions for the modal to represent the error in HTTP Request\n\n  }, {\n    key: \"ProjectErrorModal\",\n    value: function ProjectErrorModal() {\n      return React.createElement(Modal, {\n        show: this.props.projectErrMess != null,\n        onHide: this.ProjectErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"Error happened in fetching all projects\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, this.props.projectErrMess), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"project_error_button\",\n        variant: \"primary\",\n        onClick: this.ProjectErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }, {\n    key: \"ProjectErrorModalClose\",\n    value: function ProjectErrorModalClose() {\n      this.props.clearErrorMessage();\n    }\n  }, {\n    key: \"PomodoroErrorModal\",\n    value: function PomodoroErrorModal() {\n      return React.createElement(Modal, {\n        show: this.state.error_message != null,\n        onHide: this.PomodoroErrorModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, \"There is an error in pomodoro part\"), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, this.state.error_message), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"pomodoro_error_button\",\n        onClick: this.PomodoroErrorModalClose,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }, {\n    key: \"PomodoroErrorModalClose\",\n    value: function PomodoroErrorModalClose() {\n      this.setState({\n        error_message: null\n      });\n    } //-----------------------------------\n    //Three functions for tracking time\n\n  }, {\n    key: \"TimeClear\",\n    value: function TimeClear() {\n      this.setState({\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        total_seconds: 0\n      });\n    }\n  }, {\n    key: \"StopSession\",\n    value: function StopSession() {\n      this.setState({\n        active: false,\n        is_break: false,\n        counter: 0,\n        start_time: \"\",\n        end_time: \"\"\n      });\n    }\n  }, {\n    key: \"CreatePomodoro\",\n    value: function CreatePomodoro() {\n      var temp_seconds = this.state.seconds;\n      var temp_minutes = this.state.minutes;\n      var temp_hours = this.state.hours;\n\n      if (temp_seconds >= 60) {\n        temp_seconds -= 60;\n        temp_minutes += 1;\n      }\n\n      if (temp_minutes >= 60) {\n        temp_minutes -= 60;\n        temp_hours += 1;\n      }\n\n      this.setState({\n        active: true,\n        total_seconds: temp_hours * 3600 + temp_minutes * 60 + temp_seconds,\n        hours: temp_hours,\n        minutes: temp_minutes,\n        seconds: temp_seconds\n      }); //@ts-ignore\n\n      this.interval = setInterval(this.Countdown, 1000);\n    }\n  }, {\n    key: \"Countdown\",\n    value: function Countdown() {\n      if (this.state.active) {\n        var seconds = this.state.seconds;\n        var minutes = this.state.minutes;\n        var hours = this.state.hours;\n        var total_seconds = this.state.total_seconds;\n        seconds--;\n        total_seconds--; //console.log(\"here\");\n\n        if (seconds < 0) {\n          seconds += 60;\n          minutes -= 1;\n        }\n\n        if (minutes < 0) {\n          minutes += 60;\n          hours -= 1;\n        }\n\n        this.setState({\n          seconds: seconds,\n          hours: hours,\n          minutes: minutes,\n          total_seconds: total_seconds\n        });\n\n        if (total_seconds <= 0) {\n          //@ts-ignore\n          clearInterval(this.interval);\n          var time = moment().format('YYYY-MM-DDTHH:mmZ');\n\n          if (this.state.is_break) {\n            this.setState({\n              end_time: time,\n              active: false,\n              is_break: false\n            });\n          } else {\n            this.setState({\n              end_time: time,\n              counter: this.state.counter + 1,\n              active: false,\n              is_break: false\n            });\n          }\n\n          this.AskModalShow();\n        }\n      }\n    } //Two actions that will deal with API\n\n  }, {\n    key: \"CreateSession\",\n    value: function CreateSession(time) {\n      var _this6 = this;\n\n      sessionService.addUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, time).then(function (res) {\n        console.log(res.data);\n\n        _this6.setState({\n          active_session_id: res.data.id,\n          counter: 0\n        });\n      }).catch(function (error) {\n        console.log(error.message);\n\n        _this6.setState({\n          error_message: error.message\n        });\n      });\n    }\n  }, {\n    key: \"UpdateSession\",\n    value: function UpdateSession() {\n      var _this7 = this;\n\n      console.log(this.state.counter);\n      sessionService.updateUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.active_session_id, this.state.start_time, this.state.end_time, this.state.counter).then(function (res) {\n        console.log(res.data);\n      }).catch(function (error) {\n        console.log(error.message);\n\n        _this7.setState({\n          error_message: error.message\n        });\n      });\n    }\n  }, {\n    key: \"dance\",\n    value: function dance() {\n      if (this.curImg.current) {\n        var paths = this.curImg.current.src.split('/');\n        var image = paths[paths.length - 1];\n        if (image === imgs[0].split('/')[imgs[0].split('/').length - 1]) this.curImg.current.src = imgs[1];\n        if (image === imgs[1].split('/')[imgs[1].split('/').length - 1]) this.curImg.current.src = imgs[0];\n        if (image === imgs[2].split('/')[imgs[2].split('/').length - 1]) this.curImg.current.src = imgs[3];\n        if (image === imgs[3].split('/')[imgs[3].split('/').length - 1]) this.curImg.current.src = imgs[2];\n      }\n    }\n  }]);\n\n  function Pomodoro(props) {\n    var _this;\n\n    _classCallCheck(this, Pomodoro);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pomodoro).call(this, props));\n    _this.curImg = void 0;\n    _this.CreateModal = _this.CreateModal.bind(_assertThisInitialized(_this));\n    _this.CreateModalClose = _this.CreateModalClose.bind(_assertThisInitialized(_this));\n    _this.CreateModalShow = _this.CreateModalShow.bind(_assertThisInitialized(_this));\n    _this.ChangeSelect = _this.ChangeSelect.bind(_assertThisInitialized(_this));\n    _this.CreateSubmit = _this.CreateSubmit.bind(_assertThisInitialized(_this));\n    _this.CreateCancel = _this.CreateCancel.bind(_assertThisInitialized(_this));\n    _this.ContinueModal = _this.ContinueModal.bind(_assertThisInitialized(_this));\n    _this.ContinueModalShow = _this.ContinueModalShow.bind(_assertThisInitialized(_this));\n    _this.ContinueModalClose = _this.ContinueModalClose.bind(_assertThisInitialized(_this));\n    _this.Continue = _this.Continue.bind(_assertThisInitialized(_this));\n    _this.ContinueOver = _this.ContinueOver.bind(_assertThisInitialized(_this));\n    _this.AskModal = _this.AskModal.bind(_assertThisInitialized(_this));\n    _this.AskModalShow = _this.AskModalShow.bind(_assertThisInitialized(_this));\n    _this.AskModalClose = _this.AskModalClose.bind(_assertThisInitialized(_this));\n    _this.StopModal = _this.StopModal.bind(_assertThisInitialized(_this));\n    _this.StopModalShow = _this.StopModalShow.bind(_assertThisInitialized(_this));\n    _this.StopModalClose = _this.StopModalClose.bind(_assertThisInitialized(_this));\n    _this.StopConfirm = _this.StopConfirm.bind(_assertThisInitialized(_this));\n    _this.StopCancel = _this.StopCancel.bind(_assertThisInitialized(_this));\n    _this.UpdateSession = _this.UpdateSession.bind(_assertThisInitialized(_this));\n    _this.CreateSession = _this.CreateSession.bind(_assertThisInitialized(_this));\n    _this.PlusButton = _this.PlusButton.bind(_assertThisInitialized(_this));\n    _this.MinusButton = _this.MinusButton.bind(_assertThisInitialized(_this));\n    _this.TimeClear = _this.TimeClear.bind(_assertThisInitialized(_this));\n    _this.CreatePomodoro = _this.CreatePomodoro.bind(_assertThisInitialized(_this));\n    _this.Countdown = _this.Countdown.bind(_assertThisInitialized(_this));\n    _this.StopSession = _this.StopSession.bind(_assertThisInitialized(_this));\n    _this.ProjectErrorModal = _this.ProjectErrorModal.bind(_assertThisInitialized(_this));\n    _this.ProjectErrorModalClose = _this.ProjectErrorModalClose.bind(_assertThisInitialized(_this));\n    _this.PomodoroErrorModal = _this.PomodoroErrorModal.bind(_assertThisInitialized(_this));\n    _this.PomodoroErrorModalClose = _this.PomodoroErrorModalClose.bind(_assertThisInitialized(_this));\n    _this.dance = _this.dance.bind(_assertThisInitialized(_this));\n    _this.state = {\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n      total_seconds: 0,\n      associated_id: -1,\n      active_session_id: -1,\n      start_time: \"\",\n      end_time: \"\",\n      //total_hours: 0,\n      create_show: false,\n      continue_show: false,\n      stop_show: false,\n      ask_show: false,\n      active: false,\n      counter: 0,\n      is_break: false,\n      error_message: null\n    }; //@ts-ignore\n\n    _this.interval;\n    _this.curImg = React.createRef();\n    return _this;\n  }\n\n  _createClass(Pomodoro, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n      setInterval(this.dance, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Pomodoro Timer\",\n        icon: \"pe-7s-stopwatch\",\n        hCenter: true,\n        ctTableFullWidth: true,\n        ctTableResponsive: true,\n        content: React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"button-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 763\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btn-container col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"create_pomodoro_button\",\n          variant: \"primary\",\n          onClick: this.CreateModalShow,\n          disabled: this.state.active,\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 765\n          },\n          __self: this\n        }, \"Create Pomodoro for new sessions\")), React.createElement(\"div\", {\n          className: \"btn-container col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 774\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"stop_pomodoro_button\",\n          onClick: this.StopModalShow,\n          variant: \"danger\",\n          disabled: !this.state.active,\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 775\n          },\n          __self: this\n        }, \"Stop current ongoing Pomodoro and current session\"))), React.createElement(\"div\", {\n          className: \"img-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 785\n          },\n          __self: this\n        }, !this.state.active || this.state.active && !this.state.is_break ? React.createElement(\"img\", {\n          src: imgs[0],\n          ref: this.curImg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 788\n          },\n          __self: this\n        }) : React.createElement(\"img\", {\n          src: imgs[2],\n          ref: this.curImg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 789\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"timer-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            fontSize: \"64px\",\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793\n          },\n          __self: this\n        }, (\"0\" + this.state.hours.toString()).slice(-2), \" : \", (\"0\" + this.state.minutes.toString()).slice(-2), \" : \", (\"0\" + this.state.seconds.toString()).slice(-2), this.state.active))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      })))), React.createElement(this.CreateModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }), React.createElement(this.AskModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }), React.createElement(this.ContinueModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }), React.createElement(this.StopModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }), React.createElement(this.ProjectErrorModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }), React.createElement(this.PomodoroErrorModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Pomodoro;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pomodoro);","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Pomodoro.tsx"],"names":["React","Container","Row","Col","Button","Modal","Card","connect","moment","fetchAllProjects","clearErrorMessage","sessionService","OptionList","imgs","working1","working2","chill1","chill2","mapStateToProps","state","projectlist","project","list","projectErrMess","errMess","mapDispatchToProps","dispatch","userId","Pomodoro","create_show","CreateModalClose","MinusButton","hours","e","setState","target","value","PlusButton","minutes","seconds","associated_id","ChangeSelect","props","map","index","CreateCancel","CreateSubmit","time","format","console","log","start_time","CreateSession","CreatePomodoro","TimeClear","ask_show","counter","ContinueOver","AskModalClose","is_break","ContinueModalShow","continue_show","Continue","ContinueModalClose","UpdateSession","StopSession","stop_show","StopModalClose","StopCancel","StopConfirm","clearInterval","interval","end_time","mode","temp_seconds","temp_minutes","temp_hours","ProjectErrorModalClose","error_message","PomodoroErrorModalClose","total_seconds","active","setInterval","Countdown","AskModalShow","addUserProjectSession","Number","localStorage","getItem","then","res","data","active_session_id","id","catch","error","message","updateUserProjectSession","curImg","current","paths","src","split","image","length","CreateModal","bind","CreateModalShow","ContinueModal","AskModal","StopModal","StopModalShow","ProjectErrorModal","PomodoroErrorModal","dance","createRef","fontSize","textAlign","toString","slice","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchAllProjects, clearErrorMessage } from '../redux/actionCreators/project.action';\n\nimport { sessionService } from '../services/session.service';\n\nimport OptionList from '../components/List/OptionList';\n\nimport working1 from './../assets/img/working1.svg';\nimport working2 from './../assets/img/working2.svg';\nimport chill1 from './../assets/img/chill1.svg';\nimport chill2 from './../assets/img/chill2.svg';\n\nconst imgs = [working1, working2, chill1, chill2];\n\nconst mapStateToProps = (state: any) => {\n    return {\n        projectlist: state.project.list,\n        projectErrMess: state.project.errMess\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    fetchAllProjects: userId => {\n        dispatch(fetchAllProjects(userId));\n    },\n    clearErrorMessage: () => {\n        dispatch(clearErrorMessage());\n    }\n});\n\ninterface Props {\n    projectlist: any,\n    projectErrMess: any,\n    fetchAllProjects: any,\n    clearErrorMessage: any\n};\n\ninterface State {\n    minutes: number,\n    seconds: number,\n    hours: number,\n    total_seconds: number,\n    associated_id: number,\n    active_session_id: number,\n    /*\n    set_minutes: number,\n    set_seconds: number,\n    set_hours: number,\n\n    break_minutes: number,\n    break_seconds: number,\n    break_hours: number,\n    */\n\n    start_time: String,\n    end_time: String,\n    //total_hours: number,\n\n    create_show: boolean,\n    continue_show: boolean,\n    stop_show: boolean,\n    ask_show: boolean,\n    active: boolean,\n    counter: number,\n    is_break: boolean,\n\n    error_message: any\n};\n\nclass Pomodoro extends React.Component<Props, State>{\n    private curImg: React.RefObject<HTMLImageElement>;\n    //-----------------------------------\n    //Three functions for modals to create new pomodoro\n    CreateModal() {\n        return <Modal id=\"create_modal\" show={this.state.create_show} onHide={this.CreateModalClose}>\n            <Modal.Header>\n                <Modal.Title>Set duration for your pomodoro and break</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Button id=\"create_hour_minus_one\" variant=\"outline-primary\" onClick={()=>{this.MinusButton(2);}}>-1 </Button>\n                    <input\n                        id=\"create_hours\"\n                        value={this.state.hours}\n                        onChange={(e: any) => {\n                            this.setState({hours: e.target.value % 100 });\n                        }} />\n                    <Button id=\"create_hour_plus_one\" variant=\"outline-primary\" onClick={()=>{this.PlusButton(2);}}>+1 </Button>\n                    hour(s)\n                </Row>\n                <Row>\n                    <Button id=\"create_minute_minus_ten\" variant=\"outline-primary\" onClick={()=>{this.MinusButton(1);}}>-10</Button>\n                    <input\n                        id=\"create_minutes\"\n                        value={this.state.minutes}\n                        onChange={(e: any) => {\n                            this.setState({minutes: e.target.value % 100 });\n                        }} />\n                    <Button id=\"create_minute_plus_ten\" variant=\"outline-primary\" onClick={()=>{this.PlusButton(1);}}>+10</Button>\n                    minute(s)\n                </Row>\n                <Row>\n                    <Button id=\"create_second_minus_ten\" variant=\"outline-primary\" onClick={()=>{this.MinusButton(0);}}>-10</Button>\n                    <input\n                        id=\"create_second\"\n                        value={this.state.seconds}\n                        onChange={(e: any) => {\n                            this.setState({seconds: e.target.value % 100 });\n                        }} />\n                    <Button id=\"create_second_plus_ten\" variant=\"outline-primary\" onClick={()=>{this.PlusButton(0);}}>+10</Button>\n                    second(s)\n                </Row>\n\n                <Row>\n                    <select id=\"project_select_box\" value={this.state.associated_id} onChange={this.ChangeSelect} >\n                        <option value={-1}> No association </option>\n                        {this.props.projectlist.map((project: any, index: number) => {\n                            return (\n                                <OptionList project={project} key={index}/>\n                            );\n                        })}\n                    </select>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button id=\"create_cancel_button\" variant=\"secondary\" onClick={this.CreateCancel}>\n                    Cancel\n                </Button>\n                <Button id=\"create_confirm_button\" variant=\"primary\" onClick={this.CreateSubmit}\n                    disabled={this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0}> Submit </Button>\n            </Modal.Footer>\n        </Modal>\n    }\n\n    CreateModalShow() {\n        this.setState({\n            create_show: true\n        });\n    }\n\n    CreateModalClose() {\n        this.setState({\n            create_show: false,\n        });\n    }\n\n    //-----------------------------------\n    //Three functions representing the action of user on create modal\n    CreateSubmit() {\n        var time = moment().format('YYYY-MM-DDTHH:mmZ');\n        console.log(time);\n        this.setState({\n            start_time: time\n        })\n        if (this.state.associated_id != -1) {\n            this.CreateSession(time);\n        }\n        this.CreatePomodoro();\n        this.CreateModalClose();\n    }\n    CreateCancel() {\n        this.TimeClear();\n        this.CreateModalClose();\n    }\n    ChangeSelect(e: any) {\n        this.setState({\n            associated_id: e.target.value\n        })\n    }\n    //-----------------------------------\n    //Confirm the mode for next step, keep working or working or taking a break\n    AskModal(){\n        return (\n            <Modal id=\"ask_modal\" show={this.state.ask_show}>\n            <Modal.Header>\n                Please select whether you want to take a break or keep working\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col># of pomodoro completed</Col>\n                    <Col>{this.state.counter}</Col>\n                </Row>\n                <Row>\n                    <Col>Session Start time</Col>\n                    <Col>{this.state.start_time}</Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button id=\"decide_stop\" variant=\"secondary\" onClick={()=>{\n                    this.ContinueOver();\n                    this.AskModalClose();\n                }}>\n                    Stop this session\n                </Button>\n                <Button id=\"decide_break\" variant=\"outline-primary\" onClick={()=>{\n                    this.setState({\n                        is_break: true,\n                    });\n                    this.ContinueModalShow();\n                    this.AskModalClose();\n                }}>\n                    Take a break\n                </Button>\n\n                <Button id=\"decide_work\" variant=\"primary\" onClick={()=>{\n                    this.ContinueModalShow();\n                    this.AskModalClose();\n                }}>\n                    Continue to work\n                </Button>\n            </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    AskModalShow(){\n        this.setState({\n            ask_show: true,\n        });\n    }\n\n    AskModalClose(){\n        this.setState({\n            ask_show: false,\n        });\n    }\n\n    //-----------------------------------\n    //Four functions to continues create new pomodoros when one is completed\n    ContinueModal() {\n        return (\n            <Modal id=\"continue_modal\" show={this.state.continue_show} onHide={this.ContinueOver}>\n                <Modal.Header>\n                    Please select your time for your {this.state.is_break ? \"break\" : \"work\"} in this session\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Button id=\"continue_hour_minus_one\" variant=\"outline-primary\" onClick={()=>{this.MinusButton(2)}}>-1 </Button>\n                        <input\n                            id=\"continue_hours\"\n                            value={this.state.hours}\n                            onChange={(e: any) => {\n                                this.setState({ hours: e.target.value % 100 });\n                            }}\n                            />\n                        <Button id=\"continue_hour_plus_one\" variant=\"outline-primary\" onClick={()=>{this.PlusButton(2);}}>+1 </Button>\n                        hour(s)\n                    </Row>\n                    <Row>\n                        <Button id=\"continue_minute_minus_ten\" variant=\"outline-primary\" onClick={()=>{this.MinusButton(1);}}>-10</Button>\n                        <input\n                            id=\"continue_minutes\"\n                            value={this.state.minutes}\n                            onChange={(e: any) => {\n                                this.setState({ minutes: e.target.value % 100 });\n                            }} \n                            />\n                        <Button id=\"continue_minute_plus_ten\" variant=\"outline-primary\" onClick={()=>{this.PlusButton(1);}}>+10</Button>\n                        minute(s)\n                    </Row>\n                    <Row>\n                        <Button id=\"continue_second_minus_ten\" variant=\"outline-primary\" onClick={()=>{this.MinusButton(0);}}>-10</Button>\n                        <input\n                            id=\"continue_second\"\n                            value={this.state.seconds}\n                            onChange={(e: any) => {\n                                this.setState({ seconds: e.target.value % 100 });\n                            }} \n                            />\n                        <Button id=\"continue_second_plus_ten\" variant=\"outline-primary\" onClick={()=>{this.PlusButton(0);}}>+10</Button>\n                        \n                        second(s)\n                    </Row>\n                    \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button id=\"continue_cancel_button\" variant=\"secondary\" onClick={(this.ContinueOver)}>\n                        No\n                    </Button>\n                    <Button id=\"continue_confirm_button\" variant=\"primary\" onClick={this.Continue} disabled={this.state.hours == 0 && this.state.minutes == 0 && this.state.seconds == 0}>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n    ContinueModalShow() {\n        this.setState({\n            continue_show: true\n        });\n    }\n\n    ContinueModalClose() {\n        this.setState({\n            continue_show: false\n        })\n    }\n\n    //-----------------------------------\n    //two functions representing two actions user chooses\n    Continue() {\n        this.ContinueModalClose();\n        this.CreatePomodoro();\n    }\n\n    ContinueOver() {\n        this.ContinueModalClose();\n        if (this.state.associated_id != -1) {\n            this.UpdateSession();\n        }\n        this.TimeClear();\n        this.StopSession();\n        //console.log(this.state.associated_id);\n    }\n    \n    //--------------------------------\n    //Three functions to control the stop modalx\n    StopModal() {\n        return (\n            <Modal id=\"stop_modal\" show={this.state.stop_show} onHide={this.StopModalClose}>\n                <Modal.Header>\n                    You are going to stop current pomodoro.\n                </Modal.Header>\n                <Modal.Body>\n                    Are you going to include the runtime of current incomplete pomodoro?\n                    <Row>\n                        <Col># of pomodoro completed</Col>\n                        <Col>{this.state.counter}</Col>\n                    </Row>\n                    <Row>\n                        <Col>Session Start time</Col>\n                        <Col>{this.state.start_time}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        id=\"stop_cancel_button\"\n                        onClick={this.StopCancel}\n                        variant=\"secondary\">\n                        No\n                    </Button>\n                    <Button\n                        id=\"stop_confirm_button\"\n                        onClick={this.StopConfirm}\n                        variant=\"primary\">\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n    StopModalShow() {\n        this.setState({\n            stop_show: true\n        })\n    }\n\n    StopModalClose() {\n        this.setState({\n            stop_show: false\n        })\n    }\n\n\n    //-----------------------------------\n    //Two functions representing different action of user in StopModal\n    StopCancel() {\n        this.StopModalClose();\n        if (this.state.associated_id != -1) {\n            this.UpdateSession();\n        }\n        this.TimeClear();\n        //@ts-ignore\n        clearInterval(this.interval);\n        this.StopSession();\n    }\n\n    StopConfirm() {\n        this.StopModalClose();\n        var time = moment().format('YYYY-MM-DDTHH:mmZ');\n        this.setState({\n            end_time: time,\n            counter: this.state.counter + 1\n        }, ()=>{\n            if (this.state.associated_id != -1) {\n                this.UpdateSession();\n            }\n            this.TimeClear();\n            //@ts-ignore\n            clearInterval(this.interval);\n            this.StopSession();\n        });\n    }\n    //-----------------------------------\n    //Functions for the action of buttons beside each text field\n    MinusButton(mode: number){\n        var temp_seconds = this.state.seconds;\n        var temp_minutes = this.state.minutes;\n        var temp_hours = this.state.hours;\n        switch(mode){\n            case 0:\n                if(temp_seconds <= 10){\n                    temp_seconds = 0;\n                }\n                else{\n                    temp_seconds -= 10;\n                }\n                break;\n            case 1:\n                if(temp_minutes <= 10){\n                    temp_minutes = 0;\n                }\n                else{\n                    temp_minutes -= 10;\n                }\n                break;\n            case 2:\n                if(temp_hours != 0){\n                    temp_hours -= 1;\n                }\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            seconds: temp_seconds,\n            minutes: temp_minutes,\n            hours: temp_hours,\n        });\n    }\n\n    PlusButton(mode: number){\n        var temp_seconds = this.state.seconds;\n        var temp_minutes = this.state.minutes;\n        var temp_hours = this.state.hours;\n        switch(mode){\n            case 0:\n                if(temp_seconds >= 50){\n                    temp_seconds -= 50;\n                    temp_minutes += 1;\n                    if(temp_minutes >= 60){\n                        temp_minutes -= 60;\n                        temp_hours = (temp_hours == 99) ? 99 : temp_hours + 1;\n                    }\n                }\n                else{\n                    temp_seconds += 10;\n                }\n                break;\n            case 1:\n                if(temp_minutes >= 50){\n                    temp_minutes -= 50;\n                    temp_hours = (temp_hours == 99) ? 99 : temp_hours + 1;\n                }\n                else{\n                    temp_minutes += 10;\n                }\n                break;\n            case 2:\n                if(temp_hours != 99){\n                    temp_hours += 1;\n                }\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            seconds: temp_seconds,\n            minutes: temp_minutes,\n            hours: temp_hours,\n        });\n    }\n\n    //-----------------------------------\n    //functions for the modal to represent the error in HTTP Request\n    ProjectErrorModal() {\n        return (\n            <Modal show={this.props.projectErrMess != null} onHide={this.ProjectErrorModalClose}>\n                <Modal.Header>\n                    Error happened in fetching all projects\n                </Modal.Header>\n                <Modal.Body>\n                    {this.props.projectErrMess}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        id=\"project_error_button\"\n                        variant=\"primary\"\n                        onClick={this.ProjectErrorModalClose}>\n                        Ok\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    ProjectErrorModalClose() {\n        this.props.clearErrorMessage();\n    }\n\n    PomodoroErrorModal() {\n        return (\n            <Modal show={this.state.error_message != null} onHide={this.PomodoroErrorModalClose}>\n                <Modal.Header>\n                    There is an error in pomodoro part\n                </Modal.Header>\n\n                <Modal.Body>\n                    {this.state.error_message}\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button id=\"pomodoro_error_button\" onClick={this.PomodoroErrorModalClose} variant=\"primary\">\n                        Ok\n                    </Button>\n                </Modal.Footer>\n\n            </Modal>\n        )\n    }\n\n    PomodoroErrorModalClose() {\n        this.setState({\n            error_message: null\n        })\n    }\n\n    //-----------------------------------\n    //Three functions for tracking time\n    TimeClear() {\n        this.setState({\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n\n            total_seconds: 0,\n        });\n    }\n\n    StopSession(){\n        this.setState({\n            active: false,\n            is_break: false,\n            counter: 0,\n            start_time: \"\",\n            end_time: \"\"\n        })\n    }\n\n    CreatePomodoro(){\n        var temp_seconds = this.state.seconds;\n        var temp_minutes = this.state.minutes;\n        var temp_hours = this.state.hours;\n        if(temp_seconds >= 60){\n            temp_seconds -= 60;\n            temp_minutes += 1;\n        }\n        if(temp_minutes >= 60){\n            temp_minutes -= 60;\n            temp_hours += 1;\n        }\n        this.setState({\n            active: true,\n            total_seconds: temp_hours * 3600 + temp_minutes * 60 + temp_seconds,\n            hours: temp_hours,\n            minutes: temp_minutes,\n            seconds: temp_seconds,\n        });\n\n        //@ts-ignore\n        this.interval = setInterval(this.Countdown, 1000);\n    }\n\n    Countdown() {\n        if (this.state.active) {\n            var seconds = this.state.seconds;\n            var minutes = this.state.minutes;\n            var hours = this.state.hours;\n            var total_seconds = this.state.total_seconds;\n            seconds--;\n            total_seconds--;\n            //console.log(\"here\");\n            if (seconds < 0) {\n                seconds += 60;\n                minutes -= 1;\n            }\n            if (minutes < 0) {\n                minutes += 60;\n                hours -= 1;\n            }\n            this.setState({\n                seconds: seconds,\n                hours: hours,\n                minutes: minutes,\n                total_seconds: total_seconds\n            });\n            if (total_seconds <= 0) {\n                //@ts-ignore\n                clearInterval(this.interval);\n                var time = moment().format('YYYY-MM-DDTHH:mmZ');\n                if(this.state.is_break){\n                    this.setState({\n                        end_time: time,\n                        active: false,\n                        is_break: false,\n                    })\n                }\n                else{\n                    this.setState({\n                        end_time: time,\n                        counter: this.state.counter + 1,\n                        active: false,\n                        is_break: false\n                    });\n                }\n                this.AskModalShow();\n            }\n        }\n    }\n\n    //Two actions that will deal with API\n    CreateSession(time: any) {\n        sessionService.addUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, time).then((res) => {\n            console.log(res.data);\n            this.setState({\n                active_session_id: res.data.id,\n                counter: 0\n            });\n        })\n            .catch((error) => {\n                console.log(error.message)\n                this.setState({\n                    error_message: error.message\n                })\n            })\n    }\n\n    UpdateSession() {\n        console.log(this.state.counter);\n        sessionService.updateUserProjectSession(Number(localStorage.getItem('id')), this.state.associated_id, this.state.active_session_id, this.state.start_time, this.state.end_time, this.state.counter)\n            .then((res) => {\n                console.log(res.data);\n            })\n            .catch((error) => {\n                console.log(error.message)\n                this.setState({\n                    error_message: error.message\n                })\n            });\n    }\n\n    dance() {\n        if (this.curImg.current) {\n            let paths = this.curImg.current.src.split('/');\n            let image = paths[paths.length - 1];\n            if (image === imgs[0].split('/')[imgs[0].split('/').length - 1])\n                this.curImg.current.src = imgs[1]\n            if (image === imgs[1].split('/')[imgs[1].split('/').length - 1])\n                this.curImg.current.src = imgs[0]\n            if (image === imgs[2].split('/')[imgs[2].split('/').length - 1])\n                this.curImg.current.src = imgs[3]\n            if (image === imgs[3].split('/')[imgs[3].split('/').length - 1])\n                this.curImg.current.src = imgs[2]\n        }\n    }\n\n    constructor(props: Props) {\n        super(props);\n        this.CreateModal = this.CreateModal.bind(this);\n        this.CreateModalClose = this.CreateModalClose.bind(this);\n        this.CreateModalShow = this.CreateModalShow.bind(this);\n        this.ChangeSelect = this.ChangeSelect.bind(this);\n        this.CreateSubmit = this.CreateSubmit.bind(this);\n        this.CreateCancel = this.CreateCancel.bind(this);\n\n        this.ContinueModal = this.ContinueModal.bind(this);\n        this.ContinueModalShow = this.ContinueModalShow.bind(this);\n        this.ContinueModalClose = this.ContinueModalClose.bind(this);\n\n        this.Continue = this.Continue.bind(this);\n        this.ContinueOver = this.ContinueOver.bind(this);\n        this.AskModal = this.AskModal.bind(this);\n        this.AskModalShow = this.AskModalShow.bind(this);\n        this.AskModalClose = this.AskModalClose.bind(this);\n\n        this.StopModal = this.StopModal.bind(this);\n        this.StopModalShow = this.StopModalShow.bind(this);\n        this.StopModalClose = this.StopModalClose.bind(this);\n\n        this.StopConfirm = this.StopConfirm.bind(this);\n        this.StopCancel = this.StopCancel.bind(this);\n\n        this.UpdateSession = this.UpdateSession.bind(this);\n        this.CreateSession = this.CreateSession.bind(this);\n\n        this.PlusButton = this.PlusButton.bind(this);\n        this.MinusButton = this.MinusButton.bind(this);\n\n        this.TimeClear = this.TimeClear.bind(this);\n        this.CreatePomodoro = this.CreatePomodoro.bind(this);\n        this.Countdown = this.Countdown.bind(this);\n        this.StopSession = this.StopSession.bind(this);\n\n        this.ProjectErrorModal = this.ProjectErrorModal.bind(this);\n        this.ProjectErrorModalClose = this.ProjectErrorModalClose.bind(this);\n        this.PomodoroErrorModal = this.PomodoroErrorModal.bind(this);\n        this.PomodoroErrorModalClose = this.PomodoroErrorModalClose.bind(this);\n\n        this.dance = this.dance.bind(this)\n\n        this.state = {\n            seconds: 0,\n            minutes: 0,\n            hours: 0,\n            total_seconds: 0,\n            associated_id: -1,\n            active_session_id: -1,\n            start_time: \"\",\n            end_time: \"\",\n            //total_hours: 0,\n\n            create_show: false,\n            continue_show: false,\n            stop_show: false,\n            ask_show: false,\n            active: false,\n            counter: 0,\n            is_break: false,\n\n            error_message: null\n        };\n        //@ts-ignore\n        this.interval;\n\n        this.curImg = React.createRef();\n\n    }\n\n    componentDidMount() {\n        this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n        setInterval(this.dance, 1000)\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Container fluid>\n                    <Row>\n                        <Col md={12}>\n                            <Card\n                                title=\"Pomodoro Timer\"\n                                icon=\"pe-7s-stopwatch\"\n                                hCenter={true}\n                                ctTableFullWidth\n                                ctTableResponsive\n                                content={\n                                    <div className=\"card-content\">\n                                        <div className=\"button-row\">\n                                            <div className=\"btn-container col-md-4\">\n                                                <Button\n                                                    id=\"create_pomodoro_button\"\n                                                    variant=\"primary\"\n                                                    onClick={this.CreateModalShow}\n                                                    disabled={this.state.active}\n                                                    className=\"col\">\n                                                    Create Pomodoro for new sessions\n                                                </Button>\n                                            </div>\n                                            <div className=\"btn-container col-md-4\">\n                                                <Button\n                                                    id=\"stop_pomodoro_button\"\n                                                    onClick={this.StopModalShow}\n                                                    variant=\"danger\"\n                                                    disabled={!this.state.active}\n                                                    className=\"col\">\n                                                    Stop current ongoing Pomodoro and current session\n                                                </Button>\n                                            </div>\n                                        </div>\n                                        <div className=\"img-container\">\n                                            {\n                                                !this.state.active || this.state.active && !this.state.is_break ?\n                                                <img src={imgs[0]} ref={this.curImg} />:\n                                                <img src={imgs[2]} ref={this.curImg} />\n                                            }\n                                        </div>\n                                        <div className=\"timer-container\">\n                                            <div style={{fontSize: \"64px\", textAlign: \"center\"}}>\n                                                {(\"0\" + this.state.hours.toString()).slice(-2)} : {(\"0\" + this.state.minutes.toString()).slice(-2)} : {(\"0\" + this.state.seconds.toString()).slice(-2)}\n                                                {this.state.active}\n                                            </div>\n                                        </div>\n                                    </div>\n                                }\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <this.CreateModal></this.CreateModal>\n                <this.AskModal></this.AskModal>\n                <this.ContinueModal></this.ContinueModal>\n                <this.StopModal></this.StopModal>\n                <this.ProjectErrorModal></this.ProjectErrorModal>\n                <this.PomodoroErrorModal></this.PomodoroErrorModal>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Pomodoro);"]},"metadata":{},"sourceType":"module"}