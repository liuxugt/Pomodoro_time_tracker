{"ast":null,"code":"import _classCallCheck from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Project.tsx\";\nimport * as React from 'react';\nimport { Container, Row, Col, Button, Table, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport ReactPaginate from 'react-paginate';\nimport { connect } from 'react-redux';\nimport { fetchAllProjects as _fetchAllProjects, addProject as _addProject, putProject as _putProject, deleteProject as _deleteProject, clearErrorMessage as _clearErrorMessage } from '../redux/actionCreators/project.action';\nimport ProjectList from '../components/List/ProjectList';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectlist: state.project.list,\n    projectErrMess: state.project.errMess\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchAllProjects: function fetchAllProjects(userId) {\n      dispatch(_fetchAllProjects(userId));\n    },\n    addProject: function addProject(userId, projectname) {\n      dispatch(_addProject(userId, projectname));\n    },\n    putProject: function putProject(_ref) {\n      var projectname = _ref.projectname,\n          userId = _ref.userId,\n          projectId = _ref.projectId;\n      dispatch(_putProject({\n        projectname: projectname,\n        userId: userId,\n        projectId: projectId\n      }));\n    },\n    deleteProject: function deleteProject(userId, projectId) {\n      dispatch(_deleteProject(userId, projectId));\n    },\n    clearErrorMessage: function clearErrorMessage() {\n      dispatch(_clearErrorMessage());\n    }\n  };\n};\n\nvar Project =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Project, _React$Component);\n\n  function Project(props) {\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Project).call(this, props));\n    _this.ErrModalClose = _this.ErrModalClose.bind(_assertThisInitialized(_this));\n    _this.ErrModal = _this.ErrModal.bind(_assertThisInitialized(_this));\n    _this.DelModalShow = _this.DelModalShow.bind(_assertThisInitialized(_this));\n    _this.DelModalClose = _this.DelModalClose.bind(_assertThisInitialized(_this));\n    _this.DelModal = _this.DelModal.bind(_assertThisInitialized(_this));\n    _this.CreateModalShow = _this.CreateModalShow.bind(_assertThisInitialized(_this));\n    _this.CreateModalClose = _this.CreateModalClose.bind(_assertThisInitialized(_this));\n    _this.CreateModal = _this.CreateModal.bind(_assertThisInitialized(_this));\n    _this.EditModalShow = _this.EditModalShow.bind(_assertThisInitialized(_this));\n    _this.EditModalClose = _this.EditModalClose.bind(_assertThisInitialized(_this));\n    _this.EditModal = _this.EditModal.bind(_assertThisInitialized(_this));\n    _this.onPageChange = _this.onPageChange.bind(_assertThisInitialized(_this));\n    _this.clickDropdown = _this.clickDropdown.bind(_assertThisInitialized(_this));\n    _this.clickOption = _this.clickOption.bind(_assertThisInitialized(_this));\n    _this.handleTextUpdate = _this.handleTextUpdate.bind(_assertThisInitialized(_this));\n    _this.state = {\n      delete_show: false,\n      delete_index: 0,\n      create_show: false,\n      new_project_name: '',\n      edit_show: false,\n      edit_index: 0,\n      edit_user_id: 0,\n      edit_project_id: 0,\n      edit_project_name: '',\n      currentPage: 0,\n      pageLimit: 5,\n      droplist: false,\n      keyword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n      console.log();\n    } // Error modal\n\n  }, {\n    key: \"ErrModalClose\",\n    value: function ErrModalClose() {\n      this.props.clearErrorMessage();\n    }\n  }, {\n    key: \"ErrModal\",\n    value: function ErrModal() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        id: \"error_modal\",\n        show: this.props.projectErrMess != null,\n        onHide: this.ErrModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Error Code\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.props.projectErrMess), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: function onClick() {\n          return _this2.ErrModalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"OK\")));\n    } // Delete modal\n\n  }, {\n    key: \"DelModalClose\",\n    value: function DelModalClose() {\n      this.setState({\n        delete_show: false\n      });\n    }\n  }, {\n    key: \"DelModalShow\",\n    value: function DelModalShow() {\n      this.setState({\n        delete_show: true\n      });\n    }\n  }, {\n    key: \"DelButton\",\n    value: function DelButton(project, key) {\n      if (project.report.sessions && project.report.sessions.length != 0) {\n        //if there is pomodoro, popup the confirmation for user\n        this.setState({\n          delete_index: key\n        });\n        this.DelModalShow();\n      } else {\n        this.props.deleteProject(project.userId, project.id);\n      }\n    }\n  }, {\n    key: \"DelProject\",\n    value: function DelProject(project) {\n      //Delete the projects\n      if (this.state.delete_show) {\n        this.DelModalClose();\n      }\n\n      this.props.deleteProject(project.userId, project.id);\n    }\n  }, {\n    key: \"DelModal\",\n    value: function DelModal() {\n      var _this3 = this;\n\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n        return React.createElement(Modal, {\n          id: \"delete_modal\",\n          show: this.state.delete_show,\n          onHide: this.DelModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Delete Confirmation\")), React.createElement(Modal.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Project name: \", this.props.projectlist[this.state.delete_index].projectname, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"confirm-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"This project has sessions associate with it.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"Are you sure to delete the user?\"))), React.createElement(Modal.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"secondary\",\n          id: \"cancel_delete\",\n          onClick: this.DelModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Cancel\"), React.createElement(Button, {\n          variant: \"primary\",\n          id: \"confirm_delete\",\n          onClick: function onClick() {\n            return _this3.DelProject(_this3.props.projectlist[_this3.state.delete_index]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Confirm\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"CreateModalClose\",\n    value: function CreateModalClose() {\n      this.setState({\n        create_show: false\n      });\n    }\n  }, {\n    key: \"CreateModalShow\",\n    value: function CreateModalShow() {\n      this.setState({\n        create_show: true\n      });\n    }\n  }, {\n    key: \"CreateModal\",\n    value: function CreateModal() {\n      var _this4 = this;\n\n      return React.createElement(Modal, {\n        id: \"create_project_modal\",\n        show: this.state.create_show,\n        onHide: this.CreateModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Create a new project\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Project Name:\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"create_project_name\",\n        value: this.state.new_project_name,\n        onChange: function onChange(e) {\n          _this4.setState({\n            new_project_name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.CreateModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        id: \"confirm_create_project_button\",\n        variant: \"primary\",\n        onClick: function onClick() {\n          _this4.props.addProject(Number(localStorage.getItem('id')), _this4.state.new_project_name);\n\n          _this4.CreateModalClose();\n\n          _this4.setState({\n            new_project_name: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Confirm\")));\n    }\n  }, {\n    key: \"EditModalClose\",\n    value: function EditModalClose() {\n      this.setState({\n        edit_show: false\n      });\n    }\n  }, {\n    key: \"EditModalShow\",\n    value: function EditModalShow() {\n      this.setState({\n        edit_show: true\n      });\n    }\n  }, {\n    key: \"EditButton\",\n    value: function EditButton(project, key) {\n      this.setState({\n        edit_index: key,\n        edit_user_id: project.userId,\n        edit_project_id: project.id,\n        edit_project_name: project.projectname\n      });\n      this.EditModalShow();\n    }\n  }, {\n    key: \"EditModal\",\n    value: function EditModal() {\n      var _this5 = this;\n\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n        return React.createElement(Modal, {\n          id: \"edit_modal\",\n          show: this.state.edit_show,\n          onHide: this.EditModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"Edit this project\")), React.createElement(Modal.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, \"Project Name:\")), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"edit_project_name\",\n          value: this.state.edit_project_name,\n          onChange: function onChange(e) {\n            _this5.setState({\n              edit_project_name: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        })))), React.createElement(Modal.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"secondary\",\n          onClick: this.EditModalClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, \"Cancel\"), React.createElement(Button, {\n          id: \"confirm_edit\",\n          variant: \"primary\",\n          onClick: function onClick() {\n            _this5.props.putProject({\n              projectname: _this5.state.edit_project_name,\n              userId: _this5.state.edit_user_id,\n              projectId: _this5.state.edit_project_id\n            });\n\n            _this5.EditModalClose();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, \"Confirm\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(data) {\n      var selected = data.selected;\n      this.setState({\n        currentPage: selected\n      });\n    }\n  }, {\n    key: \"clickDropdown\",\n    value: function clickDropdown() {\n      var droplist = this.state.droplist;\n      this.setState({\n        droplist: !droplist\n      });\n    }\n  }, {\n    key: \"clickOption\",\n    value: function clickOption(e) {\n      var pageLimit = e.target.text;\n      this.setState({\n        pageLimit: pageLimit\n      });\n    }\n  }, {\n    key: \"handleTextUpdate\",\n    value: function handleTextUpdate(e) {\n      var keyword = e.target.value;\n      this.setState({\n        keyword: keyword\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      {\n        console.log(this.state.keyword);\n      }\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Projects Table\",\n        icon: \"pe-7s-graph3\",\n        hCenter: true,\n        ctTableFullWidth: true,\n        ctTableResponsive: true,\n        content: React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"widget-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-container col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Search on name...\",\n          id: \"general-search\",\n          onChange: this.handleTextUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"input-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"pe-7s-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"btn-container col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"create_project_button\",\n          className: \"col\",\n          variant: \"primary\",\n          onClick: function onClick() {\n            return _this6.CreateModalShow();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, \"Create New Project\"))), React.createElement(\"div\", {\n          className: \"table-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, React.createElement(Table, {\n          striped: true,\n          hover: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, \"Id\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, \"Project Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }, \"Sessions\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, \"Total Pomodoros\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, \"Operations\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, this.props.projectlist.filter(function (project) {\n          return project.projectname.includes(_this6.state.keyword);\n        }).slice(this.state.currentPage * this.state.pageLimit, this.state.currentPage * this.state.pageLimit + this.state.pageLimit).map(function (project, index) {\n          return React.createElement(ProjectList, {\n            project: project,\n            key: index,\n            index: index,\n            delete_button: function delete_button() {\n              return _this6.DelButton(project, index);\n            },\n            edit_button: function edit_button() {\n              return _this6.EditButton(project, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398\n            },\n            __self: this\n          });\n        })))), React.createElement(\"div\", {\n          className: \"pagination-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, React.createElement(ReactPaginate, {\n          previousLabel: 'previous',\n          nextLabel: 'next',\n          breakLabel: '...',\n          pageCount: Math.ceil(this.props.projectlist.filter(function (project) {\n            return project.projectname.includes(_this6.state.keyword);\n          }).length / this.state.pageLimit),\n          initialPage: 0,\n          marginPagesDisplayed: 1,\n          pageRangeDisplayed: 3,\n          containerClassName: 'pagination',\n          activeClassName: 'active',\n          onPageChange: this.onPageChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"page-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"page-dropdown\",\n          onClick: this.clickDropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"dropdown-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"filter-option\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"filter-option-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"filter-option-inner-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, this.state.pageLimit)))), React.createElement(\"div\", {\n          className: this.state.droplist ? \"dropdown-menu show\" : \"dropdown-menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          role: \"option\",\n          className: \"dropdown-item\",\n          onClick: this.clickOption,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, \"5\"))), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          role: \"option\",\n          className: \"dropdown-item\",\n          onClick: this.clickOption,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        }, \"10\"))), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          role: \"option\",\n          className: \"dropdown-item\",\n          onClick: this.clickOption,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, \"20\"))), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          role: \"option\",\n          className: \"dropdown-item\",\n          onClick: this.clickOption,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452\n          },\n          __self: this\n        }, \"30\"))))))), React.createElement(\"span\", {\n          className: \"page-detail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, \"Showing \", this.state.currentPage * this.state.pageLimit + 1, \" - \", this.state.currentPage * this.state.pageLimit + this.state.pageLimit > this.props.projectlist.filter(function (project) {\n          return project.projectname.includes(_this6.state.keyword);\n        }).length ? this.props.projectlist.filter(function (project) {\n          return project.projectname.includes(_this6.state.keyword);\n        }).length : Number(this.state.currentPage * this.state.pageLimit + this.state.pageLimit), \" of \", this.props.projectlist.filter(function (project) {\n          return project.projectname.includes(_this6.state.keyword);\n        }).length)))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      })))), React.createElement(this.DelModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(this.CreateModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }), React.createElement(this.ErrModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), React.createElement(this.EditModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Project;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);","map":{"version":3,"sources":["/Users/liuxu/Desktop/GT/2019-spring/cs6301/6301Spring19Web1/PTTWeb1/src/views/Project.tsx"],"names":["React","Container","Row","Col","Button","Table","Modal","Card","ReactPaginate","connect","fetchAllProjects","addProject","putProject","deleteProject","clearErrorMessage","ProjectList","mapStateToProps","state","projectlist","project","list","projectErrMess","errMess","mapDispatchToProps","dispatch","userId","projectname","projectId","Project","props","ErrModalClose","bind","ErrModal","DelModalShow","DelModalClose","DelModal","CreateModalShow","CreateModalClose","CreateModal","EditModalShow","EditModalClose","EditModal","onPageChange","clickDropdown","clickOption","handleTextUpdate","delete_show","delete_index","create_show","new_project_name","edit_show","edit_index","edit_user_id","edit_project_id","edit_project_name","currentPage","pageLimit","droplist","keyword","Number","localStorage","getItem","console","log","setState","key","report","sessions","length","id","color","DelProject","e","target","value","data","selected","text","filter","includes","slice","map","index","DelButton","EditButton","Math","ceil","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Container, Row, Col, Button, Table, Modal } from 'react-bootstrap';\nimport Card from '../components/Card/Card';\nimport ReactPaginate from 'react-paginate';\nimport { connect } from 'react-redux';\nimport { fetchAllProjects, addProject, putProject, deleteProject, clearErrorMessage} from '../redux/actionCreators/project.action';\n\nimport ProjectList from '../components/List/ProjectList';\n\nconst mapStateToProps = (state: any) => {\n   return {\n      projectlist: state.project.list,\n      projectErrMess: state.project.errMess\n   };\n};\n\nconst mapDispatchToProps = dispatch => ({\n   fetchAllProjects: userId => {\n      dispatch(fetchAllProjects(userId));\n   },\n   addProject: (userId, projectname) => {\n      dispatch(addProject(userId, projectname));\n   },\n   putProject: ({projectname, userId, projectId}) => {\n      dispatch(putProject({projectname, userId, projectId}));\n   },\n   deleteProject: (userId, projectId) => {\n      dispatch(deleteProject(userId, projectId));\n   },\n   clearErrorMessage: () => {\n      dispatch(clearErrorMessage())\n   }\n});\n\ninterface Props {\n   projectlist: any;\n   fetchAllProjects: any;\n   addProject: any;\n   putProject: any;\n   deleteProject: any;\n   clearErrorMessage: any;\n   projectErrMess: any;\n}\n\n// In page states only, like managing showing a modal and its content. Has nothing to do with redux's state\ninterface State {\n   delete_show: boolean;\n   delete_index: number;\n   create_show: boolean;\n   new_project_name: string;\n\n   edit_show: boolean;\n   edit_index: number;\n   edit_user_id: number,\n   edit_project_id: number,\n   edit_project_name: string;\n\n   currentPage: number;\n   pageLimit: number;\n   droplist: boolean;\n   keyword: string;\n}\n\nclass Project extends React.Component<Props, State> {\n   constructor(props: Props) {\n      super(props);\n\n      this.ErrModalClose = this.ErrModalClose.bind(this);\n      this.ErrModal = this.ErrModal.bind(this);\n\n      this.DelModalShow = this.DelModalShow.bind(this);\n      this.DelModalClose = this.DelModalClose.bind(this);\n      this.DelModal = this.DelModal.bind(this);\n\n      this.CreateModalShow = this.CreateModalShow.bind(this);\n      this.CreateModalClose = this.CreateModalClose.bind(this);\n      this.CreateModal = this.CreateModal.bind(this);\n\n      this.EditModalShow = this.EditModalShow.bind(this);\n      this.EditModalClose = this.EditModalClose.bind(this);\n      this.EditModal = this.EditModal.bind(this);\n\n      this.onPageChange = this.onPageChange.bind(this);\n      this.clickDropdown = this.clickDropdown.bind(this);\n      this.clickOption = this.clickOption.bind(this);\n      this.handleTextUpdate = this.handleTextUpdate.bind(this);\n\n      this.state = {\n         delete_show: false,\n         delete_index: 0,\n\n         create_show: false,\n         new_project_name: '',\n\n         edit_show: false,\n         edit_index: 0,\n         edit_user_id: 0,\n         edit_project_id: 0,\n         edit_project_name: '',\n\n         currentPage: 0,\n         pageLimit: 5,\n         droplist: false,\n         keyword: \"\"\n      };\n   }\n\n   componentDidMount() {\n      this.props.fetchAllProjects(Number(localStorage.getItem('id')));\n      console.log()\n   }\n\n   // Error modal\n   ErrModalClose() {\n      this.props.clearErrorMessage();\n   }\n\n   ErrModal() {\n      return (\n         <Modal id=\"error_modal\" show={this.props.projectErrMess != null} onHide={this.ErrModalClose}>\n            <Modal.Header closeButton>\n               <Modal.Title>Error Code</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n               {this.props.projectErrMess}\n            </Modal.Body>\n            <Modal.Footer>\n               <Button\n                  variant=\"primary\"\n                  onClick={() => this.ErrModalClose()}\n               >\n                  OK\n               </Button>\n            </Modal.Footer>\n         </Modal>\n      );\n   }\n\n   // Delete modal\n   DelModalClose() {\n      this.setState({ delete_show: false });\n   }\n\n   DelModalShow() {\n      this.setState({ delete_show: true });\n   }\n\n   DelButton(project: any, key: number) {\n      \n      if (project.report.sessions && project.report.sessions.length != 0) {\n         //if there is pomodoro, popup the confirmation for user\n         this.setState({ delete_index: key });\n         this.DelModalShow();\n      } else {\n      this.props.deleteProject(project.userId, project.id);\n      }\n   }\n\n   DelProject(project: any) {\n      //Delete the projects\n      if (this.state.delete_show) {\n         this.DelModalClose();\n      }\n      this.props.deleteProject(project.userId, project.id);\n   }\n\n   DelModal() {\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n         return (\n            <Modal id=\"delete_modal\" show={this.state.delete_show} onHide={this.DelModalClose}>\n               <Modal.Header closeButton>\n                  <Modal.Title>Delete Confirmation</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  Project name: {this.props.projectlist[this.state.delete_index].projectname}\n                  <br />\n                  <div className=\"confirm-msg\">\n                     <p style={{color:'red'}}>\n                        This project has sessions associate with it.\n                     </p>\n                     <p>Are you sure to delete the user?</p>\n                  </div>\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"secondary\" id=\"cancel_delete\" onClick={this.DelModalClose}>\n                     Cancel\n                  </Button>\n                  <Button\n                     variant=\"primary\"\n                     id=\"confirm_delete\"\n                     onClick={() => this.DelProject(this.props.projectlist[this.state.delete_index])}\n                  >\n                     Confirm\n                  </Button>\n               </Modal.Footer>\n            </Modal>\n         );\n      } else {\n         return <div />;\n      }\n   }\n\n   CreateModalClose() {\n      this.setState({ create_show: false });\n   }\n\n   CreateModalShow() {\n      this.setState({ create_show: true });\n   }\n\n   CreateModal() {\n      return (\n         <Modal id=\"create_project_modal\" show={this.state.create_show} onHide={this.CreateModalClose}>\n            <Modal.Header closeButton>\n               <Modal.Title>Create a new project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n               <Row>\n                  <Col>\n                     <span>Project Name:</span>\n                  </Col>\n                  <Col>\n                     <input\n                        id=\"create_project_name\"\n                        value={this.state.new_project_name}\n                        onChange={(e: any) => {\n                           this.setState({ new_project_name: e.target.value });\n                        }}\n                     />\n                  </Col>\n               </Row>\n            </Modal.Body>\n            <Modal.Footer>\n               <Button variant=\"secondary\" onClick={this.CreateModalClose}>\n                  Cancel\n               </Button>\n               <Button\n                  id=\"confirm_create_project_button\"\n                  variant=\"primary\"\n                  onClick={() => {\n                     this.props.addProject(Number(localStorage.getItem('id')), this.state.new_project_name);\n                     this.CreateModalClose();\n                     this.setState({ new_project_name: '' });\n                  }}\n               >\n                  Confirm\n               </Button>\n            </Modal.Footer>\n         </Modal>\n      );\n   }\n\n   EditModalClose() {\n      this.setState({ edit_show: false });\n   }\n\n   EditModalShow() {\n      this.setState({ edit_show: true });\n   }\n\n   EditButton(project: any, key: number) {\n      this.setState({\n         edit_index: key,\n         edit_user_id: project.userId,\n         edit_project_id: project.id,\n         edit_project_name: project.projectname\n      });\n      this.EditModalShow();\n   }\n\n   EditModal() {\n      if (this.props.projectlist && this.state.delete_index < this.props.projectlist.length) {\n         return (\n            <Modal id=\"edit_modal\" show={this.state.edit_show} onHide={this.EditModalClose}>\n               <Modal.Header closeButton>\n                  <Modal.Title>Edit this project</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <Row>\n                     <Col>\n                        <span>Project Name:</span>\n                     </Col>\n                     <Col>\n                        <input\n                           id=\"edit_project_name\"\n                           value={this.state.edit_project_name}\n                           onChange={(e: any) => {\n                              this.setState({ edit_project_name: e.target.value });\n                           }}\n                        />\n                     </Col>\n                  </Row>\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={this.EditModalClose}>\n                     Cancel\n                  </Button>\n                  <Button\n                     id=\"confirm_edit\"\n                     variant=\"primary\"\n                     onClick={() => {\n                        this.props.putProject({\n                           projectname: this.state.edit_project_name,\n                           userId: this.state.edit_user_id,\n                           projectId: this.state.edit_project_id\n                        });\n                        this.EditModalClose();\n                     }}\n                  >\n                     Confirm\n                  </Button>\n               </Modal.Footer>\n            </Modal>\n         );\n      } else {\n         return <div />;\n      }\n   }\n\n   onPageChange (data) {\n      let selected = data.selected;\n      this.setState({\n         currentPage: selected\n      });\n   }\n\n   clickDropdown() {\n      const {droplist } = this.state;\n      this.setState({\n         droplist: !droplist\n      });\n   }\n\n   clickOption(e) {\n      let pageLimit = e.target.text;\n      this.setState({\n         pageLimit: pageLimit\n      });\n   }\n\n   handleTextUpdate(e) {\n      let keyword = e.target.value;\n      this.setState({\n         keyword: keyword\n      });\n   }\n\n   render() {\n      {console.log(this.state.keyword)}\n      return (\n         <div className=\"content\">\n            <Container fluid>\n               <Row>\n                  <Col md={12}>\n                     <Card\n                        title=\"Projects Table\"\n                        icon=\"pe-7s-graph3\"\n                        hCenter={true}\n                        ctTableFullWidth\n                        ctTableResponsive\n                        content={\n                           <div className=\"card-content\">\n                              <div className=\"widget-row\">\n                                 <div className=\"input-container col-md-4\">\n                                    <input type=\"text\" placeholder=\"Search on name...\" id=\"general-search\" onChange={this.handleTextUpdate}/>\n                                    <span className=\"input-icon\">\n                                       <span><i className=\"pe-7s-search\" /></span>\n                                    </span>\n                                 </div>\n                                 <div className=\"btn-container col-md-3\">\n                                    <Button\n                                       id=\"create_project_button\"\n                                       className=\"col\"\n                                       variant=\"primary\"\n                                       onClick={() => this.CreateModalShow()}\n                                    >\n                                       Create New Project\n                                    </Button>\n                                 </div>\n                              </div>\n                              <div className=\"table-container\">\n                                 <Table striped hover>\n                                    <thead>\n                                       <tr>\n                                          <th>Id</th>\n                                          <th>Project Name</th>\n                                          <th>Sessions</th>\n                                          <th>Total Pomodoros</th>\n                                          <th>Operations</th>\n                                       </tr>\n                                    </thead>\n                                    <tbody>\n                                       {\n                                          this.props.projectlist.filter(project => {return project.projectname.includes(this.state.keyword)})\n                                          .slice(this.state.currentPage * this.state.pageLimit, this.state.currentPage*this.state.pageLimit + this.state.pageLimit)\n                                          .map((project: any, index: number) => {\n                                             return (\n                                                <ProjectList\n                                                   project={project}\n                                                   key={index}\n                                                   index={index}\n                                                   delete_button={() => this.DelButton(project, index)}\n                                                   edit_button={() => this.EditButton(project, index)}\n                                                />\n                                             );\n                                       })}\n                                    </tbody>\n                                 </Table>\n                              </div>\n                              <div className=\"pagination-container\">\n                                 <ReactPaginate\n                                    previousLabel={'previous'}\n                                    nextLabel={'next'}\n                                    breakLabel={'...'}\n                                    pageCount={Math.ceil(this.props.projectlist.filter(project => {return project.projectname.includes(this.state.keyword)}).length / this.state.pageLimit)}\n                                    initialPage={0}\n                                    marginPagesDisplayed={1}\n                                    pageRangeDisplayed={3}\n                                    containerClassName={'pagination'}\n                                    activeClassName={'active'}\n                                    onPageChange={this.onPageChange}\n                                 />\n                                 <div className=\"page-info\">\n                                       <div className=\"page-dropdown\" onClick={this.clickDropdown}>\n                                          <button className=\"dropdown-toggle\">\n                                             <div className=\"filter-option\">\n                                                <div className=\"filter-option-inner\">\n                                                   <div className=\"filter-option-inner-inner\">{this.state.pageLimit}</div>\n                                                </div>\n                                             </div>\n                                          </button>\n                                          <div className={this.state.droplist? \"dropdown-menu show\" : \"dropdown-menu\"}>\n                                             <div className=\"inner\">\n                                             <ul>\n                                                   <li>\n                                                      <a role=\"option\" className=\"dropdown-item\" onClick={this.clickOption}>\n                                                         <span className=\"text\">5</span>\n                                                      </a>\n                                                   </li>\n                                                   <li>\n                                                      <a role=\"option\" className=\"dropdown-item\" onClick={this.clickOption}>\n                                                         <span className=\"text\">10</span>\n                                                      </a>\n                                                   </li>\n                                                   <li>\n                                                      <a role=\"option\" className=\"dropdown-item\" onClick={this.clickOption}>\n                                                         <span className=\"text\">20</span>\n                                                      </a>\n                                                   </li>\n                                                   <li>\n                                                      <a role=\"option\" className=\"dropdown-item\" onClick={this.clickOption}>\n                                                         <span className=\"text\">30</span>\n                                                      </a>\n                                                   </li>\n                                                </ul>\n                                             </div>\n                                          </div>\n                                       </div>\n                                       <span className=\"page-detail\">\n                                          Showing {this.state.currentPage*this.state.pageLimit+1} - {(this.state.currentPage*this.state.pageLimit+this.state.pageLimit > this.props.projectlist.filter(project => {return project.projectname.includes(this.state.keyword)}).length) ? this.props.projectlist.filter(project => {return project.projectname.includes(this.state.keyword)}).length : Number(this.state.currentPage*this.state.pageLimit+this.state.pageLimit)} of {this.props.projectlist.filter(project => {return project.projectname.includes(this.state.keyword)}).length}     \n                                       </span>\n                                 </div>\n                              </div>\n                           </div>\n                        }\n                     />\n                  </Col>\n               </Row>\n            </Container>\n            <this.DelModal />\n            <this.CreateModal />\n            <this.ErrModal />\n            <this.EditModal />\n         </div>\n      );\n   }\n}\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(Project);\n"]},"metadata":{},"sourceType":"module"}